{"version":3,"file":"static/js/1752.2c8208b3.chunk.js","mappings":"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","sources":["layouts/AppLayout/SideBar/index.js","layouts/AppLayout/index.js","webpack://react-chat-app/./src/layouts/AppLayout/AppLayout.module.scss?4dfb","webpack://react-chat-app/./src/layouts/AppLayout/SideBar/SideBar.module.scss?ab09"],"sourcesContent":["import React, { useLayoutEffect, useMemo, useRef } from \"react\";\nimport { useAuth, useRouter } from \"hooks\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"utils\";\nimport { Avatar, DropDown, Tooltip } from \"components\";\n\nimport styles from \"./SideBar.module.scss\";\n\nexport const SideBar = ({ theme, toggleTheme }) => {\n  let tabRef = useRef();\n\n  let indicatorRef = useRef();\n\n  const { pathName } = useRouter();\n\n  const { logout } = useAuth();\n\n  const tabs = [\n    {\n      icon: \"bx-user-circle\",\n      label: \"Profile\",\n      to: \"/profile\",\n    },\n    {\n      icon: \"bx-conversation\",\n      label: \"Chats\",\n      to: \"/chats\",\n    },\n    {\n      icon: \"bxs-user-detail\",\n      label: \"Contacts\",\n      to: \"/contacts\",\n    },\n    {\n      icon: \"bx-phone-call\",\n      label: \"Calls\",\n      to: \"/calls\",\n    },\n    {\n      icon: \"bx-cog\",\n      label: \"Settings\",\n      to: \"/settings\",\n    },\n  ];\n\n  const dropdown = [\n    {\n      label: \"Profile\",\n      icon: \"bx-user-circle\",\n      to: \"profile\",\n    },\n    {\n      label: \"Settings\",\n      icon: \"bx-cog\",\n      to: \"settings\",\n    },\n    {\n      label: \"Change Password\",\n      icon: \"bx-lock-open\",\n      to: \"/auth/change-password\",\n    },\n  ];\n\n  useLayoutEffect(() => {\n    let index = tabs.findIndex(({ to }) => to === pathName);\n\n    const { matches } = window.matchMedia(`(max-width: 768px)`);\n\n    let { clientHeight, offsetTop, offsetLeft, clientWidth } =\n      tabRef.current?.children[index];\n\n    if (matches) {\n      indicatorRef.current.style.width = `${clientWidth}px`;\n      indicatorRef.current.style.left = `${offsetLeft}px`;\n    } else {\n      indicatorRef.current.style.height = `${clientHeight}px`;\n      indicatorRef.current.style.top = `${offsetTop}px`;\n    }\n  }, [pathName]);\n\n  const tooltipPlacement = useMemo(() => {\n    const { matches } = window.matchMedia(`(max-width: 768px)`);\n    return matches ? \"top\" : \"right\";\n  }, []);\n\n  return (\n    <div className={styles.sidebar}>\n      <div className={styles.logo}>\n        <i className=\"bxs-message-alt-detail\"></i>\n      </div>\n      <div className={styles.nav_wrapper} ref={tabRef}>\n        {tabs.map(({ icon, label, to }, index) => {\n          return (\n            <NavLink\n              key={index}\n              to={to}\n              className={({ isActive }) =>\n                classNames(styles.nav_item, {\n                  [styles.active]: isActive,\n                })\n              }\n            >\n              <i\n                className={classNames(icon, styles.nav_icon)}\n                id={`nav-${index}`}\n              ></i>\n              <Tooltip\n                offset={[0, 20]}\n                placement={tooltipPlacement}\n                selector={`#nav-${index}`}\n              >\n                <span>{label}</span>\n              </Tooltip>\n            </NavLink>\n          );\n        })}\n        <div className={classNames(styles.nav_item, styles.theme)}>\n          <div className={styles.nav_icon}>\n            <i\n              id=\"theme\"\n              className={theme === \"light\" ? \"bx-moon\" : \"bx-sun\"}\n              onClick={toggleTheme(theme === \"light\" ? \"dark\" : \"light\")}\n            ></i>\n            <Tooltip\n              placement={tooltipPlacement}\n              selector=\"#theme\"\n              offset={[0, 20]}\n            >\n              {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n            </Tooltip>\n          </div>\n        </div>\n        <div\n          id=\"avatar\"\n          className={classNames(styles.nav_item, styles.profile)}\n        >\n          <Avatar\n            src=\"https://themesbrand.com/doot/layouts/assets/images/users/avatar-1.jpg\"\n            size={40}\n            outline\n          />\n        </div>\n        <DropDown selector=\"#avatar\" placement=\"top\">\n          {dropdown.map(({ label, icon, to }, index) => {\n            return (\n              <NavLink key={index} to={to}>\n                <DropDown.Item className={styles.avatar_option}>\n                  <span>{label}</span>\n                  <i className={icon}></i>\n                </DropDown.Item>\n              </NavLink>\n            );\n          })}\n          <DropDown.Item onClick={logout} className={styles.avatar_option}>\n            <span>Logout</span>\n            <i className=\"bx-log-out-circle\"></i>\n          </DropDown.Item>\n        </DropDown>\n        <div ref={indicatorRef} className={styles.tab_indicator}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { SideBar } from \"./SideBar\";\nimport { Chats } from \"components\";\nimport { useLocalStorage, useRouter } from \"hooks\";\nimport { Outlet } from \"react-router-dom\";\n\nimport styles from \"./AppLayout.module.scss\";\n\nconst AppLayout = () => {\n  const { getItem, setItem } = useLocalStorage();\n\n  const { pathName } = useRouter();\n\n  const [theme, setTheme] = useState();\n\n  useEffect(() => {\n    document.body.classList.add(\"hide-scroll\");\n    let val = getItem(\"theme\") ?? \"light\";\n    let root = document.querySelector(\":root\");\n    root.setAttribute(\"data-theme\", val);\n    setTheme(val);\n    return () => {\n      document.body.classList.remove(\"hide-scroll\");\n    };\n  }, []);\n\n  const toggleTheme = (val) => () => {\n    let root = document.querySelector(\":root\");\n    root.setAttribute(\"data-theme\", val);\n    setItem(\"theme\", val);\n    setTheme(val);\n  };\n\n  return (\n    <Fragment>\n      <SideBar theme={theme} toggleTheme={toggleTheme} />\n      <div className={styles.app_layout}>\n        <div className={styles.pages_container}>\n          <Outlet />\n        </div>\n        <Chats />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AppLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"app_layout\":\"AppLayout_app_layout__4MY6X\",\"pages_container\":\"AppLayout_pages_container__NUOnl\"};","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"SideBar_sidebar__0nIPq\",\"logo\":\"SideBar_logo__sX0Lu\",\"nav_wrapper\":\"SideBar_nav_wrapper__n4wWR\",\"nav_item\":\"SideBar_nav_item__0Lxi5\",\"active\":\"SideBar_active__3jQdi\",\"theme\":\"SideBar_theme__Ci0nU\",\"nav_icon\":\"SideBar_nav_icon__WkDU2\",\"tab_indicator\":\"SideBar_tab_indicator__dSGyQ\",\"avatar_option\":\"SideBar_avatar_option__sjglN\",\"profile\":\"SideBar_profile__rqxDK\"};"],"names":["SideBar","theme","toggleTheme","tabRef","useRef","indicatorRef","pathName","useRouter","logout","useAuth","tabs","icon","label","to","useLayoutEffect","index","findIndex","matches","window","matchMedia","current","children","clientHeight","offsetTop","offsetLeft","clientWidth","style","width","left","height","top","tooltipPlacement","useMemo","className","styles","ref","map","isActive","classNames","id","Tooltip","offset","placement","selector","onClick","Avatar","src","size","outline","DropDown","useLocalStorage","getItem","setItem","useState","setTheme","useEffect","document","body","classList","add","val","querySelector","setAttribute","remove","Fragment","Chats"],"sourceRoot":""}