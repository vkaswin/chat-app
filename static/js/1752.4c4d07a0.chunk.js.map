{"version":3,"file":"static/js/1752.4c4d07a0.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chats/Conversation/index.js","layouts/AppLayout/Chats/TextArea/Emoji/index.js","layouts/AppLayout/Chats/TextArea/index.js","layouts/AppLayout/Chats/index.js","layouts/AppLayout/SideBar/index.js","layouts/AppLayout/index.js","webpack://react-chat-app/./src/layouts/AppLayout/AppLayout.module.scss?4dfb","webpack://react-chat-app/./src/layouts/AppLayout/Chats/Chats.module.scss?d575","webpack://react-chat-app/./src/layouts/AppLayout/Chats/Conversation/Conversation.module.scss?eae9","webpack://react-chat-app/./src/layouts/AppLayout/Chats/TextArea/Emoji/Emoji.module.scss?1902","webpack://react-chat-app/./src/layouts/AppLayout/Chats/TextArea/TextArea.module.scss?83ef","webpack://react-chat-app/./src/layouts/AppLayout/SideBar/SideBar.module.scss?ab09"],"sourcesContent":["import React from \"react\";\nimport { classNames } from \"utils\";\nimport { DropDown } from \"components\";\n\nimport styles from \"./Conversation.module.scss\";\n\nexport const Conversation = ({ chats }) => {\n  const dropDown = [\n    {\n      icon: \"bx-share ms-2\",\n      label: \"Reply\",\n    },\n    {\n      icon: \"bx-share-alt\",\n      label: \"Forward\",\n    },\n    {\n      icon: \"bx-copy text-muted\",\n      label: \"Copy\",\n    },\n    {\n      icon: \"bx-bookmarks text-muted\",\n      label: \"Bookmark\",\n    },\n    {\n      icon: \"bx-message-error\",\n      label: \"Mark as Unread\",\n    },\n    {\n      icon: \"bx-trash text-muted\",\n      label: \"Delete\",\n    },\n  ];\n\n  return (\n    <div className={styles.conversation_container}>\n      {chats.map(({ msg, datetime }, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.chat_wrapper, {\n              [styles.end]: index % 2 === 0,\n            })}\n          >\n            <div className={styles.chat_card}>\n              <div>\n                <span>{msg}</span>\n              </div>\n              <div className={styles.msg_time}>\n                <i className={`bx-time ${styles.clock}`}></i>\n                <span>{datetime}</span>\n                <i\n                  className={`bx bx-check-double ${styles.tick}`}\n                  data-seen={true}\n                ></i>\n              </div>\n            </div>\n            <div className={styles.options}>\n              <i\n                className=\"bx-dots-vertical-rounded\"\n                id={`chat-option-${index}`}\n              ></i>\n              <DropDown\n                selector={`#chat-option-${index}`}\n                position=\"bottom-center\"\n              >\n                {dropDown.map(({ label, icon }, index) => {\n                  return (\n                    <DropDown.Item key={index} className={styles.chat_option}>\n                      <span>{label}</span>\n                      <i className={icon}></i>\n                    </DropDown.Item>\n                  );\n                })}\n              </DropDown>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useRef, useEffect, Fragment } from \"react\";\nimport { Portal, Popper, Tooltip } from \"components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { clickOutside } from \"utils\";\nimport emojis from \"data/emoji.json\";\n\nimport styles from \"./Emoji.module.scss\";\n\nexport const Emoji = ({ toggle, isOpen, selector, onChange }) => {\n  const types = [\n    {\n      label: \"Smileys & People\",\n      icon: \"bx-smile\",\n    },\n    {\n      label: \"Animals & Nature\",\n      icon: \"bx-leaf\",\n    },\n    {\n      label: \"Travel & Places\",\n      icon: \"bx-home-alt\",\n    },\n    {\n      label: \"Activities\",\n      icon: \"bx-baseball\",\n    },\n    {\n      label: \"Objects\",\n      icon: \"bx-world\",\n    },\n    {\n      label: \"Symbols\",\n      icon: \"bx-bulb\",\n    },\n    {\n      label: \"Flags\",\n      icon: \"bx-flag\",\n    },\n  ];\n\n  const targetRef = useRef();\n\n  const emojiRef = useRef();\n\n  useEffect(() => {\n    if (selector.length === 0) return;\n\n    const element = document.querySelector(selector);\n\n    if (!element) return;\n\n    targetRef.current = element;\n    element.onclick = toggle;\n  }, []);\n\n  const onEntered = (ele) => {\n    clickOutside({\n      ref: ele,\n      onClose: toggle,\n      doNotClose: (event) => {\n        return targetRef.current.contains(event);\n      },\n    });\n  };\n\n  const handleFocus = (title) => () => {\n    const { offsetTop } = document.querySelector(\n      `[data-emoji-title=\"${title}\"]`\n    );\n    emojiRef.current.scrollTo(0, offsetTop - 95);\n  };\n\n  const handleEmoji = (emoji) => () => {\n    onChange(emoji);\n    toggle();\n  };\n\n  return (\n    <Portal>\n      <CSSTransition\n        in={isOpen}\n        timeout={300}\n        unmountOnExit\n        classNames={{\n          enterActive: styles.emoji_enter,\n          exitActive: styles.emoji_exit,\n        }}\n        onEntered={onEntered}\n      >\n        <div>\n          <Popper\n            referenceElement={targetRef}\n            position=\"top-center\"\n            offset={20}\n            render={({ popper, position, ref }) => {\n              return (\n                <div\n                  ref={ref}\n                  className={styles.emoji_container}\n                  data-position={position}\n                  style={popper}\n                >\n                  <div className={styles.emoji_wrapper}>\n                    <div className={styles.emoji_header}>\n                      {types.map(({ label, icon }, index) => {\n                        return (\n                          <div\n                            key={index}\n                            id={`emoji-type-${index}`}\n                            className={styles.emoji_type}\n                            onClick={handleFocus(label)}\n                          >\n                            <i className={icon}></i>\n                            <Tooltip\n                              position=\"top-center\"\n                              selector={`#emoji-type-${index}`}\n                              offset={20}\n                            >\n                              {label}\n                            </Tooltip>\n                          </div>\n                        );\n                      })}\n                      <div\n                        id=\"emoji-close\"\n                        className={styles.close}\n                        onClick={toggle}\n                      >\n                        <span>&#10799;</span>\n                        <Tooltip\n                          position=\"top-center\"\n                          selector={`#emoji-close`}\n                          offset={15}\n                        >\n                          Close\n                        </Tooltip>\n                      </div>\n                    </div>\n                    <div className={styles.search_emoji}>\n                      <input type=\"text\" placeholder=\"Search Emoji\" />\n                      <div className={styles.search_icon}>\n                        <i className=\"bx-search-alt-2\"></i>\n                      </div>\n                    </div>\n                    <div className={styles.emoji_card} ref={emojiRef}>\n                      {Object.entries(emojis).map(([title, list], index) => {\n                        return (\n                          <div key={index}>\n                            <div\n                              className={styles.emoji_title}\n                              data-emoji-title={title}\n                            >\n                              <b>{title}</b>\n                            </div>\n                            <div className={styles.emoji_list}>\n                              {list.map(({ emoji, description }, index) => {\n                                return (\n                                  <button\n                                    key={index}\n                                    title={description}\n                                    onClick={handleEmoji(emoji)}\n                                  >\n                                    <div className={styles.emoji_icon}>\n                                      {emoji}\n                                    </div>\n                                  </button>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n              );\n            }}\n          ></Popper>\n        </div>\n      </CSSTransition>\n    </Portal>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Emoji } from \"./Emoji\";\n\nimport styles from \"./TextArea.module.scss\";\n\nexport const TextArea = ({ onSend }) => {\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const [text, setText] = useState(\"\");\n\n  const handleChange = ({ target: { value } }) => {\n    setText(value);\n  };\n\n  const handleEmoji = (emoji) => {\n    setText(text.concat(emoji));\n  };\n\n  const toggleEmoji = () => {\n    setShowEmoji(!showEmoji);\n  };\n\n  const handleSend = () => {\n    onSend(text);\n    setText(\"\");\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.chat_input}>\n        <i className=\"bx-paperclip\" id=\"attach\"></i>\n        <i className=\"bx-smile\" id=\"emoji\"></i>\n        <textarea name=\"chat-input\" value={text} onChange={handleChange} />\n        <i className=\"bx-microphone\" id=\"mic\"></i>\n        <button onClick={handleSend}>\n          <i className=\"bxs-send\"></i>\n        </button>\n      </div>\n      <Emoji\n        selector=\"#emoji\"\n        isOpen={showEmoji}\n        toggle={toggleEmoji}\n        onChange={handleEmoji}\n      />\n    </Fragment>\n  );\n};\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { DropDown, Avatar, OffCanvas } from \"components\";\nimport { TextArea } from \"./TextArea\";\nimport { Conversation } from \"./Conversation\";\nimport chatData from \"data/chats.json\";\n\nimport styles from \"./Chats.module.scss\";\n\nexport const Chats = () => {\n  const moreDropDown = [\n    {\n      label: \"Archive\",\n      icon: \"bx-archive\",\n    },\n    {\n      label: \"Muted\",\n      icon: \"bx-microphone-off\",\n    },\n    {\n      label: \"Delete\",\n      icon: \"bx-trash\",\n    },\n  ];\n\n  const [chats, setChats] = useState(chatData.chats);\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  useLayoutEffect(() => {\n    const { scrollHeight } = document.body;\n    window.scrollTo(0, scrollHeight);\n  }, []);\n\n  const toggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n\n  const sendMessage = (msg) => {\n    console.log(msg);\n  };\n\n  return (\n    <div className={styles.chat_container}>\n      <Conversation chats={chats} />\n      <div className={styles.chat_header}>\n        <div className={styles.user_info}>\n          <Avatar\n            src=\"https://themesbrand.com/doot/layouts/assets/images/users/avatar-2.jpg\"\n            size={50}\n            status\n          />\n          <div className={styles.user_name}>\n            <b>Bella Cote</b>\n            <span>Online</span>\n          </div>\n        </div>\n        <div className={styles.chat_icons}>\n          <i className=\"bx-search\"></i>\n          <i className=\"bxs-phone-call\"></i>\n          <i className=\"bx-video\"></i>\n          <i className=\"bxs-info-circle\" onClick={toggleInfo}></i>\n          <i className=\"bx-dots-vertical-rounded\" id=\"more-option\"></i>\n          <DropDown selector=\"#more-option\" position=\"bottom-end\">\n            {moreDropDown.map(({ label, icon }, index) => {\n              return (\n                <DropDown.Item key={index} className={styles.more_option}>\n                  <span>{label}</span>\n                  <i className={icon}></i>\n                </DropDown.Item>\n              );\n            })}\n          </DropDown>\n        </div>\n      </div>\n      <TextArea onSend={sendMessage} />\n      <OffCanvas\n        isOpen={showInfo}\n        position=\"right\"\n        className={styles.profile_sidebar}\n        toggle={toggleInfo}\n        overlay={false}\n      >\n        <div>helo</div>\n      </OffCanvas>\n    </div>\n  );\n};\n","import React, { useLayoutEffect, useRef } from \"react\";\nimport { useRouter } from \"hooks\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"utils\";\nimport { Avatar, DropDown, Tooltip } from \"components\";\n\nimport styles from \"./SideBar.module.scss\";\n\nexport const SideBar = ({ theme, toggleTheme }) => {\n  let tabRef = useRef();\n\n  let indicatorRef = useRef();\n\n  const { pathName } = useRouter();\n\n  const tabs = [\n    {\n      icon: \"bx-user-circle\",\n      label: \"Profile\",\n      to: \"profile\",\n    },\n    {\n      icon: \"bx-conversation\",\n      label: \"Chats\",\n      to: \"chats\",\n    },\n    {\n      icon: \"bxs-user-detail\",\n      label: \"Contacts\",\n      to: \"contacts\",\n    },\n    {\n      icon: \"bx-phone-call\",\n      label: \"Calls\",\n      to: \"calls\",\n    },\n    {\n      icon: \"bx-cog\",\n      label: \"Settings\",\n      to: \"settings\",\n    },\n  ];\n\n  const dropdown = [\n    {\n      label: \"Profile\",\n      icon: \"bx-user-circle\",\n      to: \"profile\",\n    },\n    {\n      label: \"Settings\",\n      icon: \"bx-cog\",\n      to: \"settings\",\n    },\n    {\n      label: \"Change Password\",\n      icon: \"bx-lock-open\",\n      to: \"change-password\",\n    },\n    {\n      label: \"Logout\",\n      icon: \"bx-log-out-circle\",\n      to: \"login\",\n    },\n  ];\n\n  useLayoutEffect(() => {\n    let match = pathName.split(\"/\")[1];\n    let index = tabs.findIndex(({ to }) => to === match);\n\n    let { clientHeight, offsetTop } = tabRef.current?.children[index];\n\n    indicatorRef.current.style.height = `${clientHeight}px`;\n    indicatorRef.current.style.top = `${offsetTop}px`;\n  }, [pathName]);\n\n  return (\n    <div className={styles.sidebar}>\n      <div>\n        <div className={styles.logo}>\n          <i className=\"bxs-message-alt-detail\"></i>\n        </div>\n        <div className={styles.top_nav} ref={tabRef}>\n          {tabs.map(({ icon, label, to }, index) => {\n            return (\n              <NavLink\n                key={index}\n                to={to}\n                className={({ isActive }) =>\n                  classNames(styles.nav_item, { [styles.active]: isActive })\n                }\n              >\n                <i className={icon} id={label.toLowerCase()}></i>\n                <Tooltip\n                  offset={20}\n                  position=\"right-center\"\n                  selector={`#${label.toLowerCase()}`}\n                >\n                  <span>{label}</span>\n                </Tooltip>\n              </NavLink>\n            );\n          })}\n          <div ref={indicatorRef} className={styles.tab_indicator}></div>\n        </div>\n      </div>\n      <div>\n        <div className={styles.bottom_nav}>\n          <div className={styles.theme_icon}>\n            {theme === \"light\" ? (\n              <i className=\"bx-moon\" onClick={toggleTheme(\"dark\")}></i>\n            ) : (\n              <i className=\"bx-sun\" onClick={toggleTheme(\"light\")}></i>\n            )}\n          </div>\n          <div id=\"avatar\">\n            <Avatar\n              src=\"https://themesbrand.com/doot/layouts/assets/images/users/avatar-1.jpg\"\n              size={40}\n              outline\n            />\n          </div>\n          <DropDown selector=\"#avatar\" position=\"top-center\">\n            {dropdown.map(({ label, icon, to }, index) => {\n              return (\n                <NavLink key={index} to={to}>\n                  <DropDown.Item className={styles.avatar_option}>\n                    <span>{label}</span>\n                    <i className={icon}></i>\n                  </DropDown.Item>\n                </NavLink>\n              );\n            })}\n          </DropDown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { SideBar } from \"./SideBar\";\nimport { Chats } from \"./Chats\";\nimport { useLocalStorage } from \"hooks\";\n\nimport styles from \"./AppLayout.module.scss\";\n\nconst AppLayout = () => {\n  const { getItem, setItem } = useLocalStorage();\n\n  const [theme, setTheme] = useState();\n\n  useEffect(() => {\n    let val = getItem(\"theme\") ?? \"light\";\n    let root = document.querySelector(\":root\");\n    root.setAttribute(\"data-theme\", val);\n    setTheme(val);\n  }, []);\n\n  const toggleTheme = (val) => () => {\n    let root = document.querySelector(\":root\");\n    root.setAttribute(\"data-theme\", val);\n    setItem(\"theme\", val);\n    setTheme(val);\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.app_layout}>\n        <div>\n          <div className={styles.pages_container}>\n            <Outlet />\n          </div>\n        </div>\n        <Chats />\n      </div>\n      <SideBar theme={theme} toggleTheme={toggleTheme} />\n    </Fragment>\n  );\n};\n\nexport default AppLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"app_layout\":\"AppLayout_app_layout__4MY6X\",\"pages_container\":\"AppLayout_pages_container__NUOnl\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_container\":\"Chats_chat_container__dw9v1\",\"chat_header\":\"Chats_chat_header__oSRpJ\",\"user_info\":\"Chats_user_info__R7UuI\",\"user_name\":\"Chats_user_name__hOeU3\",\"chat_icons\":\"Chats_chat_icons__jh6im\",\"more_option\":\"Chats_more_option__M8Npj\",\"profile_sidebar\":\"Chats_profile_sidebar__ZP1Tf\"};","// extracted by mini-css-extract-plugin\nexport default {\"conversation_container\":\"Conversation_conversation_container__6wBY5\",\"chat_wrapper\":\"Conversation_chat_wrapper__FyiKP\",\"end\":\"Conversation_end__Kjdak\",\"chat_card\":\"Conversation_chat_card__-jtgC\",\"msg_time\":\"Conversation_msg_time__DOXK4\",\"tick\":\"Conversation_tick__mIHFz\",\"options\":\"Conversation_options__mUos4\",\"clock\":\"Conversation_clock__iF39p\",\"chat_option\":\"Conversation_chat_option__enVL0\"};","// extracted by mini-css-extract-plugin\nexport default {\"emoji_enter\":\"Emoji_emoji_enter__w7yZT\",\"emoji_container\":\"Emoji_emoji_container__HXSvO\",\"emoji_wrapper\":\"Emoji_emoji_wrapper__kFwoG\",\"emoji-anime\":\"Emoji_emoji-anime__ESXmi\",\"emoji_exit\":\"Emoji_emoji_exit__ZVQuH\",\"emoji_header\":\"Emoji_emoji_header__gxRGj\",\"emoji_type\":\"Emoji_emoji_type__Ud0mK\",\"close\":\"Emoji_close__9CIRK\",\"search_emoji\":\"Emoji_search_emoji__fvxQi\",\"search_icon\":\"Emoji_search_icon__KWKYf\",\"emoji_card\":\"Emoji_emoji_card__6gbRj\",\"emoji_title\":\"Emoji_emoji_title__mvcKK\",\"emoji_list\":\"Emoji_emoji_list__p+OUC\",\"emoji_icon\":\"Emoji_emoji_icon__DOJpp\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_input\":\"TextArea_chat_input__zkCUT\"};","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"SideBar_sidebar__0nIPq\",\"logo\":\"SideBar_logo__sX0Lu\",\"top_nav\":\"SideBar_top_nav__fAKrH\",\"nav_item\":\"SideBar_nav_item__0Lxi5\",\"active\":\"SideBar_active__3jQdi\",\"tab_indicator\":\"SideBar_tab_indicator__dSGyQ\",\"bottom_nav\":\"SideBar_bottom_nav__aCdI9\",\"theme_icon\":\"SideBar_theme_icon__gwiIN\",\"avatar_option\":\"SideBar_avatar_option__sjglN\"};"],"names":["Conversation","chats","dropDown","icon","label","className","styles","map","index","msg","datetime","classNames","id","DropDown","selector","position","Emoji","toggle","isOpen","onChange","types","targetRef","useRef","emojiRef","useEffect","length","element","document","querySelector","current","onclick","handleEmoji","emoji","Portal","in","timeout","unmountOnExit","enterActive","exitActive","onEntered","ele","clickOutside","ref","onClose","doNotClose","event","contains","Popper","referenceElement","offset","render","popper","style","title","onClick","offsetTop","scrollTo","Tooltip","type","placeholder","Object","entries","emojis","list","description","TextArea","onSend","useState","showEmoji","setShowEmoji","text","setText","Fragment","name","value","target","concat","Chats","chatData","showInfo","setShowInfo","useLayoutEffect","scrollHeight","body","window","toggleInfo","Avatar","src","size","status","console","log","OffCanvas","overlay","SideBar","theme","toggleTheme","tabRef","indicatorRef","pathName","useRouter","tabs","to","match","split","findIndex","children","clientHeight","height","top","isActive","toLowerCase","outline","useLocalStorage","getItem","setItem","setTheme","val","setAttribute"],"sourceRoot":""}