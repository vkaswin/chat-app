{"version":3,"file":"static/js/2775.5a441034.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chat/Conversation/Options/index.js","layouts/AppLayout/Chat/Conversation/Reaction/index.js","layouts/AppLayout/Chat/Conversation/index.js","layouts/AppLayout/Chat/ReactionPopup/index.js","layouts/AppLayout/Chat/SeenPopup/index.js","services/Message.js","services/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/Conversation.module.scss?e9d7","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/Reaction/Reaction.module.scss?7ea8","webpack://react-chat-app/./src/layouts/AppLayout/Chat/ReactionPopup/ReactionPopup.module.scss?5bbe","webpack://react-chat-app/./src/layouts/AppLayout/Chat/SeenPopup/SeenPopup.module.scss?4b38"],"sourcesContent":["import React from \"react\";\nimport { DropDown, DropDownItem } from \"components\";\n\nexport const Options = ({\n  onReply,\n  onDelete,\n  onCopy,\n  selector,\n  date,\n  msgId,\n  msg,\n}) => {\n  return (\n    <DropDown selector={selector} placement=\"bottom\">\n      <DropDownItem\n        className=\"dropdown-option\"\n        onClick={() => onReply(date, msgId)}\n      >\n        <span>Reply</span>\n        <i className=\"bx-share\"></i>\n      </DropDownItem>\n      <DropDownItem className=\"dropdown-option\">\n        <span>Forward</span>\n        <i className=\"bx-share-alt\"></i>\n      </DropDownItem>\n      <DropDownItem className=\"dropdown-option\" onClick={() => onCopy(msg)}>\n        <span>Copy</span>\n        <i className=\"bx-copy\"></i>\n      </DropDownItem>\n      <DropDownItem className=\"dropdown-option\">\n        <span>Mark as Unread</span>\n        <i className=\"bx-message-error\"></i>\n      </DropDownItem>\n      <DropDownItem\n        className=\"dropdown-option\"\n        onClick={() => onDelete(date, msgId)}\n      >\n        <span>Delete</span>\n        <i className=\"bx-trash\"></i>\n      </DropDownItem>\n    </DropDown>\n  );\n};\n","import React from \"react\";\nimport { DropDown, DropDownItem } from \"components\";\nimport { getReactionUrl } from \"utils\";\n\nimport styles from \"./Reaction.module.scss\";\n\nexport const Reaction = ({ reactions, selector, onClick }) => {\n  return (\n    <DropDown\n      selector={selector}\n      className={styles.container}\n      placement=\"bottom\"\n    >\n      {reactions.map((reaction, index) => {\n        return (\n          <DropDownItem\n            className={styles.wrapper}\n            key={index}\n            onClick={() => onClick(reaction)}\n          >\n            <img id={reaction} src={getReactionUrl(reaction)} />\n          </DropDownItem>\n        );\n      })}\n    </DropDown>\n  );\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { classNames, getReactionUrl } from \"utils\";\nimport { Reaction } from \"./Reaction\";\nimport { Options } from \"./Options\";\nimport moment from \"moment\";\n\nimport styles from \"./Conversation.module.scss\";\nimport ReactionPopup from \"../ReactionPopup\";\nimport SeenPopup from \"../SeenPopup\";\n\nexport const Conversation = ({\n  chats,\n  onDelete,\n  onCopy,\n  onReply,\n  userId,\n  focusMsgById,\n  unReadMsg,\n  isGroupChat,\n  reactionList,\n  handleReaction,\n}) => {\n  let [isOpen, setIsOpen] = useState({ reaction: false, seen: false });\n  let [msgId, setMsgId] = useState();\n\n  const toggle = async ({ msgId, type }) => {\n    if (isOpen[type]) return setIsOpen({ ...isOpen, [type]: false });\n    setMsgId(msgId);\n    setIsOpen({ ...isOpen, [type]: true });\n  };\n\n  return (\n    <Fragment>\n      {chats.map(({ day, messages }, key) => {\n        return (\n          <Fragment key={key}>\n            <div className={styles.date}>\n              <span>{moment(day).format(\"D MMMM YYYY\")}</span>\n            </div>\n            <div className={styles.container}>\n              {messages.map(\n                (\n                  {\n                    msg,\n                    date,\n                    sender: { id = null, name = null, avatar = null } = {},\n                    _id,\n                    seen,\n                    reply = null,\n                    reactions,\n                    totalReactions,\n                  },\n                  index\n                ) => {\n                  return (\n                    <Fragment key={_id}>\n                      {unReadMsg.id && unReadMsg.id === _id && (\n                        <div className={styles.unread_msg}>\n                          <span>\n                            {unReadMsg.total} Unread Message\n                            {unReadMsg.total > 1 && \"s\"}\n                          </span>\n                        </div>\n                      )}\n                      <div\n                        className={classNames(styles.chat_wrapper, {\n                          [styles.end]: userId === id,\n                        })}\n                        msgid={_id}\n                        {...(key === 0 && index === 0 && { first: \"\" })}\n                        {...(key === chats.length - 1 &&\n                          index === messages.length - 1 && { last: \"\" })}\n                      >\n                        <div>\n                          <div\n                            className={styles.chat_card}\n                            {...(userId !== id && { id: `reaction-${_id}` })}\n                          >\n                            {reply && (\n                              <div\n                                className={styles.reply_card}\n                                onClick={() =>\n                                  focusMsgById(reply._id, \"smooth\")\n                                }\n                              >\n                                <span>{reply.msg}</span>\n                              </div>\n                            )}\n                            <div>\n                              {isGroupChat && id !== userId && (\n                                <span\n                                  style={{ color: avatar }}\n                                  className={styles.user_name}\n                                >\n                                  {name.split(\" \")[0]}\n                                </span>\n                              )}\n                              <span>{msg}</span>\n                            </div>\n                            <div className={styles.msg_time}>\n                              <i className={`bx-time ${styles.clock}`}></i>\n                              <span>\n                                {moment(new Date(date)).format(\"h:mm a\")}\n                              </span>\n                              {userId === id && (\n                                <i\n                                  className={`bx bx-check-double ${styles.tick}`}\n                                  seen={seen.toString()}\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    toggle({ msgId: _id, type: \"seen\" });\n                                  }}\n                                ></i>\n                              )}\n                            </div>\n                          </div>\n                          <div className={styles.options}>\n                            <i\n                              className=\"bx-dots-vertical-rounded\"\n                              id={`option-${_id}`}\n                            ></i>\n                          </div>\n                        </div>\n                        {totalReactions > 0 && (\n                          <div\n                            className={styles.reactions}\n                            onClick={() =>\n                              toggle({ msgId: _id, type: \"reaction\" })\n                            }\n                          >\n                            {reactions.map((reaction, ind) => {\n                              return (\n                                <img key={ind} src={getReactionUrl(reaction)} />\n                              );\n                            })}\n                            <span>{totalReactions}</span>\n                          </div>\n                        )}\n                      </div>\n                      <Options\n                        selector={`#option-${_id}`}\n                        onCopy={onCopy}\n                        onReply={onReply}\n                        onDelete={onDelete}\n                        date={date}\n                        msgId={_id}\n                        msg={msg}\n                      />\n                      <Reaction\n                        selector={`#reaction-${_id}`}\n                        reactions={reactionList}\n                        onClick={(reaction) => handleReaction(reaction, _id)}\n                      />\n                    </Fragment>\n                  );\n                }\n              )}\n            </div>\n          </Fragment>\n        );\n      })}\n      <ReactionPopup\n        isOpen={isOpen.reaction}\n        msgId={msgId}\n        toggle={() => toggle({ type: \"reaction\" })}\n      />\n      <SeenPopup\n        isOpen={isOpen.seen}\n        msgId={msgId}\n        toggle={() => toggle({ type: \"seen\" })}\n      />\n    </Fragment>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar, Modal } from \"components\";\nimport { getReactionUrl } from \"utils\";\nimport { getReactions, getReactionsByType } from \"services/Message\";\n\nimport styles from \"./ReactionPopup.module.scss\";\n\nconst ReactionPopup = ({ isOpen, toggle, msgId }) => {\n  const [reactions, setReactions] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [type, setType] = useState();\n\n  let limit = 25;\n\n  useEffect(() => {\n    if (!isOpen) return;\n    getReaction();\n  }, [isOpen]);\n\n  const getReaction = async () => {\n    let params = {\n      page: 1,\n      limit,\n    };\n    try {\n      let [\n        {\n          data: { data: reaction },\n        },\n        {\n          data: { data: list },\n        },\n      ] = await Promise.all([\n        getReactions(msgId),\n        getReactionsByType(msgId, params),\n      ]);\n      setReactions(reaction);\n      setUsers(list);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getReactionList = async (reaction) => {\n    let params = {\n      page: 1,\n      limit,\n      type: reaction,\n    };\n    try {\n      let {\n        data: { data },\n      } = await getReactionsByType(msgId, params);\n      setType(reaction);\n      setUsers(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <div className={styles.popup}>\n        <div className={styles.reactions}>\n          <div className={styles.all} onClick={() => getReactionList()}>\n            <span>All</span>\n          </div>\n          {reactions?.map(({ reaction, total }, index) => {\n            return (\n              <div\n                key={index}\n                className={styles.card}\n                onClick={() => getReactionList(reaction)}\n              >\n                <img src={getReactionUrl(reaction)} />\n                <span>{total}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className={styles.users}>\n          {users.map(({ avatar, email, id, name, status, date }, index) => {\n            return (\n              <div key={index} className={styles.card}>\n                <Avatar\n                  name={name}\n                  size={40}\n                  status={status}\n                  userId={id}\n                  src={avatar}\n                />\n                <span>{name}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ReactionPopup;\n","import React from \"react\";\nimport { Avatar, Modal } from \"components\";\n\nimport styles from \"./SeenPopup.module.scss\";\n\nconst SeenPopup = ({ isOpen, toggle }) => {\n  let users = [];\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <div className={styles.popup}>\n        <div className={styles.reactions}>\n          <div className={styles.all}>\n            <span>Seen</span>\n          </div>\n        </div>\n        <div className={styles.users}>\n          {users?.map(({ avatar, email, id, name, status }, index) => {\n            return (\n              <div key={index} className={styles.card}>\n                <Avatar\n                  name={name}\n                  size={40}\n                  status={status}\n                  userId={id}\n                  src={avatar}\n                />\n                <span>{name}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SeenPopup;\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const createMessage = (chatId, data) => {\n  return axios({\n    url: `${endpoints.message.createMessage}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n\nexport const getReactions = (msgId) => {\n  return axios({\n    url: `${endpoints.message.getReaction}/${msgId}`,\n    method: \"get\",\n  });\n};\n\nexport const getReactionsByType = (msgId, params) => {\n  return axios({\n    url: `${endpoints.message.getReactionByType}/${msgId}`,\n    method: \"get\",\n    params,\n  });\n};\n\nexport const getSeenByMsgId = (msgId, params) => {\n  return axios({\n    url: `${endpoints.message.getSeen}/${msgId}`,\n    method: \"get\",\n    params,\n  });\n};\n","import Axios from \"axios\";\nimport { cookies } from \"utils\";\nimport { baseURL } from \"config\";\n\nexport const axios = Axios.create({ baseURL });\n\naxios.interceptors.request.use(\n  (config) => {\n    const cookie = cookies();\n\n    const token = cookie.get(\"authToken\");\n    if (token) {\n      config.headers.Authorization = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      document.dispatchEvent(new CustomEvent(\"logout\"));\n    }\n    return Promise.reject(error?.response?.data);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Conversation_container__I7CJi\",\"chat_wrapper\":\"Conversation_chat_wrapper__S3O8R\",\"end\":\"Conversation_end__ZMbi5\",\"chat_card\":\"Conversation_chat_card__jz70L\",\"reply_card\":\"Conversation_reply_card__AEy90\",\"msg_time\":\"Conversation_msg_time__wN53F\",\"tick\":\"Conversation_tick__RkyEe\",\"reactions\":\"Conversation_reactions__faDG2\",\"user_name\":\"Conversation_user_name__RDhDd\",\"clock\":\"Conversation_clock__y4n8i\",\"options\":\"Conversation_options__WLSBI\",\"date\":\"Conversation_date__ZfQTB\",\"unread_msg\":\"Conversation_unread_msg__yFItk\",\"section\":\"Conversation_section__wG88I\",\"load\":\"Conversation_load__rqCbg\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reaction_container__yXj24\",\"wrapper\":\"Reaction_wrapper__m5dkH\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"ReactionPopup_popup__yt4AZ\",\"reactions\":\"ReactionPopup_reactions__3HDB6\",\"all\":\"ReactionPopup_all__nfaPI\",\"card\":\"ReactionPopup_card__P+lgl\",\"users\":\"ReactionPopup_users__81RJu\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"SeenPopup_popup__d-7Be\",\"reactions\":\"SeenPopup_reactions__DkyZZ\",\"all\":\"SeenPopup_all__2FlpU\",\"users\":\"SeenPopup_users__Ehebn\",\"card\":\"SeenPopup_card__irnNc\"};"],"names":["Options","onReply","onDelete","onCopy","selector","date","msgId","msg","DropDown","placement","DropDownItem","className","onClick","Reaction","reactions","styles","map","reaction","index","id","src","getReactionUrl","Conversation","chats","userId","focusMsgById","unReadMsg","isGroupChat","reactionList","handleReaction","useState","seen","isOpen","setIsOpen","setMsgId","toggle","type","Fragment","key","day","messages","moment","format","sender","name","avatar","_id","reply","totalReactions","total","classNames","msgid","first","length","last","style","color","split","Date","toString","e","stopPropagation","ind","setReactions","users","setUsers","setType","useEffect","getReaction","params","page","limit","Promise","all","getReactions","getReactionsByType","data","list","console","log","getReactionList","Modal","email","status","Avatar","size","createMessage","chatId","axios","url","endpoints","method","getSeenByMsgId","Axios","baseURL","interceptors","request","use","config","token","cookies","get","headers","Authorization","error","reject","response","document","dispatchEvent","CustomEvent"],"sourceRoot":""}