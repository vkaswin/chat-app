{"version":3,"file":"static/js/2775.b2a8eb4c.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chat/Conversation/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/Conversation.module.scss?e9d7"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { DropDown, DropDownItem } from \"components\";\nimport { classNames } from \"utils\";\nimport moment from \"moment\";\n\nimport styles from \"./Conversation.module.scss\";\n\nexport const Conversation = ({\n  chats,\n  onDelete,\n  onCopy,\n  onReply,\n  userId,\n  newMsg,\n  focusMsgById,\n  otherUserId,\n}) => {\n  return (\n    <Fragment>\n      {Object.entries(chats).map(([date, conversation], key) => {\n        return (\n          <Fragment key={key}>\n            <div className={styles.date}>\n              <span>{moment(date).format(\"D MMMM YYYY\")}</span>\n            </div>\n            <div className={styles.container}>\n              {conversation.map(\n                ({ msg, date, sender, _id, seen, reply = null }, index) => {\n                  return (\n                    <Fragment key={index}>\n                      {newMsg.id && newMsg.id === _id && (\n                        <div className={styles.unread_msg}>\n                          <span>\n                            {newMsg.count} Unread Message\n                            {newMsg.count > 1 && \"s\"}\n                          </span>\n                        </div>\n                      )}\n                      <div\n                        className={classNames(styles.chat_wrapper, {\n                          [styles.end]: userId === sender,\n                        })}\n                        msgid={_id}\n                      >\n                        <div className={styles.chat_card}>\n                          {reply && (\n                            <div\n                              className={styles.reply_card}\n                              onClick={() => focusMsgById(reply._id, \"smooth\")}\n                            >\n                              <span>{reply.msg}</span>\n                            </div>\n                          )}\n                          <div>\n                            <span>{msg}</span>\n                          </div>\n                          <div className={styles.msg_time}>\n                            <i className={`bx-time ${styles.clock}`}></i>\n                            <span>\n                              {moment(new Date(date)).format(\"h:mm a\")}\n                            </span>\n                            <i\n                              className={`bx bx-check-double ${styles.tick}`}\n                              seen={\n                                Array.isArray(otherUserId)\n                                  ? (\n                                      seen.length === otherUserId.length\n                                    ).toString()\n                                  : seen.includes(otherUserId).toString()\n                              }\n                            ></i>\n                          </div>\n                        </div>\n                        <div className={styles.options}>\n                          <i\n                            className=\"bx-dots-vertical-rounded\"\n                            id={`option-${key}${index}`}\n                          ></i>\n                          <DropDown\n                            selector={`#option-${key}${index}`}\n                            placement=\"bottom\"\n                          >\n                            <DropDownItem\n                              className=\"dropdown-option\"\n                              onClick={() => onReply(date, _id)}\n                            >\n                              <span>Reply</span>\n                              <i className=\"bx-share\"></i>\n                            </DropDownItem>\n                            <DropDownItem className=\"dropdown-option\">\n                              <span>Forward</span>\n                              <i className=\"bx-share-alt\"></i>\n                            </DropDownItem>\n                            <DropDownItem\n                              className=\"dropdown-option\"\n                              onClick={() => onCopy(msg)}\n                            >\n                              <span>Copy</span>\n                              <i className=\"bx-copy\"></i>\n                            </DropDownItem>\n                            <DropDownItem className=\"dropdown-option\">\n                              <span>Mark as Unread</span>\n                              <i className=\"bx-message-error\"></i>\n                            </DropDownItem>\n                            <DropDownItem\n                              className=\"dropdown-option\"\n                              onClick={() => onDelete(date, _id)}\n                            >\n                              <span>Delete</span>\n                              <i className=\"bx-trash\"></i>\n                            </DropDownItem>\n                          </DropDown>\n                        </div>\n                      </div>\n                    </Fragment>\n                  );\n                }\n              )}\n            </div>\n          </Fragment>\n        );\n      })}\n      <div className={styles.typing} typingstatus=\"\"></div>\n    </Fragment>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Conversation_container__I7CJi\",\"chat_wrapper\":\"Conversation_chat_wrapper__S3O8R\",\"end\":\"Conversation_end__ZMbi5\",\"chat_card\":\"Conversation_chat_card__jz70L\",\"reply_card\":\"Conversation_reply_card__AEy90\",\"msg_time\":\"Conversation_msg_time__wN53F\",\"tick\":\"Conversation_tick__RkyEe\",\"clock\":\"Conversation_clock__y4n8i\",\"options\":\"Conversation_options__WLSBI\",\"date\":\"Conversation_date__ZfQTB\",\"unread_msg\":\"Conversation_unread_msg__yFItk\",\"typing\":\"Conversation_typing__Q3x0K\",\"section\":\"Conversation_section__wG88I\",\"load\":\"Conversation_load__rqCbg\"};"],"names":["Conversation","chats","onDelete","onCopy","onReply","userId","newMsg","focusMsgById","otherUserId","Fragment","Object","entries","map","key","date","conversation","className","styles","moment","format","index","msg","sender","_id","seen","reply","id","count","classNames","msgid","onClick","Date","Array","isArray","length","toString","includes","DropDown","selector","placement","DropDownItem","typingstatus"],"sourceRoot":""}