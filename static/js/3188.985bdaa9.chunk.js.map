{"version":3,"file":"static/js/3188.985bdaa9.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chats/TextArea/Emoji/index.js","layouts/AppLayout/Chats/TextArea/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chats/TextArea/Emoji/Emoji.module.scss?1902","webpack://react-chat-app/./src/layouts/AppLayout/Chats/TextArea/TextArea.module.scss?83ef"],"sourcesContent":["import React, { useRef, useEffect, Fragment } from \"react\";\nimport { Portal, Popper, Tooltip } from \"components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { clickOutside } from \"utils\";\nimport emojis from \"data/emoji.json\";\n\nimport styles from \"./Emoji.module.scss\";\n\nexport const Emoji = ({ toggle, isOpen, selector }) => {\n  const types = [\n    {\n      label: \"Smileys & People\",\n      icon: \"bx-smile\",\n    },\n    {\n      label: \"Animals & Nature\",\n      icon: \"bx-leaf\",\n    },\n    {\n      label: \"Travel & Places\",\n      icon: \"bx-home-alt\",\n    },\n    {\n      label: \"Activities\",\n      icon: \"bx-baseball\",\n    },\n    {\n      label: \"Objects\",\n      icon: \"bx-world\",\n    },\n    {\n      label: \"Symbols\",\n      icon: \"bx-bulb\",\n    },\n    {\n      label: \"Flags\",\n      icon: \"bx-flag\",\n    },\n  ];\n\n  const targetRef = useRef();\n\n  const emojiRef = useRef();\n\n  useEffect(() => {\n    if (selector.length === 0) return;\n\n    const element = document.querySelector(selector);\n\n    if (!element) return;\n\n    targetRef.current = element;\n    element.onclick = toggle;\n  }, []);\n\n  const onEntered = (ele) => {\n    clickOutside({\n      ref: ele,\n      onClose: toggle,\n      doNotClose: (event) => {\n        console.log(event);\n        console.log(targetRef.current.contains(event));\n        return targetRef.current.contains(event);\n      },\n    });\n  };\n\n  const handleFocus = (title) => () => {\n    const { offsetTop } = document.querySelector(\n      `[data-emoji-title=\"${title}\"]`\n    );\n    emojiRef.current.scrollTo(0, offsetTop - 95);\n  };\n\n  return (\n    <Portal>\n      <CSSTransition\n        in={isOpen}\n        timeout={300}\n        unmountOnExit\n        classNames={{\n          enterActive: styles.emoji_enter,\n          exitActive: styles.emoji_exit,\n        }}\n        onEntered={onEntered}\n      >\n        <div>\n          <Popper\n            referenceElement={targetRef}\n            position=\"top-center\"\n            offset={20}\n            render={({ popper, position, ref }) => {\n              return (\n                <div\n                  ref={ref}\n                  className={styles.emoji_container}\n                  data-position={position}\n                  style={popper}\n                >\n                  <div className={styles.emoji_wrapper}>\n                    <div className={styles.emoji_header}>\n                      {types.map(({ label, icon }, index) => {\n                        return (\n                          <div\n                            key={index}\n                            id={`emoji-type-${index}`}\n                            className={styles.emoji_type}\n                            onClick={handleFocus(label)}\n                          >\n                            <i className={icon}></i>\n                            <Tooltip\n                              position=\"top-center\"\n                              selector={`#emoji-type-${index}`}\n                              offset={20}\n                            >\n                              {label}\n                            </Tooltip>\n                          </div>\n                        );\n                      })}\n                      <div\n                        id=\"emoji-close\"\n                        className={styles.close}\n                        onClick={toggle}\n                      >\n                        <span>&#10799;</span>\n                        <Tooltip\n                          position=\"top-center\"\n                          selector={`#emoji-close`}\n                          offset={15}\n                        >\n                          Close\n                        </Tooltip>\n                      </div>\n                    </div>\n                    <div className={styles.search_emoji}>\n                      <input type=\"text\" placeholder=\"Search Emoji\" />\n                      <div className={styles.search_icon}>\n                        <i className=\"bx-search-alt-2\"></i>\n                      </div>\n                    </div>\n                    <div className={styles.emoji_card} ref={emojiRef}>\n                      {Object.entries(emojis).map(([title, list], index) => {\n                        return (\n                          <div key={index}>\n                            <div\n                              className={styles.emoji_title}\n                              data-emoji-title={title}\n                            >\n                              <b>{title}</b>\n                            </div>\n                            <div className={styles.emoji_list}>\n                              {list.map(({ emoji, description }, index) => {\n                                return (\n                                  <button key={index} title={description}>\n                                    <div className={styles.emoji_icon}>\n                                      {emoji}\n                                    </div>\n                                  </button>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n              );\n            }}\n          ></Popper>\n        </div>\n      </CSSTransition>\n    </Portal>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Emoji } from \"./Emoji\";\n\nimport styles from \"./TextArea.module.scss\";\n\nexport const TextArea = () => {\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const toggleEmoji = () => {\n    setShowEmoji(!showEmoji);\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.chat_input}>\n        <i className=\"bx-paperclip\" id=\"attach\"></i>\n        <i className=\"bx-smile\" id=\"emoji\"></i>\n        <textarea />\n        <i className=\"bx-microphone\" id=\"mic\"></i>\n        <button>\n          <i className=\"bxs-send\"></i>\n        </button>\n      </div>\n      <Emoji selector=\"#emoji\" isOpen={showEmoji} toggle={toggleEmoji} />\n    </Fragment>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"emoji_enter\":\"Emoji_emoji_enter__w7yZT\",\"emoji_container\":\"Emoji_emoji_container__HXSvO\",\"emoji_wrapper\":\"Emoji_emoji_wrapper__kFwoG\",\"emoji-anime\":\"Emoji_emoji-anime__ESXmi\",\"emoji_exit\":\"Emoji_emoji_exit__ZVQuH\",\"emoji_header\":\"Emoji_emoji_header__gxRGj\",\"emoji_type\":\"Emoji_emoji_type__Ud0mK\",\"close\":\"Emoji_close__9CIRK\",\"search_emoji\":\"Emoji_search_emoji__fvxQi\",\"search_icon\":\"Emoji_search_icon__KWKYf\",\"emoji_card\":\"Emoji_emoji_card__6gbRj\",\"emoji_title\":\"Emoji_emoji_title__mvcKK\",\"emoji_list\":\"Emoji_emoji_list__p+OUC\",\"emoji_icon\":\"Emoji_emoji_icon__DOJpp\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_input\":\"TextArea_chat_input__zkCUT\"};"],"names":["Emoji","toggle","isOpen","selector","types","label","icon","targetRef","useRef","emojiRef","useEffect","length","element","document","querySelector","current","onclick","Portal","in","timeout","unmountOnExit","classNames","enterActive","styles","exitActive","onEntered","ele","clickOutside","ref","onClose","doNotClose","event","console","log","contains","Popper","referenceElement","position","offset","render","popper","className","style","map","index","title","id","onClick","offsetTop","scrollTo","Tooltip","type","placeholder","Object","entries","emojis","list","emoji","description","TextArea","useState","showEmoji","setShowEmoji","Fragment"],"sourceRoot":""}