{"version":3,"file":"static/js/3381.f241ca88.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chats/Conversation/index.js","layouts/AppLayout/Chats/TextArea/Emoji/index.js","layouts/AppLayout/Chats/TextArea/index.js","layouts/AppLayout/Chats/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chats/Chats.module.scss?d575","webpack://react-chat-app/./src/layouts/AppLayout/Chats/Conversation/Conversation.module.scss?eae9","webpack://react-chat-app/./src/layouts/AppLayout/Chats/TextArea/Emoji/Emoji.module.scss?1902","webpack://react-chat-app/./src/layouts/AppLayout/Chats/TextArea/TextArea.module.scss?83ef"],"sourcesContent":["import React from \"react\";\nimport data from \"data/chats.json\";\n\nimport styles from \"./Conversation.module.scss\";\nimport { classNames } from \"utils\";\nimport { DropDown } from \"components\";\n\nexport const Conversation = () => {\n  const { chats } = data;\n\n  const dropDown = [\n    {\n      icon: \"bx-share ms-2\",\n      label: \"Reply\",\n    },\n    {\n      icon: \"bx-share-alt\",\n      label: \"Forward\",\n    },\n    {\n      icon: \"bx-copy text-muted\",\n      label: \"Copy\",\n    },\n    {\n      icon: \"bx-bookmarks text-muted\",\n      label: \"Bookmark\",\n    },\n    {\n      icon: \"bx-message-error\",\n      label: \"Mark as Unread\",\n    },\n    {\n      icon: \"bx-trash text-muted\",\n      label: \"Delete\",\n    },\n  ];\n\n  return (\n    <div className={styles.conversation_container}>\n      {chats.map(({ msg, datetime }, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.conversation_wrapper, {\n              [styles.end]: index % 2 === 0,\n            })}\n          >\n            <div className={styles.chat_wrapper}>\n              <div className={styles.chat_card}>\n                <span>{msg}</span>\n              </div>\n              <div className={styles.options}>\n                <i\n                  className=\"bx-dots-vertical-rounded\"\n                  id={`chat-option-${index}`}\n                ></i>\n                <DropDown\n                  selector={`#chat-option-${index}`}\n                  position=\"bottom-center\"\n                >\n                  {dropDown.map(({ label, icon }, index) => {\n                    return (\n                      <DropDown.Item key={index} className={styles.chat_option}>\n                        <span>{label}</span>\n                        <i className={icon}></i>\n                      </DropDown.Item>\n                    );\n                  })}\n                </DropDown>\n              </div>\n            </div>\n            <div className={styles.msg_time}>\n              <span>{datetime}</span>\n              <i className=\"bx bx-check-double\" data-seen={true}></i>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useRef, useEffect, Fragment } from \"react\";\nimport { Portal, Popper, Tooltip } from \"components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { clickOutside } from \"utils\";\nimport emojis from \"data/emoji.json\";\n\nimport styles from \"./Emoji.module.scss\";\n\nexport const Emoji = ({ toggle, isOpen, selector }) => {\n  const types = [\n    {\n      label: \"Smileys & People\",\n      icon: \"bx-smile\",\n    },\n    {\n      label: \"Animals & Nature\",\n      icon: \"bx-leaf\",\n    },\n    {\n      label: \"Travel & Places\",\n      icon: \"bx-home-alt\",\n    },\n    {\n      label: \"Activities\",\n      icon: \"bx-baseball\",\n    },\n    {\n      label: \"Objects\",\n      icon: \"bx-world\",\n    },\n    {\n      label: \"Symbols\",\n      icon: \"bx-bulb\",\n    },\n    {\n      label: \"Flags\",\n      icon: \"bx-flag\",\n    },\n  ];\n\n  const targetRef = useRef();\n\n  const emojiRef = useRef();\n\n  useEffect(() => {\n    if (selector.length === 0) return;\n\n    const element = document.querySelector(selector);\n\n    if (!element) return;\n\n    targetRef.current = element;\n    element.onclick = toggle;\n  }, []);\n\n  const onEntered = (ele) => {\n    clickOutside({\n      ref: ele,\n      onClose: toggle,\n      doNotClose: (event) => {\n        console.log(event);\n        console.log(targetRef.current.contains(event));\n        return targetRef.current.contains(event);\n      },\n    });\n  };\n\n  const handleFocus = (title) => () => {\n    const { offsetTop } = document.querySelector(\n      `[data-emoji-title=\"${title}\"]`\n    );\n    emojiRef.current.scrollTo(0, offsetTop - 95);\n  };\n\n  return (\n    <Portal>\n      <CSSTransition\n        in={isOpen}\n        timeout={300}\n        unmountOnExit\n        classNames={{\n          enterActive: styles.emoji_enter,\n          exitActive: styles.emoji_exit,\n        }}\n        onEntered={onEntered}\n      >\n        <div>\n          <Popper\n            referenceElement={targetRef}\n            position=\"top-center\"\n            offset={20}\n            render={({ popper, position, ref }) => {\n              return (\n                <div\n                  ref={ref}\n                  className={styles.emoji_container}\n                  data-position={position}\n                  style={popper}\n                >\n                  <div className={styles.emoji_wrapper}>\n                    <div className={styles.emoji_header}>\n                      {types.map(({ label, icon }, index) => {\n                        return (\n                          <div\n                            key={index}\n                            id={`emoji-type-${index}`}\n                            className={styles.emoji_type}\n                            onClick={handleFocus(label)}\n                          >\n                            <i className={icon}></i>\n                            <Tooltip\n                              position=\"top-center\"\n                              selector={`#emoji-type-${index}`}\n                              offset={20}\n                            >\n                              {label}\n                            </Tooltip>\n                          </div>\n                        );\n                      })}\n                      <div\n                        id=\"emoji-close\"\n                        className={styles.close}\n                        onClick={toggle}\n                      >\n                        <span>&#10799;</span>\n                        <Tooltip\n                          position=\"top-center\"\n                          selector={`#emoji-close`}\n                          offset={15}\n                        >\n                          Close\n                        </Tooltip>\n                      </div>\n                    </div>\n                    <div className={styles.search_emoji}>\n                      <input type=\"text\" placeholder=\"Search Emoji\" />\n                      <div className={styles.search_icon}>\n                        <i className=\"bx-search-alt-2\"></i>\n                      </div>\n                    </div>\n                    <div className={styles.emoji_card} ref={emojiRef}>\n                      {Object.entries(emojis).map(([title, list], index) => {\n                        return (\n                          <div key={index}>\n                            <div\n                              className={styles.emoji_title}\n                              data-emoji-title={title}\n                            >\n                              <b>{title}</b>\n                            </div>\n                            <div className={styles.emoji_list}>\n                              {list.map(({ emoji, description }, index) => {\n                                return (\n                                  <button key={index} title={description}>\n                                    <div className={styles.emoji_icon}>\n                                      {emoji}\n                                    </div>\n                                  </button>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n              );\n            }}\n          ></Popper>\n        </div>\n      </CSSTransition>\n    </Portal>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Emoji } from \"./Emoji\";\n\nimport styles from \"./TextArea.module.scss\";\n\nexport const TextArea = () => {\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const toggleEmoji = () => {\n    setShowEmoji(!showEmoji);\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.chat_input}>\n        <i className=\"bx-paperclip\" id=\"attach\"></i>\n        <i className=\"bx-smile\" id=\"emoji\"></i>\n        <textarea />\n        <i className=\"bx-microphone\" id=\"mic\"></i>\n        <button>\n          <i className=\"bxs-send\"></i>\n        </button>\n      </div>\n      <Emoji selector=\"#emoji\" isOpen={showEmoji} toggle={toggleEmoji} />\n    </Fragment>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { DropDown, Avatar, OffCanvas } from \"components\";\nimport { TextArea } from \"./TextArea\";\nimport { Conversation } from \"./Conversation\";\n\nimport styles from \"./Chats.module.scss\";\n\nexport const Chats = () => {\n  const moreDropDown = [\n    {\n      label: \"Archive\",\n      icon: \"bx-archive\",\n    },\n    {\n      label: \"Muted\",\n      icon: \"bx-microphone-off\",\n    },\n    {\n      label: \"Delete\",\n      icon: \"bx-trash\",\n    },\n  ];\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n\n  return (\n    <Fragment>\n      <Conversation />\n      <div className={styles.chat_header}>\n        <div className={styles.user_info}>\n          <Avatar\n            src=\"https://themesbrand.com/doot/layouts/assets/images/users/avatar-2.jpg\"\n            size={50}\n            status\n          />\n          <div className={styles.user_name}>\n            <b>Bella Cote</b>\n            <span>Online</span>\n          </div>\n        </div>\n        <div className={styles.chat_icons}>\n          <i className=\"bx-search\"></i>\n          <i className=\"bxs-phone-call\"></i>\n          <i className=\"bx-video\"></i>\n          <i className=\"bxs-info-circle\" onClick={toggleInfo}></i>\n          <i className=\"bx-dots-vertical-rounded\" id=\"more-option\"></i>\n          <DropDown selector=\"#more-option\" position=\"bottom-end\">\n            {moreDropDown.map(({ label, icon }, index) => {\n              return (\n                <DropDown.Item key={index} className={styles.more_option}>\n                  <span>{label}</span>\n                  <i className={icon}></i>\n                </DropDown.Item>\n              );\n            })}\n          </DropDown>\n        </div>\n      </div>\n      <TextArea />\n      <OffCanvas\n        isOpen={showInfo}\n        position=\"right\"\n        className={styles.profile_sidebar}\n        toggle={toggleInfo}\n      >\n        <div>helo</div>\n      </OffCanvas>\n    </Fragment>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chat_header\":\"Chats_chat_header__oSRpJ\",\"user_info\":\"Chats_user_info__R7UuI\",\"user_name\":\"Chats_user_name__hOeU3\",\"chat_icons\":\"Chats_chat_icons__jh6im\",\"more_option\":\"Chats_more_option__M8Npj\",\"profile_sidebar\":\"Chats_profile_sidebar__ZP1Tf\"};","// extracted by mini-css-extract-plugin\nexport default {\"conversation_container\":\"Conversation_conversation_container__6wBY5\",\"conversation_wrapper\":\"Conversation_conversation_wrapper__snJzP\",\"end\":\"Conversation_end__Kjdak\",\"chat_wrapper\":\"Conversation_chat_wrapper__FyiKP\",\"chat_card\":\"Conversation_chat_card__-jtgC\",\"msg_time\":\"Conversation_msg_time__DOXK4\",\"options\":\"Conversation_options__mUos4\",\"chat_option\":\"Conversation_chat_option__enVL0\"};","// extracted by mini-css-extract-plugin\nexport default {\"emoji_enter\":\"Emoji_emoji_enter__w7yZT\",\"emoji_container\":\"Emoji_emoji_container__HXSvO\",\"emoji_wrapper\":\"Emoji_emoji_wrapper__kFwoG\",\"emoji-anime\":\"Emoji_emoji-anime__ESXmi\",\"emoji_exit\":\"Emoji_emoji_exit__ZVQuH\",\"emoji_header\":\"Emoji_emoji_header__gxRGj\",\"emoji_type\":\"Emoji_emoji_type__Ud0mK\",\"close\":\"Emoji_close__9CIRK\",\"search_emoji\":\"Emoji_search_emoji__fvxQi\",\"search_icon\":\"Emoji_search_icon__KWKYf\",\"emoji_card\":\"Emoji_emoji_card__6gbRj\",\"emoji_title\":\"Emoji_emoji_title__mvcKK\",\"emoji_list\":\"Emoji_emoji_list__p+OUC\",\"emoji_icon\":\"Emoji_emoji_icon__DOJpp\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_input\":\"TextArea_chat_input__zkCUT\"};"],"names":["Conversation","chats","data","dropDown","icon","label","className","styles","map","index","msg","datetime","classNames","id","DropDown","selector","position","Emoji","toggle","isOpen","types","targetRef","useRef","emojiRef","useEffect","length","element","document","querySelector","current","onclick","Portal","in","timeout","unmountOnExit","enterActive","exitActive","onEntered","ele","clickOutside","ref","onClose","doNotClose","event","console","log","contains","Popper","referenceElement","offset","render","popper","style","title","onClick","offsetTop","scrollTo","Tooltip","type","placeholder","Object","entries","emojis","list","emoji","description","TextArea","useState","showEmoji","setShowEmoji","Fragment","Chats","showInfo","setShowInfo","toggleInfo","Avatar","src","size","status","OffCanvas"],"sourceRoot":""}