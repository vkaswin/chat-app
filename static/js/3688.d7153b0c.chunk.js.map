{"version":3,"file":"static/js/3688.d7153b0c.chunk.js","mappings":"wOAsGA,UA9FiB,WACf,IAAMA,EAAW,CACf,CACEC,MAAO,OACPC,KAAM,aAER,CACED,MAAO,QACPC,KAAM,YAER,CACED,MAAO,SACPC,KAAM,aAIV,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAqB,WACzB,IAAIC,EAAqBC,EAAAA,KAAc,SAACC,GACtC,IAAIC,EAAOC,EAAAA,QAAoB,YAC7B,OAD2C,EAAXC,KACpBC,OAAO,GAAGC,gBAAkBL,CACzC,IAED,MAAO,CACLM,KAAMN,EAAOO,cACbC,MACEP,EAAKQ,OAAS,EACVR,EAAKS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAER,KAAKU,cAAcD,EAAET,KAAjC,IACVF,EAET,IACDa,QAAQC,IAAR,kBAAgBrB,IAAhB,OAA6BI,KAC7BH,EAAY,GAAD,eAAKD,IAAL,OAAkBI,IAC9B,EAED,OACE,gBAAKkB,UAAWC,EAAAA,QAAAA,cAAhB,gBACGvB,QADH,IACGA,OADH,EACGA,EAAUwB,KAAI,WAAkBC,GAAW,IAA1Bb,EAAyB,EAAzBA,KAAME,EAAmB,EAAnBA,MACtB,OACEA,EAAMC,OAAS,IACb,UAAC,EAAAW,SAAD,YACE,gBAAKJ,UAAWC,EAAAA,QAAAA,MAAhB,UACE,uBAAIX,MAELE,EAAMU,KAAI,WAA4BG,GAAS,IAAlClB,EAAiC,EAAjCA,KAAMmB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAC3B,OACE,UAAC,EAAAH,SAAD,YACE,iBAAKJ,WAAWQ,EAAAA,EAAAA,YAAWP,EAAAA,QAAAA,cAA3B,WACE,iBAAKD,UAAWC,EAAAA,QAAAA,KAAhB,WACE,SAAC,EAAAQ,OAAD,CACEC,IAAKJ,EACLK,SAAUxB,EACVyB,KAAM,GACNL,OAAQA,KAEV,0BAAOpB,QAET,cACEa,UAAU,2BACVa,GAAE,UAAKvB,EAAL,YAAae,SAGnB,SAAC,EAAAS,SAAD,CACEC,SAAS,gBACTC,SAAQ,WAAM1B,EAAN,YAAce,GAFxB,SAIG/B,EAAS4B,KAAI,WAAkBe,GAAO,IAAtBzC,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,MACrB,OACE,UAAC,EAAAuC,SAAA,KAAD,CAEEd,UAAWC,EAAAA,QAAAA,eAFb,WAIE,0BAAO1B,KACP,cAAGyB,UAAWxB,MAJTyC,EAOV,QA9BUZ,EAkClB,MAxCYF,EA4CpB,KAGN,C,8BCnGD,WAAgB,cAAgB,gCAAgC,MAAQ,wBAAwB,aAAe,+BAA+B,KAAO,uBAAuB,eAAiB,iC","sources":["pages/Contacts/index.js","webpack://react-chat-app/./src/pages/Contacts/Contacts.module.scss?47b9"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport alphabets from \"data/alphabets.json\";\nimport contactsList from \"data/contacts.json\";\n\nimport styles from \"./Contacts.module.scss\";\nimport { Avatar, DropDown } from \"components\";\nimport { classNames } from \"utils\";\n\nconst Contacts = () => {\n  const dropdown = [\n    {\n      label: \"Edit\",\n      icon: \"bx-pencil\",\n    },\n    {\n      label: \"Block\",\n      icon: \"bx-block\",\n    },\n    {\n      label: \"Delete\",\n      icon: \"bx-trash\",\n    },\n  ];\n\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    sortContactsByName();\n  }, []);\n\n  const sortContactsByName = () => {\n    let contactByAlphabets = alphabets.map((letter) => {\n      let list = contactsList.filter(({ name }) => {\n        return name.charAt(0).toLowerCase() === letter;\n      });\n\n      return {\n        word: letter.toUpperCase(),\n        users:\n          list.length > 0\n            ? list.sort((a, b) => a.name.localeCompare(b.name))\n            : list,\n      };\n    });\n    console.log([...contacts, ...contactByAlphabets]);\n    setContacts([...contacts, ...contactByAlphabets]);\n  };\n\n  return (\n    <div className={styles.contacts_list}>\n      {contacts?.map(({ word, users }, index) => {\n        return (\n          users.length > 0 && (\n            <Fragment key={index}>\n              <div className={styles.title}>\n                <b>{word}</b>\n              </div>\n              {users.map(({ name, profile, status }, ind) => {\n                return (\n                  <Fragment key={ind}>\n                    <div className={classNames(styles.contact_card)}>\n                      <div className={styles.user}>\n                        <Avatar\n                          src={profile}\n                          userName={name}\n                          size={35}\n                          status={status}\n                        />\n                        <span>{name}</span>\n                      </div>\n                      <i\n                        className=\"bx-dots-vertical-rounded\"\n                        id={`${word}-${ind}`}\n                      ></i>\n                    </div>\n                    <DropDown\n                      position=\"bottom-center\"\n                      selector={`#${word}-${ind}`}\n                    >\n                      {dropdown.map(({ icon, label }, i) => {\n                        return (\n                          <DropDown.Item\n                            key={i}\n                            className={styles.contact_option}\n                          >\n                            <span>{label}</span>\n                            <i className={icon}></i>\n                          </DropDown.Item>\n                        );\n                      })}\n                    </DropDown>\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_list\":\"Contacts_contacts_list__70eS1\",\"title\":\"Contacts_title__CFJgb\",\"contact_card\":\"Contacts_contact_card__e3hM8\",\"user\":\"Contacts_user__9UUPA\",\"contact_option\":\"Contacts_contact_option__v54NK\"};"],"names":["dropdown","label","icon","useState","contacts","setContacts","useEffect","sortContactsByName","contactByAlphabets","alphabets","letter","list","contactsList","name","charAt","toLowerCase","word","toUpperCase","users","length","sort","a","b","localeCompare","console","log","className","styles","map","index","Fragment","ind","profile","status","classNames","Avatar","src","userName","size","id","DropDown","position","selector","i"],"sourceRoot":""}