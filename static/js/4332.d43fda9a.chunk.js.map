{"version":3,"file":"static/js/4332.d43fda9a.chunk.js","mappings":"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","sources":["pages/Calls/index.js","services/Call.js","services/index.js","webpack://chat-app/./src/pages/Calls/Calls.module.scss?6954"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Avatar, Toast, SearchBox } from \"components\";\nimport { useAuth } from \"hooks\";\nimport { getCallHistory } from \"services/Call\";\nimport moment from \"moment\";\n\nimport styles from \"./Calls.module.scss\";\n\nconst Calls = () => {\n  const { user, handleChat } = useAuth();\n\n  const [callHistory, setCallHistory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getCalls();\n  }, []);\n\n  const getCalls = async () => {\n    try {\n      let {\n        data: { data },\n      } = await getCallHistory();\n      setCallHistory([...callHistory, ...data]);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    console.log(value);\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className={styles.calls_container}>\n      <SearchBox\n        title=\"Calls\"\n        placeholder=\"Search here...\"\n        onChange={handleChange}\n      />\n      {callHistory.length > 0 &&\n        callHistory.map(\n          (\n            {\n              date,\n              type,\n              initiatedBy,\n              chatId,\n              user: { colorCode, name, status, avatar, email, _id: userId },\n            },\n            index\n          ) => {\n            return (\n              <div\n                key={index}\n                className={styles.call_card}\n                onClick={() => handleChat(chatId)}\n              >\n                <div className={styles.user}>\n                  <Avatar\n                    src={avatar || colorCode}\n                    name={name}\n                    size={40}\n                    status={status}\n                    userId={userId}\n                  />\n                  <div className={styles.call_info}>\n                    <span className=\"truncate-1\">{name}</span>\n                    <div>\n                      {initiatedBy === user?.id ? (\n                        <i className=\"bx-up-arrow-alt\" type=\"outgoing\"></i>\n                      ) : (\n                        <i className=\"bx-down-arrow-alt\" type=\"incoming\"></i>\n                      )}\n                      <span className=\"truncate-1\">\n                        {moment(date).format(\"D ddd YYYY, hh:mm a\")}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.type_icon}>\n                  {type === \"video\" ? (\n                    <i className=\"bx-video\"></i>\n                  ) : (\n                    <i className=\"bx-phone-call\"></i>\n                  )}\n                </div>\n              </div>\n            );\n          }\n        )}\n    </div>\n  );\n};\n\nexport default Calls;\n","import { axios } from \"services\";\nimport { endpoints } from \"./config\";\n\nexport const getCallHistory = () => {\n  return axios({ url: endpoints.call.history, method: \"get\" });\n};\n\nexport const initiateCall = (chatId, data) => {\n  return axios({\n    url: `${endpoints.call.initiate}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n","import Axios from \"axios\";\nimport { cookies } from \"utils\";\nimport { baseURL } from \"./config\";\n\nexport const axios = Axios.create({ baseURL });\n\naxios.interceptors.request.use(\n  (config) => {\n    const cookie = cookies();\n\n    const token = cookie.get(\"auth_token\");\n    if (token) {\n      config.headers.Authorization = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      document.dispatchEvent(new CustomEvent(\"logout\"));\n    }\n    return Promise.reject(error?.response?.data);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"calls_container\":\"Calls_calls_container__julVl\",\"call_card\":\"Calls_call_card__9L-+S\",\"user\":\"Calls_user__pFFMG\",\"call_info\":\"Calls_call_info__ohoQS\",\"type_icon\":\"Calls_type_icon__xoqiZ\"};"],"names":["useAuth","user","handleChat","useState","callHistory","setCallHistory","loading","setLoading","useEffect","getCalls","getCallHistory","data","Toast","type","message","className","styles","SearchBox","title","placeholder","onChange","value","target","console","log","length","map","index","date","initiatedBy","chatId","colorCode","name","status","avatar","userId","email","_id","onClick","Avatar","src","size","id","moment","format","axios","url","endpoints","method","initiateCall","Axios","baseURL","interceptors","request","use","config","token","cookies","get","headers","Authorization","error","Promise","reject","response","document","dispatchEvent","CustomEvent"],"sourceRoot":""}