{"version":3,"file":"static/js/4825.e077cb3e.chunk.js","mappings":"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","sources":["pages/Status/Card/index.js","webpack://chat-app/./src/pages/Status/Card/StatusCard.module.scss?5405"],"sourcesContent":["import { Avatar } from \"components\";\nimport React, { useMemo } from \"react\";\nimport moment from \"moment\";\n\nimport styles from \"./StatusCard.module.scss\";\n\nconst StatusCard = ({\n  status,\n  chatId,\n  _id,\n  user: { avatar, colorCode, name, email, _id: userid, status: userStatus },\n  userId,\n}) => {\n  let gap = 10;\n  let radius = 50;\n  let circumference = 2 * Math.PI * radius;\n\n  const getStrokeDashArray = (size, seenCount) => {\n    let str = \"\";\n    for (let i = 1; i <= seenCount; i++) {\n      if (seenCount === 1) {\n        str = `${size} ${circumference - size} `;\n      } else if (i === seenCount) {\n        str += `${size} ${\n          circumference -\n          str.split(\" \").reduce((value, current) => {\n            return value + +current;\n          }, size)\n        } `;\n      } else {\n        str += `${size} ${gap} `;\n      }\n    }\n    return str.trim();\n  };\n\n  const circleSvg = useMemo(() => {\n    if (!userId) return;\n\n    let seenCount = status.reduce((value, { seen }) => {\n      let index = seen.findIndex(({ user }) => {\n        return user === userId;\n      });\n      return index !== -1 ? value + 1 : value;\n    }, 0);\n\n    let size = (circumference - gap * status.length) / status.length;\n    let strokeDashoffset = circumference / 4;\n    let notSeenCount = status.length - seenCount;\n\n    if (\n      seenCount === status.length ||\n      seenCount === 0 ||\n      notSeenCount === status.length ||\n      notSeenCount === 0\n    ) {\n      return (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 104 104\">\n          <circle\n            cx=\"52\"\n            cy=\"52\"\n            r={radius}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeDashoffset={\n              notSeenCount > 1 || seenCount > 1 ? strokeDashoffset : \"\"\n            }\n            strokeDasharray={`${\n              notSeenCount > 1 || seenCount > 1 ? size : size + gap\n            } ${notSeenCount > 1 || seenCount > 1 ? gap : \"\"}`.trim()}\n            strokeWidth=\"4\"\n            stroke={seenCount === 0 ? \"#008168\" : \"#AFB3B9\"}\n          ></circle>\n        </svg>\n      );\n    } else {\n      let seenStrokeDashArray = getStrokeDashArray(size, seenCount);\n      let notSeenStrokeDashArray = getStrokeDashArray(size, notSeenCount);\n      let strokeDashArray = seenStrokeDashArray.split(\" \");\n      let notSeenStrokeDashOffset =\n        +strokeDashArray[strokeDashArray.length - 1] + circumference / 4 - gap;\n\n      return (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 104 104\">\n          <circle\n            cx=\"52\"\n            cy=\"52\"\n            r={radius}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeDashoffset={strokeDashoffset}\n            strokeDasharray={seenStrokeDashArray}\n            strokeWidth=\"4\"\n            stroke=\"#AFB3B9\"\n          ></circle>\n          <circle\n            cx=\"52\"\n            cy=\"52\"\n            r={radius}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeDashoffset={notSeenStrokeDashOffset}\n            strokeDasharray={notSeenStrokeDashArray}\n            strokeWidth=\"4\"\n            stroke=\"#008168\"\n          ></circle>\n        </svg>\n      );\n    }\n  }, [status, userId]);\n\n  const lastStatusDate = useMemo(() => {\n    return moment(status.at(-1).date).startOf(\"hour\").fromNow();\n  }, [status]);\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.avatar}>\n        {circleSvg}\n        <div className={styles.profile}>\n          <Avatar\n            src={avatar || colorCode}\n            name={name}\n            userId={userid}\n            status={userStatus}\n            outline={false}\n            size={42}\n          />\n        </div>\n      </div>\n      <div className={styles.user_info}>\n        <b>{name}</b>\n        <span>{lastStatusDate}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default StatusCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"StatusCard_card__Jawxr\",\"avatar\":\"StatusCard_avatar__lHmGe\",\"profile\":\"StatusCard_profile__fuCNK\",\"user_info\":\"StatusCard_user_info__K2NI+\"};"],"names":["status","chatId","_id","user","avatar","colorCode","name","userid","email","userStatus","userId","circumference","Math","PI","getStrokeDashArray","size","seenCount","str","i","split","reduce","value","current","trim","circleSvg","useMemo","seen","findIndex","length","strokeDashoffset","notSeenCount","width","height","viewBox","cx","cy","r","fill","strokeLinecap","strokeDasharray","strokeWidth","stroke","seenStrokeDashArray","notSeenStrokeDashArray","strokeDashArray","notSeenStrokeDashOffset","lastStatusDate","moment","at","date","startOf","fromNow","className","styles","Avatar","src","outline"],"sourceRoot":""}