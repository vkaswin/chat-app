{"version":3,"file":"static/js/563.de156b59.chunk.js","mappings":"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","sources":["layouts/AppLayout/SideBar/index.js","webpack://react-chat-app/./src/layouts/AppLayout/SideBar/SideBar.module.scss?ab09"],"sourcesContent":["import React, { useLayoutEffect, useMemo, useRef } from \"react\";\nimport { useAuth, useRouter } from \"hooks\";\nimport { NavLink } from \"react-router-dom\";\nimport { classNames } from \"utils\";\nimport { Avatar, DropDown, Tooltip } from \"components\";\n\nimport styles from \"./SideBar.module.scss\";\n\nexport const SideBar = ({ theme, toggleTheme, className }) => {\n  let tabRef = useRef();\n\n  let indicatorRef = useRef();\n\n  const { pathName } = useRouter();\n\n  const { logout, user } = useAuth();\n\n  const tabs = [\n    {\n      icon: \"bx-user-circle\",\n      label: \"Profile\",\n      to: \"profile\",\n    },\n    {\n      icon: \"bx-conversation\",\n      label: \"Chats\",\n      to: \"chats\",\n    },\n    {\n      icon: \"bxs-user-detail\",\n      label: \"Contacts\",\n      to: \"contacts\",\n    },\n    {\n      icon: \"bx-phone-call\",\n      label: \"Calls\",\n      to: \"calls\",\n    },\n    {\n      icon: \"bx-cog\",\n      label: \"Settings\",\n      to: \"settings\",\n    },\n  ];\n\n  const dropdown = [\n    {\n      label: \"Profile\",\n      icon: \"bx-user-circle\",\n      to: \"profile\",\n    },\n    {\n      label: \"Settings\",\n      icon: \"bx-cog\",\n      to: \"settings\",\n    },\n    {\n      label: \"Change Password\",\n      icon: \"bx-lock-open\",\n      to: \"/auth/change-password\",\n    },\n  ];\n\n  useLayoutEffect(() => {\n    let index = tabs.findIndex(({ to }) => to === pathName.split(\"/\")[1]);\n\n    const { matches } = window.matchMedia(`(max-width: 768px)`);\n\n    let { clientHeight, offsetTop, offsetLeft, clientWidth } =\n      tabRef.current?.children[index];\n\n    if (matches) {\n      indicatorRef.current.style.width = `${clientWidth}px`;\n      indicatorRef.current.style.left = `${offsetLeft}px`;\n    } else {\n      indicatorRef.current.style.height = `${clientHeight}px`;\n      indicatorRef.current.style.top = `${offsetTop}px`;\n    }\n  }, [pathName]);\n\n  const tooltipPlacement = useMemo(() => {\n    const { matches } = window.matchMedia(`(max-width: 768px)`);\n    return matches ? \"top\" : \"right\";\n  }, []);\n\n  return (\n    <div className={`${styles.sidebar} ${className}`}>\n      <div className={styles.logo}>\n        <i className=\"bxs-message-alt-detail\"></i>\n      </div>\n      <div className={styles.nav_wrapper} ref={tabRef}>\n        {tabs.map(({ icon, label, to }, index) => {\n          return (\n            <NavLink\n              key={index}\n              to={to}\n              className={({ isActive }) =>\n                classNames(styles.nav_item, {\n                  [styles.active]: isActive,\n                })\n              }\n            >\n              <i\n                className={classNames(icon, styles.nav_icon)}\n                id={`nav-${index}`}\n              ></i>\n              <Tooltip\n                offset={20}\n                placement={tooltipPlacement}\n                selector={`#nav-${index}`}\n              >\n                <span>{label}</span>\n              </Tooltip>\n            </NavLink>\n          );\n        })}\n        <div className={classNames(styles.nav_item, styles.theme)}>\n          <div className={styles.nav_icon}>\n            <i\n              id=\"theme\"\n              className={theme === \"light\" ? \"bx-moon\" : \"bx-sun\"}\n              onClick={toggleTheme(theme === \"light\" ? \"dark\" : \"light\")}\n            ></i>\n            <Tooltip placement={tooltipPlacement} selector=\"#theme\" offset={20}>\n              {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n            </Tooltip>\n          </div>\n        </div>\n        <div\n          id=\"avatar\"\n          className={classNames(styles.nav_item, styles.profile)}\n        >\n          <Avatar\n            src={user?.avatar}\n            name={user?.name}\n            size={40}\n            outline\n            status\n          />\n        </div>\n        <DropDown selector=\"#avatar\" placement=\"top\">\n          {dropdown.map(({ label, icon, to }, index) => {\n            return (\n              <NavLink key={index} to={to}>\n                <DropDown.Item className=\"dropdown-option\">\n                  <span>{label}</span>\n                  <i className={icon}></i>\n                </DropDown.Item>\n              </NavLink>\n            );\n          })}\n          <DropDown.Item onClick={logout} className=\"dropdown-option\">\n            <span>Logout</span>\n            <i className=\"bx-log-out-circle\"></i>\n          </DropDown.Item>\n        </DropDown>\n        <div ref={indicatorRef} className={styles.tab_indicator}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"SideBar_sidebar__0nIPq\",\"logo\":\"SideBar_logo__sX0Lu\",\"nav_wrapper\":\"SideBar_nav_wrapper__n4wWR\",\"nav_item\":\"SideBar_nav_item__0Lxi5\",\"active\":\"SideBar_active__3jQdi\",\"theme\":\"SideBar_theme__Ci0nU\",\"nav_icon\":\"SideBar_nav_icon__WkDU2\",\"tab_indicator\":\"SideBar_tab_indicator__dSGyQ\",\"profile\":\"SideBar_profile__rqxDK\"};"],"names":["SideBar","theme","toggleTheme","className","tabRef","useRef","indicatorRef","pathName","useRouter","useAuth","logout","user","tabs","icon","label","to","useLayoutEffect","index","findIndex","split","matches","window","matchMedia","current","children","clientHeight","offsetTop","offsetLeft","clientWidth","style","width","left","height","top","tooltipPlacement","useMemo","styles","ref","map","isActive","classNames","id","Tooltip","offset","placement","selector","onClick","Avatar","src","avatar","name","size","outline","status","DropDown"],"sourceRoot":""}