{"version":3,"file":"static/js/5665.52088559.chunk.js","mappings":"gMA2DA,UArDsB,SAAC,GAAiC,IAAD,EAA9BA,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvC,GAAoCC,EAAAA,EAAAA,YAApC,eAAKC,EAAL,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,UAAQ,WACvB,OAAKL,EAAQM,eAAe,aACL,IAAhBJ,GAAqBA,EACxBF,EAAQO,UAAUL,GAAaM,MAC/BR,EAAQO,UAAUE,QAAO,SAACC,EAAD,GAAyB,IAAbF,EAAY,EAAZA,MACnC,OAAOE,EAAQC,OAAOH,EACvB,GAAE,IAL0C,EAMlD,GAAE,CAACN,EAAaF,IAEjB,OACE,SAAC,EAAAY,MAAD,CAAOd,OAAQA,EAAQC,OAAQA,EAA/B,UACE,iBAAKc,UAAWC,EAAAA,QAAAA,MAAhB,WACE,iBAAKD,UAAWC,EAAAA,QAAAA,UAAhB,WACE,gBAAKD,UAAWC,EAAAA,QAAAA,IAAYC,QAAS,kBAAMZ,GAAN,EAArC,UACE,oCAFJ,OAIGH,QAJH,IAIGA,GAJH,UAIGA,EAASO,iBAJZ,aAIG,EAAoBS,KAAI,WAAsBC,GAAW,IAA9Bb,EAA6B,EAA7BA,SAAUc,EAAmB,EAAnBA,MACpC,OACE,iBAEEL,UAAWC,EAAAA,QAAAA,KACXC,QAAS,kBAAMZ,EAAec,EAArB,EAHX,WAKE,gBAAKE,KAAKC,EAAAA,EAAAA,gBAAehB,MACzB,0BAAOc,MALFD,EAQV,QAEH,gBAAKJ,UAAWC,EAAAA,QAAAA,MAAhB,SACGV,EAASY,KAAI,WAAsCC,GAAW,IAA9CI,EAA6C,EAA7CA,OAAeC,GAA8B,EAArCC,MAAqC,EAA9BD,IAAIE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OACxC,OACE,iBAAiBZ,UAAWC,EAAAA,QAAAA,KAA5B,WACE,SAAC,EAAAY,OAAD,CACEF,KAAMA,EACNG,KAAM,GACNF,OAAQA,EACRG,OAAQN,EACRH,IAAKE,KAEP,0BAAOG,MARCP,EAWb,UAKV,C,8BCxDD,WAAgB,MAAQ,6BAA6B,UAAY,iCAAiC,IAAM,2BAA2B,KAAO,4BAA4B,MAAQ,6B","sources":["layouts/AppLayout/Chat/ReactionPopup/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chat/ReactionPopup/ReactionPopup.module.scss?5bbe"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Avatar, Modal } from \"components\";\nimport { getReactionUrl } from \"utils\";\n\nimport styles from \"./ReactionPopup.module.scss\";\n\nconst ReactionPopup = ({ isOpen, toggle, message }) => {\n  let [activeIndex, setActiveIndex] = useState();\n\n  const reaction = useMemo(() => {\n    if (!message.hasOwnProperty(\"reactions\")) return [];\n    return activeIndex === 0 || activeIndex\n      ? message.reactions[activeIndex].users\n      : message.reactions.reduce((initial, { users }) => {\n          return initial.concat(users);\n        }, []);\n  }, [activeIndex, message]);\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <div className={styles.popup}>\n        <div className={styles.reactions}>\n          <div className={styles.all} onClick={() => setActiveIndex()}>\n            <span>All</span>\n          </div>\n          {message?.reactions?.map(({ reaction, total }, index) => {\n            return (\n              <div\n                key={index}\n                className={styles.card}\n                onClick={() => setActiveIndex(index)}\n              >\n                <img src={getReactionUrl(reaction)} />\n                <span>{total}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className={styles.users}>\n          {reaction.map(({ avatar, email, id, name, status }, index) => {\n            return (\n              <div key={index} className={styles.card}>\n                <Avatar\n                  name={name}\n                  size={40}\n                  status={status}\n                  userId={id}\n                  src={avatar}\n                />\n                <span>{name}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ReactionPopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"ReactionPopup_popup__yt4AZ\",\"reactions\":\"ReactionPopup_reactions__3HDB6\",\"all\":\"ReactionPopup_all__nfaPI\",\"card\":\"ReactionPopup_card__P+lgl\",\"users\":\"ReactionPopup_users__81RJu\"};"],"names":["isOpen","toggle","message","useState","activeIndex","setActiveIndex","reaction","useMemo","hasOwnProperty","reactions","users","reduce","initial","concat","Modal","className","styles","onClick","map","index","total","src","getReactionUrl","avatar","id","email","name","status","Avatar","size","userId"],"sourceRoot":""}