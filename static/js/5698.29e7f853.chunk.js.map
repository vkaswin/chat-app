{"version":3,"file":"static/js/5698.29e7f853.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chat/Conversation/ReactionPopup/index.js","services/Message.js","services/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/ReactionPopup/ReactionPopup.module.scss?f2c7"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Avatar, Modal, Toast } from \"components\";\nimport { getReactionUrl } from \"utils\";\nimport { getReactions, getReactionsByType } from \"services/Message\";\n\nimport styles from \"./ReactionPopup.module.scss\";\n\nconst ReactionPopup = ({ isOpen, toggle, msgId }) => {\n  const [reactions, setReactions] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [type, setType] = useState();\n\n  let limit = 25;\n\n  useEffect(() => {\n    if (!isOpen) return;\n    getReaction();\n  }, [isOpen, msgId]);\n\n  const getReaction = async () => {\n    let params = {\n      page: 1,\n      limit,\n    };\n    try {\n      let [\n        {\n          data: { data: reaction },\n        },\n        {\n          data: { data: list },\n        },\n      ] = await Promise.all([\n        getReactions(msgId),\n        getReactionsByType(msgId, params),\n      ]);\n      setReactions(reaction);\n      setUsers(list);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const getReactionList = async (reaction) => {\n    let params = {\n      page: 1,\n      limit,\n      type: reaction,\n    };\n    try {\n      let {\n        data: { data },\n      } = await getReactionsByType(msgId, params);\n      setType(reaction);\n      setUsers(data);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <div className={styles.popup}>\n        <div className={styles.reactions}>\n          <div className={styles.all} onClick={() => getReactionList()}>\n            <span>All</span>\n          </div>\n          {reactions?.map(({ reaction, total }, index) => {\n            return (\n              <div\n                key={index}\n                className={styles.card}\n                onClick={() => getReactionList(reaction)}\n              >\n                <img src={getReactionUrl(reaction)} loading=\"lazy\" alt=\"\" />\n                <span>{total}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className={styles.users}>\n          {users.map(\n            ({ avatar, email, id, name, status, date, colorCode }, index) => {\n              return (\n                <div key={index} className={styles.card}>\n                  <Avatar\n                    name={name}\n                    size={40}\n                    status={status}\n                    userId={id}\n                    src={avatar || colorCode}\n                  />\n                  <span>{name}</span>\n                </div>\n              );\n            }\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ReactionPopup;\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const createMessage = (chatId, data) => {\n  return axios({\n    url: `${endpoints.message.createMessage}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n\nexport const getReactions = (msgId) => {\n  return axios({\n    url: `${endpoints.message.getReaction}/${msgId}`,\n    method: \"get\",\n  });\n};\n\nexport const getReactionsByType = (msgId, params) => {\n  return axios({\n    url: `${endpoints.message.getReactionByType}/${msgId}`,\n    method: \"get\",\n    params,\n  });\n};\n\nexport const getSeenByMsgId = (msgId, params) => {\n  return axios({\n    url: `${endpoints.message.getSeen}/${msgId}`,\n    method: \"get\",\n    params,\n  });\n};\n","import Axios from \"axios\";\nimport { cookies } from \"utils\";\nimport { baseURL } from \"config\";\n\nexport const axios = Axios.create({ baseURL });\n\naxios.interceptors.request.use(\n  (config) => {\n    const cookie = cookies();\n\n    const token = cookie.get(\"authToken\");\n    if (token) {\n      config.headers.Authorization = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      document.dispatchEvent(new CustomEvent(\"logout\"));\n    }\n    return Promise.reject(error?.response?.data);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"ReactionPopup_popup__aIJrS\",\"reactions\":\"ReactionPopup_reactions__GiKWs\",\"all\":\"ReactionPopup_all__Ofebr\",\"card\":\"ReactionPopup_card__i6T3l\",\"users\":\"ReactionPopup_users__zmbBG\"};"],"names":["isOpen","toggle","msgId","useState","reactions","setReactions","users","setUsers","setType","useEffect","getReaction","params","page","limit","Promise","all","getReactions","getReactionsByType","reaction","data","list","Toast","type","message","getReactionList","Modal","className","styles","onClick","map","index","total","src","getReactionUrl","loading","alt","avatar","id","email","name","status","colorCode","date","Avatar","size","userId","createMessage","chatId","axios","url","endpoints","method","getSeenByMsgId","Axios","baseURL","interceptors","request","use","config","token","cookies","get","headers","Authorization","error","reject","response","document","dispatchEvent","CustomEvent"],"sourceRoot":""}