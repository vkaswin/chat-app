{"version":3,"file":"static/js/688.1f406d19.chunk.js","mappings":"8OA6GA,UApGiB,WACf,IAAMA,EAAW,CACf,CACEC,MAAO,OACPC,KAAM,aAER,CACED,MAAO,QACPC,KAAM,YAER,CACED,MAAO,SACPC,KAAM,aAIJC,GAASC,EAAAA,EAAAA,aAEf,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAqB,WACzB,IAAIC,EAAqBC,EAAAA,KAAc,SAACC,GACtC,IAAIC,EAAOC,EAAAA,QAAoB,YAC7B,OAD2C,EAAXC,KACpBC,OAAO,GAAGC,gBAAkBL,CACzC,IAED,MAAO,CACLM,KAAMN,EAAOO,cACbC,MACEP,EAAKQ,OAAS,EACVR,EAAKS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAER,KAAKU,cAAcD,EAAET,KAAjC,IACVF,EAET,IACDN,EAAY,GAAD,eAAKD,IAAL,OAAkBI,IAC9B,EAEKgB,EACJ,eAACC,EAAD,uDAAU,OAAV,OACA,WACsBC,OAAOC,WAAP,sBAAZC,SAER3B,EAAO4B,KAAP,+BAAoCJ,GACrC,CALD,EAOF,OACE,gBAAKK,GAAG,qBAAqBC,UAAWC,EAAAA,QAAAA,cAAxC,gBACG5B,QADH,IACGA,OADH,EACGA,EAAU6B,KAAI,WAAkBC,GAAW,IAA1BlB,EAAyB,EAAzBA,KAAME,EAAmB,EAAnBA,MACtB,OACEA,EAAMC,OAAS,IACb,UAAC,EAAAgB,SAAD,YACE,gBAAKJ,UAAWC,EAAAA,QAAAA,MAAhB,UACE,uBAAIhB,MAELE,EAAMe,KAAI,WAA4BG,GAAS,IAAlCvB,EAAiC,EAAjCA,KAAMwB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAC3B,OACE,UAAC,EAAAH,SAAD,YACE,iBAAKJ,WAAWQ,EAAAA,EAAAA,YAAWP,EAAAA,QAAAA,cAA3B,WACE,iBAAKD,UAAWC,EAAAA,QAAAA,KAAaQ,QAAShB,IAAtC,WACE,SAAC,EAAAiB,OAAD,CACEC,IAAKL,EACLM,SAAU9B,EACV+B,KAAM,GACNN,OAAQA,KAEV,0BAAOzB,QAET,cACEkB,UAAU,2BACVD,GAAE,UAAKd,EAAL,YAAaoB,SAGnB,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAASC,SAAQ,WAAM/B,EAAN,YAAcoB,GAAnD,SACGtC,EAASmC,KAAI,WAAkBe,GAAO,IAAtBhD,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,MACrB,OACE,UAAC,EAAA8C,SAAA,KAAD,CAEEd,UAAWC,EAAAA,QAAAA,eAFb,WAIE,0BAAOjC,KACP,cAAGgC,UAAW/B,MAJTgD,EAOV,QA3BUZ,EA+BlB,MArCYF,EAyCpB,KAGN,C,8BC1GD,WAAgB,cAAgB,gCAAgC,MAAQ,wBAAwB,aAAe,+BAA+B,KAAO,uBAAuB,eAAiB,iC","sources":["pages/Contacts/index.js","webpack://react-chat-app/./src/pages/Contacts/Contacts.module.scss?47b9"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Avatar, DropDown } from \"components\";\nimport { classNames } from \"utils\";\nimport { useRouter } from \"hooks\";\nimport alphabets from \"data/alphabets.json\";\nimport contactsList from \"data/contacts.json\";\n\nimport styles from \"./Contacts.module.scss\";\n\nconst Contacts = () => {\n  const dropdown = [\n    {\n      label: \"Edit\",\n      icon: \"bx-pencil\",\n    },\n    {\n      label: \"Block\",\n      icon: \"bx-block\",\n    },\n    {\n      label: \"Delete\",\n      icon: \"bx-trash\",\n    },\n  ];\n\n  const router = useRouter();\n\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    sortContactsByName();\n  }, []);\n\n  const sortContactsByName = () => {\n    let contactByAlphabets = alphabets.map((letter) => {\n      let list = contactsList.filter(({ name }) => {\n        return name.charAt(0).toLowerCase() === letter;\n      });\n\n      return {\n        word: letter.toUpperCase(),\n        users:\n          list.length > 0\n            ? list.sort((a, b) => a.name.localeCompare(b.name))\n            : list,\n      };\n    });\n    setContacts([...contacts, ...contactByAlphabets]);\n  };\n\n  const handleChat =\n    (userId = \"4684\") =>\n    () => {\n      const { matches } = window.matchMedia(`(max-width: 786px)`);\n      if (!matches) return;\n      router.push(`/conversation?userId=${userId}`);\n    };\n\n  return (\n    <div id=\"contacts-container\" className={styles.contacts_list}>\n      {contacts?.map(({ word, users }, index) => {\n        return (\n          users.length > 0 && (\n            <Fragment key={index}>\n              <div className={styles.title}>\n                <b>{word}</b>\n              </div>\n              {users.map(({ name, profile, status }, ind) => {\n                return (\n                  <Fragment key={ind}>\n                    <div className={classNames(styles.contact_card)}>\n                      <div className={styles.user} onClick={handleChat()}>\n                        <Avatar\n                          src={profile}\n                          userName={name}\n                          size={35}\n                          status={status}\n                        />\n                        <span>{name}</span>\n                      </div>\n                      <i\n                        className=\"bx-dots-vertical-rounded\"\n                        id={`${word}-${ind}`}\n                      ></i>\n                    </div>\n                    <DropDown placement=\"bottom\" selector={`#${word}-${ind}`}>\n                      {dropdown.map(({ icon, label }, i) => {\n                        return (\n                          <DropDown.Item\n                            key={i}\n                            className={styles.contact_option}\n                          >\n                            <span>{label}</span>\n                            <i className={icon}></i>\n                          </DropDown.Item>\n                        );\n                      })}\n                    </DropDown>\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_list\":\"Contacts_contacts_list__70eS1\",\"title\":\"Contacts_title__CFJgb\",\"contact_card\":\"Contacts_contact_card__e3hM8\",\"user\":\"Contacts_user__9UUPA\",\"contact_option\":\"Contacts_contact_option__v54NK\"};"],"names":["dropdown","label","icon","router","useRouter","useState","contacts","setContacts","useEffect","sortContactsByName","contactByAlphabets","alphabets","letter","list","contactsList","name","charAt","toLowerCase","word","toUpperCase","users","length","sort","a","b","localeCompare","handleChat","userId","window","matchMedia","matches","push","id","className","styles","map","index","Fragment","ind","profile","status","classNames","onClick","Avatar","src","userName","size","DropDown","placement","selector","i"],"sourceRoot":""}