{"version":3,"file":"static/js/7352.794fe961.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chat/Conversation/index.js","layouts/AppLayout/Chat/Header/index.js","layouts/AppLayout/Chat/Loader/index.js","layouts/AppLayout/Chat/PageLoader/index.js","layouts/AppLayout/Chat/VideoPopup/index.js","layouts/AppLayout/Chat/index.js","services/Call.js","services/Chat.js","services/Message.js","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Chat.module.scss?7939","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/Conversation.module.scss?e9d7","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Header/Header.module.scss?9e92","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Loader/Loader.module.scss?3441","webpack://react-chat-app/./src/layouts/AppLayout/Chat/PageLoader/PageLoader.module.scss?8581","webpack://react-chat-app/./src/layouts/AppLayout/Chat/VideoPopup/VideoPopup.module.scss?a983"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { DropDown, DropDownItem } from \"components\";\nimport { classNames } from \"utils\";\nimport moment from \"moment\";\n\nimport styles from \"./Conversation.module.scss\";\n\nexport const Conversation = ({\n  chats,\n  onDelete,\n  onCopy,\n  onReply,\n  userId,\n  newMsg,\n  focusMsgById,\n  otherUserId,\n}) => {\n  return (\n    <Fragment>\n      {Object.entries(chats).map(([date, conversation], key) => {\n        return (\n          <Fragment key={key}>\n            <div className={styles.date}>\n              <span>{moment(date).format(\"D MMMM YYYY\")}</span>\n            </div>\n            <div className={styles.container}>\n              {conversation.map(\n                ({ msg, date, sender, _id, seen, reply = null }, index) => {\n                  return (\n                    <Fragment key={index}>\n                      {newMsg.id && newMsg.id === _id && (\n                        <div className={styles.unread_msg}>\n                          <span>\n                            {newMsg.count} Unread Message\n                            {newMsg.count > 1 && \"s\"}\n                          </span>\n                        </div>\n                      )}\n                      <div\n                        className={classNames(styles.chat_wrapper, {\n                          [styles.end]: userId === sender,\n                        })}\n                        msgid={_id}\n                      >\n                        <div className={styles.chat_card}>\n                          {reply && (\n                            <div\n                              className={styles.reply_card}\n                              onClick={() => focusMsgById(reply._id, \"smooth\")}\n                            >\n                              <span>{reply.msg}</span>\n                            </div>\n                          )}\n                          <div>\n                            <span>{msg}</span>\n                          </div>\n                          <div className={styles.msg_time}>\n                            <i className={`bx-time ${styles.clock}`}></i>\n                            <span>\n                              {moment(new Date(date)).format(\"h:mm a\")}\n                            </span>\n                            <i\n                              className={`bx bx-check-double ${styles.tick}`}\n                              seen={\n                                Array.isArray(otherUserId)\n                                  ? (\n                                      seen.length === otherUserId.length\n                                    ).toString()\n                                  : seen.includes(otherUserId).toString()\n                              }\n                            ></i>\n                          </div>\n                        </div>\n                        <div className={styles.options}>\n                          <i\n                            className=\"bx-dots-vertical-rounded\"\n                            id={`option-${key}${index}`}\n                          ></i>\n                          <DropDown\n                            selector={`#option-${key}${index}`}\n                            placement=\"bottom\"\n                          >\n                            <DropDownItem\n                              className=\"dropdown-option\"\n                              onClick={() => onReply(date, _id)}\n                            >\n                              <span>Reply</span>\n                              <i className=\"bx-share\"></i>\n                            </DropDownItem>\n                            <DropDownItem className=\"dropdown-option\">\n                              <span>Forward</span>\n                              <i className=\"bx-share-alt\"></i>\n                            </DropDownItem>\n                            <DropDownItem\n                              className=\"dropdown-option\"\n                              onClick={() => onCopy(msg)}\n                            >\n                              <span>Copy</span>\n                              <i className=\"bx-copy\"></i>\n                            </DropDownItem>\n                            <DropDownItem className=\"dropdown-option\">\n                              <span>Mark as Unread</span>\n                              <i className=\"bx-message-error\"></i>\n                            </DropDownItem>\n                            <DropDownItem\n                              className=\"dropdown-option\"\n                              onClick={() => onDelete(date, _id)}\n                            >\n                              <span>Delete</span>\n                              <i className=\"bx-trash\"></i>\n                            </DropDownItem>\n                          </DropDown>\n                        </div>\n                      </div>\n                    </Fragment>\n                  );\n                }\n              )}\n            </div>\n          </Fragment>\n        );\n      })}\n      <div className={styles.typing} typingstatus=\"\"></div>\n    </Fragment>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { DropDown, Avatar, DropDownItem } from \"components\";\nimport { classNames } from \"utils\";\n\nimport styles from \"./Header.module.scss\";\n\nexport const Header = ({\n  clearChatId,\n  chatDetails,\n  toggleInfo,\n  handleCall,\n  show,\n}) => {\n  const { matches } = matchMedia(`(max-width: 768px)`);\n\n  return (\n    <div className={classNames(styles.chat_header, show && styles.show)}>\n      <div className={styles.user_info}>\n        <div className={styles.go_back} onClick={clearChatId}>\n          <i className=\"bx bx-chevron-left\"></i>\n        </div>\n        <Avatar\n          src={chatDetails?.avatar}\n          name={chatDetails?.name}\n          size={50}\n          status={chatDetails?.status}\n          userId={chatDetails?.userId}\n        />\n        <div className={styles.user_name}>\n          <b>{chatDetails?.name}</b>\n          <span userid={chatDetails?.userId}>\n            {chatDetails?.users\n              ? `${chatDetails?.users?.length} Members`\n              : chatDetails?.status\n              ? \"Online\"\n              : \"Offline\"}\n          </span>\n        </div>\n      </div>\n      <div className={styles.chat_icons}>\n        {/* <i className=\"bxs-phone-call\"></i> */}\n        <i className=\"bx-video\" onClick={() => handleCall(\"video\")}></i>\n        <i className=\"bxs-info-circle\" onClick={toggleInfo}></i>\n        <i className=\"bx-dots-vertical-rounded\" id=\"more-option\"></i>\n        <DropDown selector=\"#more-option\" placement=\"bottom-end\" zIndex={2001}>\n          {matches && (\n            <Fragment>\n              <DropDownItem className=\"dropdown-option\" onClick={toggleInfo}>\n                <span>View Profile</span>\n                <i className=\"bx bx-user\"></i>\n              </DropDownItem>\n              {/* <DropDownItem\n                  className=\"dropdown-option\"\n                  onClick={() => handleCall(\"audio\")}\n                >\n                  <span>Audio</span>\n                  <i className=\"bx bxs-phone-call\"></i>\n                </DropDownItem> */}\n              <DropDownItem\n                className=\"dropdown-option\"\n                onClick={() => handleCall(\"video\")}\n              >\n                <span>Video</span>\n                <i className=\"bx bx-video\"></i>\n              </DropDownItem>\n            </Fragment>\n          )}\n          <DropDownItem className=\"dropdown-option\">\n            <span>Muted</span>\n            <i className=\"bx-microphone-off\"></i>\n          </DropDownItem>\n          <DropDownItem className=\"dropdown-option\">\n            <span>Delete</span>\n            <i className=\"bx-trash\"></i>\n          </DropDownItem>\n        </DropDown>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./Loader.module.scss\";\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { classNames } from \"utils\";\n\nimport styles from \"./PageLoader.module.scss\";\n\nexport const PageLoader = () => {\n  const cardWidth = [\"35%\", \"40%\", \"45%\", \"50%\"];\n\n  const skeleton = Array.from(\n    { length: 10 },\n    () => cardWidth[Math.floor(Math.random() * cardWidth.length)]\n  );\n\n  return (\n    <div className={styles.container}>\n      {skeleton.map((width, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.card, index % 2 === 0 && styles.end)}\n            style={{\n              \"--width\": width,\n            }}\n          >\n            <div className={`${styles.line} skeleton`}></div>\n            <div className={`${styles.line} skeleton`}></div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Modal } from \"components\";\n\nimport styles from \"./VideoPopup.module.scss\";\n\nexport const VideoPopup = ({ isOpen }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      width={750}\n      closeClickOnOutside={false}\n      zIndex={2002}\n    >\n      <div className={styles.video_container}>\n        <video\n          id=\"local-stream\"\n          className={styles.local}\n          poster=\"https://vue.pixelstrap.com/chitchat/_nuxt/img/videocall.336a27d.jpg\"\n          autoPlay\n          muted={true}\n        ></video>\n        <video\n          id=\"remote-stream\"\n          className={styles.remote}\n          poster=\"https://vue.pixelstrap.com/chitchat/_nuxt/img/videocall_bg.ab164fb.jpg\"\n          autoPlay\n        ></video>\n      </div>\n    </Modal>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { OffCanvas, Toast, Skeleton, ScrollBar } from \"components\";\nimport { TextArea } from \"./TextArea\";\nimport { Header } from \"./Header\";\nimport { Conversation } from \"./Conversation\";\nimport { VideoPopup } from \"./VideoPopup\";\nimport { useAuth } from \"hooks\";\nimport { createMessage, getMessagesByChatId } from \"services/Message\";\nimport { getChatById, markAsRead } from \"services/Chat\";\nimport { initiateCall } from \"services/Call\";\nimport { debounce } from \"utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { socket } from \"socket\";\nimport { Loader } from \"./Loader\";\nimport { PageLoader } from \"./PageLoader\";\n\nimport messageRingTone from \"assets/audio/fade-in-tone.mp3\";\nimport favicon from \"assets/images/favicon.ico\";\n\nimport styles from \"./Chat.module.scss\";\n\nconst audio = new Audio(messageRingTone);\n\nexport const Chat = () => {\n  const chatContainerRef = useRef();\n\n  const replyContainerRef = useRef();\n\n  const { user, chatId, clearChatId } = useAuth();\n\n  const peerConnection = useRef();\n\n  const [chats, setChats] = useState({});\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const [showVideo, setShowVideo] = useState(false);\n\n  const [replyId, setReplyId] = useState(null);\n\n  const [pageMeta, setPageMeta] = useState({});\n\n  const [chatDetails, setChatDetails] = useState({});\n\n  const [newMsg, setNewMsg] = useState({ id: null, count: null, list: [] });\n\n  const [loading, setLoading] = useState(false);\n\n  const [pageLoader, setPageLoader] = useState(true);\n\n  const msgId = useRef();\n\n  const limit = 30;\n\n  let iceCandidate;\n\n  useEffect(() => {\n    document.addEventListener(\"socket\", handleSocket);\n    return () => {\n      document.removeEventListener(\"socket\", handleSocket);\n    };\n  }, []);\n\n  useEffect(() => {\n    Object.keys(chats).length !== 0 && setChats({});\n    getChatDetails();\n  }, [chatId]);\n\n  useEffect(() => {\n    if (newMsg.list.length > 0) {\n      const msgId = newMsg.list.map(({ _id }) => {\n        return _id;\n      });\n      updateSeenStatus({ msgId });\n    }\n\n    if (!msgId.current || Object.keys(chats).length === 0) return;\n\n    focusMsgById(msgId.current);\n  }, [chats]);\n\n  const handleSocket = () => {\n    socket.on(\"message\", handleMessage);\n\n    socket.on(\"seen\", handleSeen);\n\n    socket.on(\"receive-offer\", handleOffer);\n\n    socket.on(\"receive-answer\", handleAnswer);\n\n    socket.on(\"start-typing\", handleStartTyping);\n\n    socket.on(\"end-typing\", handleEndTyping);\n  };\n\n  const handleStartTyping = (chatId, userName) => {\n    const id = sessionStorage.getItem(\"chatId\");\n\n    if (!id) return;\n\n    if (chatId !== id || !chatContainerRef.current) return;\n\n    const element = chatContainerRef.current.querySelector(\"[typingstatus]\");\n\n    if (!element) return;\n\n    element.setAttribute(\"typing\", `${userName.split(\" \")[0]} is typing...`);\n  };\n\n  const handleEndTyping = (chatId) => {\n    const id = sessionStorage.getItem(\"chatId\");\n\n    if (!id) return;\n\n    if (chatId !== id || !chatContainerRef.current) return;\n\n    const element = chatContainerRef.current.querySelector(\"[typingstatus]\");\n\n    if (!element) return;\n\n    element.removeAttribute(\"typing\");\n  };\n\n  //   Profile\n  const toggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n\n  //   Chats\n  const getChatDetails = async () => {\n    let params = {\n      page: 1,\n      limit,\n    };\n    try {\n      let [\n        {\n          data: { data },\n        },\n        {\n          data: {\n            data: { list, newMessages, pageMeta },\n          },\n        },\n      ] = await Promise.all([\n        getChatById(chatId),\n        getMessagesByChatId(chatId, params),\n      ]);\n      setChatDetails(data);\n      groupMessagesByDate(list, newMessages, pageMeta);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    } finally {\n      setPageLoader(false);\n    }\n  };\n\n  const getMessages = async (page) => {\n    try {\n      let params = {\n        limit,\n        page,\n      };\n      let {\n        data: {\n          data: { list, newMessages, pageMeta },\n        },\n      } = await getMessagesByChatId(chatId, params);\n      groupMessagesByDate(list, newMessages, pageMeta);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const groupMessagesByDate = (list, newMessages = [], pageMeta) => {\n    if (list.length === 0 && newMessages.length === 0) return;\n\n    if (newMessages.length > 0) {\n      let id = newMessages[0]?._id;\n      msgId.current = id;\n      list = list.concat(newMessages);\n      setNewMsg({\n        ...newMsg,\n        id,\n        count: newMessages.length,\n        list: newMessages,\n      });\n    } else {\n      msgId.current = list[list.length - 1]?._id;\n    }\n\n    const chatsByDate = list.reduce((initial, msg) => {\n      const key = getDate(msg.date);\n      return initial.hasOwnProperty(key)\n        ? {\n            ...initial,\n            [key]: [...initial[key], msg],\n          }\n        : { ...initial, [key]: [msg] };\n    }, {});\n\n    if (Object.keys(chatsByDate).length === 0) return;\n\n    setChats((prev) => {\n      const final = Object.entries(chatsByDate).reduce(\n        (initial, [date, msg]) => {\n          const key = getDate(date);\n          return initial.hasOwnProperty(key)\n            ? {\n                ...initial,\n                [key]: [...initial[key], ...msg].sort((a, b) => {\n                  return new Date(a.date) - new Date(b.date);\n                }),\n              }\n            : { ...initial, [key]: msg };\n        },\n        prev\n      );\n\n      const sortByDate = Object.keys(final).sort((a, b) => {\n        return new Date(a) - new Date(b);\n      });\n\n      return sortByDate.reduce((initial, date) => {\n        return { ...initial, [date]: final[date] };\n      }, {});\n    });\n\n    setPageMeta(pageMeta);\n  };\n\n  const updateSeenStatus = async (data) => {\n    if (!chatId) return;\n\n    try {\n      await markAsRead(chatId, data);\n      setNewMsg({ ...newMsg, list: [] });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleScroll = ({ target: { scrollTop } }) => {\n    if (pageLoader) return;\n\n    const { page, totalPages } = pageMeta;\n\n    if (scrollTop !== 0 || page >= totalPages) return;\n\n    setLoading(true);\n    setTimeout(() => getMessages(page + 1), 500);\n  };\n\n  const onSend = async (msg) => {\n    try {\n      let body = {\n        msg: msg,\n        date: new Date().toISOString(),\n        ...(replyId && { reply: replyId }),\n      };\n      let {\n        data: { data },\n      } = await createMessage(chatId, body);\n      addMessageInChat(data);\n      replyId && clearReplyMsg();\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const addMessageInChat = (data) => {\n    const key = getDate(data.date);\n    msgId.current = data._id;\n\n    setChats((prev) => {\n      return prev.hasOwnProperty(key)\n        ? { ...prev, [key]: [...prev[key], data] }\n        : { ...prev, [key]: [data] };\n    });\n  };\n\n  const onDelete = (date, id) => {\n    const key = getDate(date);\n\n    if (!chats.hasOwnProperty(key)) return;\n\n    const data = chats[key].filter(({ _id }) => id !== _id);\n\n    setChats({ ...chats, [key]: data });\n  };\n\n  //   Copy Msg\n  const onCopy = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  //   Reply Msg\n  const onReply = (date, id) => {\n    const key = getDate(date);\n    setReplyId({ key, id });\n  };\n\n  const clearReplyMsg = () => {\n    setReplyId(null);\n  };\n\n  const focusMsgById = (id = msgId.current || null, behavior = \"auto\") => {\n    if (!id) return;\n\n    const element = document.querySelector(`[msgid='${id}']`);\n\n    if (!element) return;\n\n    element.scrollIntoView({ block: \"center\", behavior });\n  };\n\n  const replyMsg = useMemo(() => {\n    return null;\n    // return chats.find(({ _id }) => replyId === _id);\n  }, [replyId]);\n\n  const handleMessage = (data) => {\n    if (data.sender === user?.id) return;\n\n    showNotification(data.msg);\n    playMessageRingTone();\n    addMessageInChat(data);\n    updateSeenStatus({ msgId: data._id });\n  };\n\n  const handleSeen = ({ userId, msgId }) => {\n    if (user?.id === userId) return;\n\n    const markAsSeen = (id) => {\n      const element = document.querySelector(`[msgid='${id}']`);\n\n      if (!element) return;\n\n      const ele = element.querySelector(\"[seen]\");\n      ele.setAttribute(\"seen\", true);\n    };\n\n    if (!Array.isArray(msgId)) {\n      markAsSeen(msgId);\n      return;\n    }\n\n    msgId.forEach((id) => {\n      markAsSeen(id);\n    });\n  };\n\n  // Ringtone\n  const playMessageRingTone = () => {\n    audio.muted = false;\n    audio.play();\n  };\n\n  // Notification\n  const showNotification = async (body) => {\n    if (Notification.permission !== \"granted\") return;\n\n    new Notification(\"New Message\", {\n      body,\n      icon: favicon,\n    });\n  };\n\n  const handleFocus = () => {\n    const { matches } = matchMedia(`(max-width: 768px)`);\n\n    if (!matches) return;\n\n    focusMsgById();\n  };\n\n  const getDate = (date) => {\n    return date.split(\"T\")[0];\n  };\n\n  //   Video Call\n  const handleCall = async (type) => {\n    setShowVideo(true);\n\n    try {\n      peerConnection.current = new RTCPeerConnection();\n\n      peerConnection.current.onicecandidate = handleIceCandidate;\n      peerConnection.current.ontrack = handleTrack;\n\n      let localStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        },\n        video: true,\n      });\n      let localVideo = document.querySelector(\"#local-stream\");\n      localVideo.srcObject = localStream;\n      localStream.getTracks().forEach((track) => {\n        peerConnection.current.addTrack(track, localStream);\n      });\n      let offer = await peerConnection.current.createOffer({\n        offerToReceiveAudio: 1,\n        offerToReceiveVideo: 1,\n      });\n\n      await peerConnection.current.setLocalDescription(offer);\n\n      const data = { date: new Date().toISOString(), offer, type };\n\n      await initiateCall(chatId, data);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const handleTrack = ({ streams: [remoteStream] }) => {\n    let remoteVideo = document.querySelector(\"#remote-stream\");\n    remoteVideo.srcObject = remoteStream;\n  };\n\n  const handleIceCandidate = (e) => {\n    const {\n      target: { localDescription },\n      candidate,\n    } = e;\n    if (candidate) {\n      iceCandidate = candidate;\n    }\n\n    if (!candidate || !iceCandidate) {\n      if (localDescription.type === \"offer\") {\n        let data = {\n          offer: localDescription,\n          iceCandidate,\n        };\n        socket.emit(\"send-offer\", data, chatId);\n      } else if (localDescription.type === \"answer\") {\n        let data = {\n          answer: localDescription,\n          iceCandidate,\n        };\n        socket.emit(\"send-answer\", data, chatId);\n      }\n    }\n  };\n\n  const handleOffer = async ({ iceCandidate, offer }) => {\n    setShowVideo(true);\n\n    const pc = new RTCPeerConnection();\n    peerConnection.current = pc;\n\n    peerConnection.current.onicecandidate = handleIceCandidate;\n    peerConnection.current.ontrack = handleTrack;\n\n    try {\n      let localStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        },\n        video: true,\n      });\n      let localVideo = document.querySelector(\"#local-stream\");\n      localVideo.srcObject = localStream;\n      localStream.getTracks().forEach((track) => {\n        peerConnection.current.addTrack(track, localStream);\n      });\n      await peerConnection.current.setRemoteDescription(offer);\n      await peerConnection.current.addIceCandidate(iceCandidate);\n      let answer = await peerConnection.current.createAnswer();\n      await peerConnection.current.setLocalDescription(answer);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleAnswer = async ({ iceCandidate, answer }) => {\n    try {\n      await peerConnection.current.setRemoteDescription(answer);\n      await peerConnection.current.addIceCandidate(iceCandidate);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div\n      ref={chatContainerRef}\n      className={styles.chat_wrapper}\n      onScroll={debounce(handleScroll, 100)}\n    >\n      <Header\n        clearChatId={clearChatId}\n        chatDetails={chatDetails}\n        handleCall={handleCall}\n        toggleInfo={toggleInfo}\n        show={!!chatId}\n      />\n      {loading && <Loader />}\n      <div className={styles.chat_section}>\n        {pageLoader ? (\n          <PageLoader />\n        ) : (\n          <Conversation\n            chats={chats}\n            onDelete={onDelete}\n            onCopy={onCopy}\n            onReply={onReply}\n            userId={user?.id}\n            otherUserId={chatDetails?.userId || chatDetails?.users}\n            focusMsgById={focusMsgById}\n            newMsg={newMsg}\n            chatId={chatId}\n          />\n        )}\n      </div>\n      <TextArea\n        onSend={onSend}\n        onFocus={handleFocus}\n        chatId={chatId}\n        otherUser={\n          chatDetails?.userId\n            ? { id: chatDetails?.userId, name: chatDetails?.name }\n            : chatDetails?.users\n        }\n      />\n      <CSSTransition\n        in={Boolean(replyId)}\n        timeout={250}\n        classNames={{\n          enterActive: styles.reply_enter,\n          exitActive: styles.reply_exit,\n        }}\n        unmountOnExit\n      >\n        <div className={styles.reply_container} ref={replyContainerRef}>\n          <div className={styles.reply_card}>\n            <span className=\"truncate-4\">{replyMsg?.msg}</span>\n            <i className={`bx-x ${styles.close}`} onClick={clearReplyMsg}></i>\n          </div>\n        </div>\n      </CSSTransition>\n      <OffCanvas\n        isOpen={showInfo}\n        position=\"right\"\n        className={styles.profile_sidebar}\n        toggle={toggleInfo}\n        zIndex={2001}\n      >\n        <div>Hello</div>\n      </OffCanvas>\n      <VideoPopup isOpen={showVideo} />\n    </div>\n  );\n};\n\n/*  bx bx-microphone\n  bx bx-video\n  bx-exit-fullscreen\n  bx-fullscreen\n  bxs-phone-call\n  bxs-phone\n  bx-cast\n  bx-stop\n  bx-pin bxs-pin */\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getCallHistory = () => {\n  return axios({ url: endpoints.call.history, method: \"get\" });\n};\n\nexport const initiateCall = (chatId, data) => {\n  return axios({\n    url: `${endpoints.call.initiate}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getRecentChats = () => {\n  return axios({ url: endpoints.chat.recentChats, method: \"get\" });\n};\n\nexport const getFavouriteChats = () => {\n  return axios({ url: endpoints.chat.favouriteChats, method: \"get\" });\n};\n\nexport const getGroupChats = () => {\n  return axios({ url: endpoints.chat.groupChats, method: \"get\" });\n};\n\nexport const getChatById = (chatId) => {\n  return axios({\n    url: `${endpoints.chat.chatDetails}/${chatId}`,\n    method: \"get\",\n  });\n};\n\nexport const addToFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.addFavourite, method: \"put\" });\n};\n\nexport const removeFromFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.removeFavourite, method: \"delete\" });\n};\n\nexport const markAsRead = (chatId, data) => {\n  return axios({\n    url: `${endpoints.chat.markAsRead}/${chatId}`,\n    method: \"put\",\n    data,\n  });\n};\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const createMessage = (chatId, data) => {\n  return axios({\n    url: `${endpoints.message.createMessage}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n\nexport const getMessagesByChatId = (chatId, params) => {\n  return axios({\n    url: `${endpoints.message.getMessages}/${chatId}`,\n    method: \"get\",\n    params,\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chat_wrapper\":\"Chat_chat_wrapper__gid5u\",\"chat_section\":\"Chat_chat_section__3JB1Y\",\"chat_skeleton\":\"Chat_chat_skeleton__6w6um\",\"reply_enter\":\"Chat_reply_enter__QdcSq\",\"from-bottom\":\"Chat_from-bottom__yjlc1\",\"reply_exit\":\"Chat_reply_exit__CEbB5\",\"reply_container\":\"Chat_reply_container__Hj6fN\",\"reply_card\":\"Chat_reply_card__6LYq6\",\"close\":\"Chat_close__2-iqb\",\"profile_sidebar\":\"Chat_profile_sidebar__DYbvp\",\"zoom-in\":\"Chat_zoom-in__p3vEB\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Conversation_container__I7CJi\",\"chat_wrapper\":\"Conversation_chat_wrapper__S3O8R\",\"end\":\"Conversation_end__ZMbi5\",\"chat_card\":\"Conversation_chat_card__jz70L\",\"reply_card\":\"Conversation_reply_card__AEy90\",\"msg_time\":\"Conversation_msg_time__wN53F\",\"tick\":\"Conversation_tick__RkyEe\",\"clock\":\"Conversation_clock__y4n8i\",\"options\":\"Conversation_options__WLSBI\",\"date\":\"Conversation_date__ZfQTB\",\"unread_msg\":\"Conversation_unread_msg__yFItk\",\"typing\":\"Conversation_typing__Q3x0K\",\"section\":\"Conversation_section__wG88I\",\"load\":\"Conversation_load__rqCbg\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_header\":\"Header_chat_header__QpmQQ\",\"user_info\":\"Header_user_info__iEHZa\",\"go_back\":\"Header_go_back__lCP4K\",\"user_name\":\"Header_user_name__Trw38\",\"chat_icons\":\"Header_chat_icons__JOz6D\",\"show\":\"Header_show__F368n\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__gQpe+\",\"rotation\":\"Loader_rotation__Q-TX-\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageLoader_container__WEvcy\",\"card\":\"PageLoader_card__Fmr-Q\",\"end\":\"PageLoader_end__ahXWd\",\"line\":\"PageLoader_line__y70Cl\"};","// extracted by mini-css-extract-plugin\nexport default {\"video_container\":\"VideoPopup_video_container__EcnPE\",\"remote\":\"VideoPopup_remote__x1HvW\",\"local\":\"VideoPopup_local__xIYkj\"};"],"names":["Conversation","chats","onDelete","onCopy","onReply","userId","newMsg","focusMsgById","otherUserId","Fragment","Object","entries","map","key","date","conversation","className","styles","moment","format","index","msg","sender","_id","seen","reply","id","count","classNames","msgid","onClick","Date","Array","isArray","length","toString","includes","DropDown","selector","placement","DropDownItem","typingstatus","Header","clearChatId","chatDetails","toggleInfo","handleCall","show","matches","matchMedia","Avatar","src","avatar","name","size","status","userid","users","zIndex","Loader","PageLoader","cardWidth","skeleton","from","Math","floor","random","width","style","VideoPopup","isOpen","Modal","closeClickOnOutside","poster","autoPlay","muted","audio","Audio","messageRingTone","Chat","iceCandidate","chatContainerRef","useRef","replyContainerRef","useAuth","user","chatId","peerConnection","useState","setChats","showInfo","setShowInfo","showVideo","setShowVideo","replyId","setReplyId","pageMeta","setPageMeta","setChatDetails","list","setNewMsg","loading","setLoading","pageLoader","setPageLoader","msgId","useEffect","document","addEventListener","handleSocket","removeEventListener","keys","getChatDetails","updateSeenStatus","current","socket","handleMessage","handleSeen","handleOffer","handleAnswer","handleStartTyping","handleEndTyping","userName","sessionStorage","getItem","element","querySelector","setAttribute","split","removeAttribute","params","page","limit","Promise","all","getChatById","getMessagesByChatId","data","newMessages","groupMessagesByDate","Toast","type","message","getMessages","concat","chatsByDate","reduce","initial","getDate","hasOwnProperty","prev","final","sort","a","b","markAsRead","console","log","onSend","body","toISOString","createMessage","addMessageInChat","clearReplyMsg","behavior","scrollIntoView","block","replyMsg","useMemo","showNotification","playMessageRingTone","markAsSeen","forEach","play","Notification","permission","icon","favicon","RTCPeerConnection","onicecandidate","handleIceCandidate","ontrack","handleTrack","navigator","mediaDevices","getUserMedia","echoCancellation","noiseSuppression","autoGainControl","video","localStream","srcObject","getTracks","track","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","initiateCall","remoteStream","streams","e","localDescription","target","candidate","answer","pc","setRemoteDescription","addIceCandidate","createAnswer","ref","onScroll","debounce","scrollTop","totalPages","setTimeout","filter","text","clipboard","writeText","TextArea","onFocus","otherUser","in","Boolean","timeout","enterActive","exitActive","unmountOnExit","OffCanvas","position","toggle","getCallHistory","axios","url","endpoints","method","getRecentChats","getFavouriteChats","getGroupChats","addToFavourite","removeFromFavourite"],"sourceRoot":""}