{"version":3,"file":"static/js/7352.7ba0dd17.chunk.js","mappings":"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","sources":["layouts/AppLayout/Chat/Conversation/Options/index.js","layouts/AppLayout/Chat/Conversation/Reaction/index.js","layouts/AppLayout/Chat/Conversation/index.js","layouts/AppLayout/Chat/Header/index.js","layouts/AppLayout/Chat/Loader/index.js","layouts/AppLayout/Chat/PageLoader/index.js","layouts/AppLayout/Chat/TextArea/Emoji/index.js","layouts/AppLayout/Chat/TextArea/index.js","layouts/AppLayout/Chat/VideoPopup/index.js","layouts/AppLayout/Chat/index.js","services/Call.js","services/Chat.js","services/Message.js","services/Others.js","services/index.js","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Chat.module.scss?7939","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/Conversation.module.scss?e9d7","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Conversation/Reaction/Reaction.module.scss?7ea8","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Header/Header.module.scss?9e92","webpack://react-chat-app/./src/layouts/AppLayout/Chat/Loader/Loader.module.scss?3441","webpack://react-chat-app/./src/layouts/AppLayout/Chat/PageLoader/PageLoader.module.scss?8581","webpack://react-chat-app/./src/layouts/AppLayout/Chat/TextArea/Emoji/Emoji.module.scss?a81f","webpack://react-chat-app/./src/layouts/AppLayout/Chat/TextArea/TextArea.module.scss?db70","webpack://react-chat-app/./src/layouts/AppLayout/Chat/VideoPopup/VideoPopup.module.scss?a983"],"sourcesContent":["import React from \"react\";\nimport { DropDown, DropDownItem } from \"components\";\n\nexport const Options = ({\n  onReply,\n  onDelete,\n  onCopy,\n  selector,\n  date,\n  msgId,\n  msg,\n}) => {\n  return (\n    <DropDown selector={selector} placement=\"bottom\">\n      <DropDownItem\n        className=\"dropdown-option\"\n        onClick={() => onReply(date, msgId)}\n      >\n        <span>Reply</span>\n        <i className=\"bx-share\"></i>\n      </DropDownItem>\n      <DropDownItem className=\"dropdown-option\">\n        <span>Forward</span>\n        <i className=\"bx-share-alt\"></i>\n      </DropDownItem>\n      <DropDownItem className=\"dropdown-option\" onClick={() => onCopy(msg)}>\n        <span>Copy</span>\n        <i className=\"bx-copy\"></i>\n      </DropDownItem>\n      <DropDownItem className=\"dropdown-option\">\n        <span>Mark as Unread</span>\n        <i className=\"bx-message-error\"></i>\n      </DropDownItem>\n      <DropDownItem\n        className=\"dropdown-option\"\n        onClick={() => onDelete(date, msgId)}\n      >\n        <span>Delete</span>\n        <i className=\"bx-trash\"></i>\n      </DropDownItem>\n    </DropDown>\n  );\n};\n","import React from \"react\";\nimport { baseURL } from \"config\";\nimport { DropDown, DropDownItem } from \"components\";\n\nimport styles from \"./Reaction.module.scss\";\n\nexport const Reaction = ({ reactions, selector, onClick }) => {\n  return (\n    <DropDown\n      selector={selector}\n      className={styles.container}\n      placement=\"bottom\"\n      zIndex={2000}\n    >\n      {reactions.map((emoji, index) => {\n        return (\n          <DropDownItem\n            className={styles.wrapper}\n            key={index}\n            onClick={() => onClick(emoji)}\n          >\n            <img id={emoji} src={`${baseURL}/reaction/${emoji}.png`} />\n          </DropDownItem>\n        );\n      })}\n    </DropDown>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { classNames } from \"utils\";\nimport { Reaction } from \"./Reaction\";\nimport { Options } from \"./Options\";\nimport moment from \"moment\";\n\nimport styles from \"./Conversation.module.scss\";\n\nexport const Conversation = ({\n  chats,\n  onDelete,\n  onCopy,\n  onReply,\n  userId,\n  focusMsgById,\n  otherUserId,\n  unReadMsg,\n  isGroupChat,\n  reactionList,\n  handleReaction,\n}) => {\n  return (\n    <Fragment>\n      {chats.map(({ day, messages }, key) => {\n        return (\n          <Fragment key={key}>\n            <div className={styles.date}>\n              <span>{moment(day).format(\"D MMMM YYYY\")}</span>\n            </div>\n            <div className={styles.container}>\n              {messages.map(\n                (\n                  {\n                    msg,\n                    date,\n                    sender: { id = null, name = null, avatar = null } = {},\n                    _id,\n                    seen,\n                    reply = null,\n                    reactions,\n                  },\n                  index\n                ) => {\n                  return (\n                    <Fragment key={_id}>\n                      {unReadMsg.id && unReadMsg.id === _id && (\n                        <div className={styles.unread_msg}>\n                          <span>\n                            {unReadMsg.total} Unread Message\n                            {unReadMsg.total > 1 && \"s\"}\n                          </span>\n                        </div>\n                      )}\n                      <div\n                        className={classNames(styles.chat_wrapper, {\n                          [styles.end]: userId === id,\n                        })}\n                        msgid={_id}\n                        {...(key === 0 && index === 0 && { first: \"\" })}\n                        {...(key === chats.length - 1 &&\n                          index === messages.length - 1 && { last: \"\" })}\n                      >\n                        <div\n                          className={styles.chat_card}\n                          id={`reaction-${_id}`}\n                        >\n                          {reply && (\n                            <div\n                              className={styles.reply_card}\n                              onClick={() => focusMsgById(reply._id, \"smooth\")}\n                            >\n                              <span>{reply.msg}</span>\n                            </div>\n                          )}\n                          <div>\n                            {isGroupChat && id !== userId && (\n                              <span\n                                style={{ color: avatar }}\n                                className={styles.user_name}\n                              >\n                                {name.split(\" \")[0]}\n                              </span>\n                            )}\n                            <span>{msg}</span>\n                          </div>\n                          <div className={styles.msg_time}>\n                            <i className={`bx-time ${styles.clock}`}></i>\n                            <span>\n                              {moment(new Date(date)).format(\"h:mm a\")}\n                            </span>\n                            <i\n                              className={`bx bx-check-double ${styles.tick}`}\n                              seen={\n                                Array.isArray(otherUserId)\n                                  ? (\n                                      seen.length === otherUserId.length\n                                    ).toString()\n                                  : seen.includes(otherUserId).toString()\n                              }\n                            ></i>\n                          </div>\n                        </div>\n                        <div className={styles.options}>\n                          <i\n                            className=\"bx-dots-vertical-rounded\"\n                            id={`option-${_id}`}\n                          ></i>\n                          <Options\n                            selector={`#option-${_id}`}\n                            onCopy={onCopy}\n                            onReply={onReply}\n                            onDelete={onDelete}\n                            date={date}\n                            msgId={_id}\n                            msg={msg}\n                          />\n                        </div>\n                      </div>\n                      <Reaction\n                        selector={`#reaction-${_id}`}\n                        reactions={reactionList}\n                        onClick={(emoji) =>\n                          handleReaction(emoji, reactions, _id)\n                        }\n                      />\n                    </Fragment>\n                  );\n                }\n              )}\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { DropDown, Avatar, DropDownItem } from \"components\";\nimport { classNames } from \"utils\";\n\nimport styles from \"./Header.module.scss\";\n\nexport const Header = ({\n  clearChatId,\n  chatDetails,\n  toggleInfo,\n  handleCall,\n  show,\n}) => {\n  const { matches } = matchMedia(`(max-width: 768px)`);\n\n  return (\n    <div className={classNames(styles.chat_header, show && styles.show)}>\n      <div className={styles.user_info}>\n        <div className={styles.go_back} onClick={clearChatId}>\n          <i className=\"bx bx-chevron-left\"></i>\n        </div>\n        <Avatar\n          src={chatDetails?.avatar}\n          name={chatDetails?.name}\n          size={50}\n          status={chatDetails?.status}\n          userId={chatDetails?.userId}\n        />\n        <div className={styles.user_name}>\n          <b>{chatDetails?.name}</b>\n          <span userid={chatDetails?.userId}>\n            {chatDetails?.users\n              ? `${chatDetails?.users?.length} Members`\n              : chatDetails?.status\n              ? \"Online\"\n              : \"Offline\"}\n          </span>\n        </div>\n      </div>\n      <div className={styles.chat_icons}>\n        {/* <i className=\"bxs-phone-call\"></i> */}\n        <i className=\"bx-video\" onClick={() => handleCall(\"video\")}></i>\n        <i className=\"bxs-info-circle\" onClick={toggleInfo}></i>\n        <i className=\"bx-dots-vertical-rounded\" id=\"more-option\"></i>\n        <DropDown selector=\"#more-option\" placement=\"bottom-end\" zIndex={2001}>\n          {matches && (\n            <Fragment>\n              <DropDownItem className=\"dropdown-option\" onClick={toggleInfo}>\n                <span>View Profile</span>\n                <i className=\"bx bx-user\"></i>\n              </DropDownItem>\n              {/* <DropDownItem\n                  className=\"dropdown-option\"\n                  onClick={() => handleCall(\"audio\")}\n                >\n                  <span>Audio</span>\n                  <i className=\"bx bxs-phone-call\"></i>\n                </DropDownItem> */}\n              <DropDownItem\n                className=\"dropdown-option\"\n                onClick={() => handleCall(\"video\")}\n              >\n                <span>Video</span>\n                <i className=\"bx bx-video\"></i>\n              </DropDownItem>\n            </Fragment>\n          )}\n          <DropDownItem className=\"dropdown-option\">\n            <span>Muted</span>\n            <i className=\"bx-microphone-off\"></i>\n          </DropDownItem>\n          <DropDownItem className=\"dropdown-option\">\n            <span>Delete</span>\n            <i className=\"bx-trash\"></i>\n          </DropDownItem>\n        </DropDown>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./Loader.module.scss\";\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { classNames } from \"utils\";\n\nimport styles from \"./PageLoader.module.scss\";\n\nexport const PageLoader = () => {\n  const cardWidth = [\"25%\", \"27.5%\", \"30%\", \"32.5%\", \"35%\"];\n\n  const skeleton = Array.from(\n    { length: 10 },\n    () => cardWidth[Math.floor(Math.random() * cardWidth.length)]\n  );\n\n  return (\n    <div className={styles.container}>\n      {skeleton.map((width, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.card, index % 2 === 0 && styles.end)}\n            style={{\n              \"--width\": width,\n            }}\n          >\n            <div className={`${styles.line} skeleton`}></div>\n            <div className={`${styles.line} skeleton`}></div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { Tooltip, DropDown } from \"components\";\nimport emojis from \"./emoji.json\";\n\nimport styles from \"./Emoji.module.scss\";\n\nexport const Emoji = ({ toggle, isOpen, selector, onChange }) => {\n  const types = [\n    {\n      label: \"Smileys & People\",\n      icon: \"bx-smile\",\n    },\n    {\n      label: \"Animals & Nature\",\n      icon: \"bx-leaf\",\n    },\n    {\n      label: \"Travel & Places\",\n      icon: \"bx-home-alt\",\n    },\n    {\n      label: \"Activities\",\n      icon: \"bx-baseball\",\n    },\n    {\n      label: \"Objects\",\n      icon: \"bx-world\",\n    },\n    {\n      label: \"Symbols\",\n      icon: \"bx-bulb\",\n    },\n    {\n      label: \"Flags\",\n      icon: \"bx-flag\",\n    },\n  ];\n\n  const emojiRef = useRef();\n\n  const handleFocus = (title) => () => {\n    const { offsetTop } = document.querySelector(`[emoji-title=\"${title}\"]`);\n    emojiRef.current.scrollTo(0, offsetTop - 95);\n  };\n\n  const handleEmoji = (emoji) => () => {\n    onChange(emoji);\n    toggle();\n  };\n\n  return (\n    <DropDown\n      isOpen={isOpen}\n      toggle={toggle}\n      selector={selector}\n      placement=\"top-center\"\n      zIndex={2000}\n    >\n      <div className={styles.emoji_container}>\n        <div className={styles.emoji_header}>\n          {types.map(({ label, icon }, index) => {\n            return (\n              <div\n                key={index}\n                id={`emoji-type-${index}`}\n                className={styles.emoji_type}\n                onClick={handleFocus(label)}\n              >\n                <i className={icon}></i>\n                <Tooltip\n                  placement=\"top\"\n                  selector={`#emoji-type-${index}`}\n                  offset={10}\n                >\n                  {label}\n                </Tooltip>\n              </div>\n            );\n          })}\n          <div id=\"emoji-close\" className={styles.close} onClick={toggle}>\n            <span>&#10799;</span>\n            <Tooltip placement=\"top\" selector={`#emoji-close`} offset={10}>\n              Close\n            </Tooltip>\n          </div>\n        </div>\n        <div className={styles.search_emoji}>\n          <input type=\"text\" placeholder=\"Search Emoji\" />\n          <div className={styles.search_icon}>\n            <i className=\"bx-search-alt-2\"></i>\n          </div>\n        </div>\n        <div className={styles.emoji_card} ref={emojiRef}>\n          {Object.entries(emojis).map(([title, list], index) => {\n            return (\n              <div key={index}>\n                <div className={styles.emoji_title} emoji-title={title}>\n                  <b>{title}</b>\n                </div>\n                <div className={styles.emoji_list}>\n                  {list.map(({ emoji, description }, index) => {\n                    return (\n                      <button\n                        key={index}\n                        title={description}\n                        onClick={handleEmoji(emoji)}\n                      >\n                        <div className={styles.emoji_icon}>{emoji}</div>\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </DropDown>\n  );\n};\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { fileUpload } from \"services/Others\";\nimport { Emoji } from \"./Emoji\";\nimport { Toast } from \"components/Toast\";\nimport { debounce } from \"utils\";\nimport { socket } from \"socket\";\n\nimport styles from \"./TextArea.module.scss\";\n\nexport const TextArea = ({ onSend, onFocus, chatId, otherUser }) => {\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const [text, setText] = useState(\"\");\n\n  const [rec, setRec] = useState();\n\n  const [typing, setTyping] = useState(false);\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const SpeechRecognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    const recognition = new SpeechRecognition();\n\n    recognition.interimResults = true;\n    recognition.continuous = true;\n\n    recognition.onstart = (e) => {\n      console.log(e);\n    };\n\n    recognition.onend = (e) => {\n      console.log(e);\n    };\n\n    recognition.onresult = ({ results }) => {\n      let transcript = Array.from(results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join(\"\");\n\n      setText(text.concat(transcript));\n    };\n\n    recognition.onerror = (e) => {\n      console.log(e);\n    };\n\n    setRec(recognition);\n  }, []);\n\n  const getUsers = () => {\n    return Array.isArray(otherUser)\n      ? otherUser.map(({ _id, name }) => {\n          return {\n            id: _id,\n            name,\n          };\n        })\n      : otherUser;\n  };\n\n  const handleTyping = () => {\n    socket.emit(\"end-typing\", chatId, getUsers());\n    setTyping(false);\n  };\n\n  const handleKeyDown = () => {\n    if (typing) return;\n    socket.emit(\"start-typing\", chatId, getUsers());\n    setTyping(true);\n  };\n\n  const handleEmoji = (emoji) => {\n    setText(text.concat(emoji));\n  };\n\n  const toggleEmoji = () => {\n    setShowEmoji(!showEmoji);\n  };\n\n  const onSubmit = async () => {\n    const text = inputRef.current.value;\n    if (text.length === 0) return;\n\n    await onSend(text);\n    inputRef.current.value = \"\";\n  };\n\n  const onPointerDown = () => {\n    rec?.start();\n  };\n\n  const onPointerUp = () => {\n    rec?.stop();\n  };\n\n  const handleFile = async ({ target: { files } }) => {\n    try {\n      const formData = new FormData();\n\n      for (const file of files) {\n        formData.append(\"file\", file);\n      }\n\n      const res = await fileUpload(formData);\n      console.log(res);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.chat_input}>\n        <i className=\"bx-smile\" id=\"emoji\"></i>\n        <div className={styles.input_field}>\n          <textarea\n            ref={inputRef}\n            placeholder=\"Type your message...\"\n            name=\"chat-input\"\n            onFocus={onFocus}\n            onKeyDown={handleKeyDown}\n            onChange={debounce(handleTyping, 1000)}\n          />\n          <label htmlFor=\"chat-file\">\n            <i className=\"bx-paperclip\" id=\"attach\"></i>\n          </label>\n          <input\n            id=\"chat-file\"\n            type=\"file\"\n            onChange={handleFile}\n            multiple\n            hidden\n          />\n        </div>\n        <button onClick={onSubmit}>\n          <i className=\"bxs-send\"></i>\n        </button>\n        <i\n          className=\"bx-microphone\"\n          id=\"mic\"\n          onPointerDown={onPointerDown}\n          onPointerUp={onPointerUp}\n        ></i>\n      </div>\n      <Emoji\n        selector=\"#emoji\"\n        isOpen={showEmoji}\n        toggle={toggleEmoji}\n        onChange={handleEmoji}\n      />\n    </Fragment>\n  );\n};\n","import React from \"react\";\nimport { Modal } from \"components\";\n\nimport styles from \"./VideoPopup.module.scss\";\n\nexport const VideoPopup = ({ isOpen }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      width={750}\n      closeClickOnOutside={false}\n      zIndex={2002}\n    >\n      <div className={styles.video_container}>\n        <video\n          id=\"local-stream\"\n          className={styles.local}\n          poster=\"https://vue.pixelstrap.com/chitchat/_nuxt/img/videocall.336a27d.jpg\"\n          autoPlay\n          muted={true}\n        ></video>\n        <video\n          id=\"remote-stream\"\n          className={styles.remote}\n          poster=\"https://vue.pixelstrap.com/chitchat/_nuxt/img/videocall_bg.ab164fb.jpg\"\n          autoPlay\n        ></video>\n      </div>\n    </Modal>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { OffCanvas, Toast, ScrollBar } from \"components\";\nimport { TextArea } from \"./TextArea\";\nimport { Header } from \"./Header\";\nimport { Conversation } from \"./Conversation\";\nimport { VideoPopup } from \"./VideoPopup\";\nimport { useAuth } from \"hooks\";\nimport { createMessage } from \"services/Message\";\nimport {\n  getChatById,\n  markAsReadByMsgId,\n  markAsRead,\n  getChatMessagesByMsgId,\n  createReaction,\n  updateReaction,\n} from \"services/Chat\";\nimport { initiateCall } from \"services/Call\";\nimport { debounce } from \"utils\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { socket } from \"socket\";\nimport { Loader } from \"./Loader\";\nimport { PageLoader } from \"./PageLoader\";\n\nimport messageRingTone from \"assets/audio/fade-in-tone.mp3\";\nimport favicon from \"assets/images/favicon.ico\";\n\nimport styles from \"./Chat.module.scss\";\n\nconst audio = new Audio(messageRingTone);\n\nexport const Chat = ({ reactions }) => {\n  const chatContainerRef = useRef();\n\n  const replyContainerRef = useRef();\n\n  const { user, chatId, clearChatId } = useAuth();\n\n  const peerConnection = useRef();\n\n  const [chats, setChats] = useState([]);\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const [showVideo, setShowVideo] = useState(false);\n\n  const [replyId, setReplyId] = useState(null);\n\n  const [chatDetails, setChatDetails] = useState({});\n\n  const [topLoader, setTopLoader] = useState(false);\n\n  const [bottomLoader, setBottomLoader] = useState(false);\n\n  const [unReadMsg, setUnReadMsg] = useState({});\n\n  const [pageLoader, setPageLoader] = useState(true);\n\n  const [hasMoreTop, setHasMoreTop] = useState(false);\n\n  const [hasMoreBottom, setHasMoreBottom] = useState(false);\n\n  const msgId = useRef();\n\n  const iceCandidate = useRef();\n\n  const limit = 50;\n\n  useEffect(() => {\n    document.addEventListener(\"socket\", handleSocket);\n    return () => {\n      document.removeEventListener(\"socket\", handleSocket);\n    };\n  }, []);\n\n  useEffect(() => {\n    chats.length !== 0 && setChats([]);\n    getChatDetails();\n  }, [chatId]);\n\n  useEffect(() => {\n    if (!msgId.current || chats.length === 0) return;\n    focusMsgById(msgId.current);\n  }, [chats]);\n\n  useEffect(() => {\n    if (!msgId.current || pageLoader) return;\n\n    focusMsgById(msgId.current);\n  }, [pageLoader]);\n\n  const handleSocket = () => {\n    socket.on(\"message\", handleMessage);\n\n    socket.on(\"seen\", handleSeen);\n\n    socket.on(\"receive-offer\", handleOffer);\n\n    socket.on(\"receive-answer\", handleAnswer);\n\n    socket.on(\"start-typing\", handleStartTyping);\n\n    socket.on(\"end-typing\", handleEndTyping);\n  };\n\n  const handleStartTyping = (chatId, userName) => {\n    const id = sessionStorage.getItem(\"chatId\");\n\n    if (!id) return;\n\n    if (chatId !== id || !chatContainerRef.current) return;\n\n    const element = chatContainerRef.current.querySelector(\"[typingstatus]\");\n\n    if (!element) return;\n\n    element.setAttribute(\"typing\", `${userName.split(\" \")[0]} is typing...`);\n  };\n\n  const handleEndTyping = (chatId) => {\n    const id = sessionStorage.getItem(\"chatId\");\n\n    if (!id) return;\n\n    if (chatId !== id || !chatContainerRef.current) return;\n\n    const element = chatContainerRef.current.querySelector(\"[typingstatus]\");\n\n    if (!element) return;\n\n    element.removeAttribute(\"typing\");\n  };\n\n  //   Profile\n  const toggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n\n  //   Chats\n  const getChatDetails = async () => {\n    setPageLoader(true);\n    try {\n      let {\n        data: {\n          data: {\n            chatDetails = {},\n            unReadMsgList = [],\n            msgList = [],\n            hasMoreTop = false,\n            hasMoreBottom = false,\n            totalUnReadMsg = 0,\n          },\n        },\n      } = await getChatById(chatId, { limit });\n      if (unReadMsgList.length > 0) {\n        msgId.current = unReadMsgList[0].messages[0]._id;\n        pushMessagesInChat(msgList, unReadMsgList);\n        setUnReadMsg({ id: msgId.current, total: totalUnReadMsg });\n        setHasMoreBottom(hasMoreBottom);\n        await markAsRead(chatId);\n      } else {\n        if (msgList.length > 0) {\n          msgId.current = msgList.at(-1).messages.at(-1)._id;\n        }\n      }\n      setChatDetails(chatDetails);\n      setChats(msgList);\n      setHasMoreTop(hasMoreTop);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    } finally {\n      setPageLoader(false);\n    }\n  };\n\n  const getMessages = async (msgId, latest) => {\n    try {\n      let {\n        data: {\n          data: { list, hasMore },\n        },\n      } = await getChatMessagesByMsgId(chatId, msgId, { limit, latest });\n      let chat = [...chats];\n      latest\n        ? pushMessagesInChat(chat, list)\n        : unShiftMessagesInChat(chat, list.reverse());\n      setChats(chat);\n      latest ? setHasMoreBottom(hasMore) : setHasMoreTop(hasMore);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    } finally {\n      latest ? setBottomLoader(false) : setTopLoader(false);\n    }\n  };\n\n  const unShiftMessagesInChat = (chats, list) => {\n    list.forEach(({ day, messages }, i) => {\n      let index = chats.findIndex(({ day: key }) => {\n        return day === key;\n      });\n      index === -1\n        ? chats.unshift({ day, messages })\n        : chats[index].messages.unshift(...messages);\n\n      if (i === 0) {\n        msgId.current = messages[messages.length - 1]._id;\n      }\n    });\n  };\n\n  const pushMessagesInChat = (chats, list) => {\n    list.forEach(({ day, messages }, i) => {\n      let index = chats.findIndex(({ day: key }) => {\n        return day === getDate(key);\n      });\n      index === -1\n        ? chats.push({ day, messages })\n        : chats[index].messages.push(...messages);\n      if (i === 0) {\n        msgId.current = list[0].messages[0]._id;\n      }\n    });\n  };\n\n  const addMessageInChat = (chats, messages, day) => {\n    let index = chats.findIndex(({ day: key }) => {\n      return day === key;\n    });\n\n    index === -1\n      ? chats.push({ day, messages: [messages] })\n      : chats[index].messages.push(messages);\n  };\n\n  const updateSeenStatus = async (msgId) => {\n    if (!chatId) return;\n\n    try {\n      await markAsReadByMsgId(chatId, msgId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleScroll = ({\n    target: { scrollTop, scrollHeight, clientHeight },\n  }) => {\n    if (pageLoader || topLoader || bottomLoader) return;\n\n    if (hasMoreTop && scrollTop === 0) {\n      const msgId = chatContainerRef.current\n        .querySelector(\"[first]\")\n        .getAttribute(\"msgid\");\n      setTopLoader(true);\n      getMessages(msgId, 0);\n    }\n\n    if (hasMoreBottom && scrollHeight - scrollTop === clientHeight) {\n      const msgId = chatContainerRef.current\n        .querySelector(\"[last]\")\n        .getAttribute(\"msgid\");\n      setBottomLoader(true);\n      getMessages(msgId, 1);\n    }\n  };\n\n  const onSend = async (msg) => {\n    try {\n      let body = {\n        msg: msg,\n        date: new Date().toISOString(),\n        ...(replyId && { reply: replyId }),\n      };\n      await createMessage(chatId, body);\n      replyId && clearReplyMsg();\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const onDelete = (date, id) => {\n    const key = getDate(date);\n\n    if (!chats.hasOwnProperty(key)) return;\n\n    const data = chats[key].filter(({ _id }) => id !== _id);\n\n    setChats({ ...chats, [key]: data });\n  };\n\n  //   Copy Msg\n  const onCopy = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  //   Reply Msg\n  const onReply = (date, id) => {\n    const key = getDate(date);\n    setReplyId({ key, id });\n  };\n\n  const clearReplyMsg = () => {\n    setReplyId(null);\n  };\n\n  const focusMsgById = (id = msgId.current || null, behavior = \"auto\") => {\n    if (!id) return;\n\n    const element = document.querySelector(`[msgid='${id}']`);\n\n    if (!element) return;\n\n    element.scrollIntoView({ block: \"center\", behavior });\n  };\n\n  const replyMsg = useMemo(() => {\n    return null;\n    // return chats.find(({ _id }) => replyId === _id);\n  }, [replyId]);\n\n  const handleMessage = ({ message, chat, userId }) => {\n    setChats((prev) => {\n      showNotification(message.msg);\n      playMessageRingTone();\n      let chats = [...prev];\n      addMessageInChat(chats, message, getDate(message.date));\n      msgId.current = message._id;\n      message.sender.id !== userId &&\n        sessionStorage.getItem(\"chatId\") === chat._id &&\n        updateSeenStatus(message._id);\n      return chats;\n    });\n  };\n\n  const handleSeen = ({ userId, msgId }) => {\n    if (user?.id === userId) return;\n\n    const markAsSeen = (id) => {\n      const element = document.querySelector(`[msgid='${id}']`);\n\n      if (!element) return;\n\n      const ele = element.querySelector(\"[seen]\");\n      ele.setAttribute(\"seen\", true);\n    };\n\n    if (!Array.isArray(msgId)) {\n      markAsSeen(msgId);\n      return;\n    }\n\n    msgId.forEach(({ id }) => {\n      markAsSeen(id);\n    });\n  };\n\n  const handleReaction = async (emoji, reactions, msgId) => {\n    let reaction;\n\n    for (const [index, { users }] of reactions.entries()) {\n      reaction = users.find(({ id }, ind) => {\n        return user.id === id;\n      });\n      if (reaction) break;\n    }\n\n    reaction\n      ? handleUpdateReaction({\n          reaction: emoji,\n          id: reaction.reactionId,\n        })\n      : handleCreateReaction({ reaction: emoji, msgId });\n  };\n\n  const handleCreateReaction = async (data) => {\n    try {\n      let res = await createReaction(data);\n      console.log(res);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const handleUpdateReaction = async (data) => {\n    try {\n      let res = await updateReaction(data);\n      console.log(res);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  // Ringtone\n  const playMessageRingTone = () => {\n    audio.muted = false;\n    audio.play();\n  };\n\n  // Notification\n  const showNotification = async (body) => {\n    if (Notification.permission !== \"granted\") return;\n\n    new Notification(\"New Message\", {\n      body,\n      icon: favicon,\n    });\n  };\n\n  const handleFocus = () => {\n    const { matches } = matchMedia(`(max-width: 768px)`);\n\n    if (!matches) return;\n\n    focusMsgById();\n  };\n\n  const getDate = (date) => {\n    return date.split(\"T\")[0];\n  };\n\n  //   Video Call\n  const handleCall = async (type) => {\n    setShowVideo(true);\n\n    try {\n      peerConnection.current = new RTCPeerConnection();\n\n      peerConnection.current.onicecandidate = handleIceCandidate;\n      peerConnection.current.ontrack = handleTrack;\n\n      let localStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        },\n        video: true,\n      });\n      let localVideo = document.querySelector(\"#local-stream\");\n      localVideo.srcObject = localStream;\n      localStream.getTracks().forEach((track) => {\n        peerConnection.current.addTrack(track, localStream);\n      });\n      let offer = await peerConnection.current.createOffer({\n        offerToReceiveAudio: 1,\n        offerToReceiveVideo: 1,\n      });\n\n      await peerConnection.current.setLocalDescription(offer);\n\n      const data = { date: new Date().toISOString(), offer, type };\n\n      await initiateCall(chatId, data);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const handleTrack = ({ streams: [remoteStream] }) => {\n    let remoteVideo = document.querySelector(\"#remote-stream\");\n    remoteVideo.srcObject = remoteStream;\n  };\n\n  const handleIceCandidate = (e) => {\n    const {\n      target: { localDescription },\n      candidate,\n    } = e;\n    if (candidate) {\n      iceCandidate.current = candidate;\n    }\n\n    if (!candidate || !iceCandidate.current) {\n      if (localDescription.type === \"offer\") {\n        let data = {\n          offer: localDescription,\n          iceCandidate: iceCandidate.current,\n        };\n        socket.emit(\"send-offer\", data, chatId);\n      } else if (localDescription.type === \"answer\") {\n        let data = {\n          answer: localDescription,\n          iceCandidate: iceCandidate.current,\n        };\n        socket.emit(\"send-answer\", data, chatId);\n      }\n    }\n  };\n\n  const handleOffer = async ({ iceCandidate, offer }) => {\n    setShowVideo(true);\n\n    const pc = new RTCPeerConnection();\n    peerConnection.current = pc;\n\n    peerConnection.current.onicecandidate = handleIceCandidate;\n    peerConnection.current.ontrack = handleTrack;\n\n    try {\n      let localStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        },\n        video: true,\n      });\n      let localVideo = document.querySelector(\"#local-stream\");\n      localVideo.srcObject = localStream;\n      localStream.getTracks().forEach((track) => {\n        peerConnection.current.addTrack(track, localStream);\n      });\n      await peerConnection.current.setRemoteDescription(offer);\n      await peerConnection.current.addIceCandidate(iceCandidate);\n      let answer = await peerConnection.current.createAnswer();\n      await peerConnection.current.setLocalDescription(answer);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleAnswer = async ({ iceCandidate, answer }) => {\n    try {\n      await peerConnection.current.setRemoteDescription(answer);\n      await peerConnection.current.addIceCandidate(iceCandidate);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div\n      ref={chatContainerRef}\n      className={styles.chat_wrapper}\n      onScroll={debounce(handleScroll, 100)}\n    >\n      <Header\n        clearChatId={clearChatId}\n        chatDetails={chatDetails}\n        handleCall={handleCall}\n        toggleInfo={toggleInfo}\n        show={!!chatId}\n      />\n      {topLoader && <Loader />}\n      <div id=\"conversation\" className={styles.chat_section}>\n        {pageLoader ? (\n          <PageLoader />\n        ) : (\n          <Conversation\n            chats={chats}\n            onDelete={onDelete}\n            onCopy={onCopy}\n            onReply={onReply}\n            userId={user?.id}\n            otherUserId={chatDetails?.userId || chatDetails?.users}\n            focusMsgById={focusMsgById}\n            chatId={chatId}\n            unReadMsg={unReadMsg}\n            isGroupChat={!!chatDetails?.group}\n            reactionList={reactions}\n            handleReaction={handleReaction}\n          />\n        )}\n      </div>\n      <div className={styles.typing} typingstatus=\"\"></div>\n      {bottomLoader && <Loader />}\n      <TextArea\n        onSend={onSend}\n        onFocus={handleFocus}\n        chatId={chatId}\n        otherUser={\n          chatDetails?.userId\n            ? { id: chatDetails?.userId, name: chatDetails?.name }\n            : chatDetails?.users\n        }\n      />\n      <CSSTransition\n        in={Boolean(replyId)}\n        timeout={250}\n        classNames={{\n          enterActive: styles.reply_enter,\n          exitActive: styles.reply_exit,\n        }}\n        unmountOnExit\n      >\n        <div className={styles.reply_container} ref={replyContainerRef}>\n          <div className={styles.reply_card}>\n            <span className=\"truncate-4\">{replyMsg?.msg}</span>\n            <i className={`bx-x ${styles.close}`} onClick={clearReplyMsg}></i>\n          </div>\n        </div>\n      </CSSTransition>\n      <OffCanvas\n        isOpen={showInfo}\n        position=\"right\"\n        className={styles.profile_sidebar}\n        toggle={toggleInfo}\n        zIndex={2001}\n      >\n        <div>Hello</div>\n      </OffCanvas>\n      <VideoPopup isOpen={showVideo} />\n    </div>\n  );\n};\n\n/*  bx bx-microphone\n  bx bx-video\n  bx-exit-fullscreen\n  bx-fullscreen\n  bxs-phone-call\n  bxs-phone\n  bx-cast\n  bx-stop\n  bx-pin bxs-pin */\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getCallHistory = () => {\n  return axios({ url: endpoints.call.history, method: \"get\" });\n};\n\nexport const initiateCall = (chatId, data) => {\n  return axios({\n    url: `${endpoints.call.initiate}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getChatByType = (type) => {\n  return axios({ url: `${endpoints.chat.list}/${type}`, method: \"get\" });\n};\n\nexport const getChatById = (chatId, params) => {\n  return axios({\n    url: `${endpoints.chat.chatDetails}/${chatId}`,\n    method: \"get\",\n    params,\n  });\n};\n\nexport const getChatMessagesByMsgId = (chatId, msgId, params) => {\n  return axios({\n    url: `${endpoints.chat.chatMessages}/${chatId}/${msgId}`,\n    method: \"get\",\n    params,\n  });\n};\n\nexport const addToFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.addFavourite, method: \"put\" });\n};\n\nexport const removeFromFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.removeFavourite, method: \"delete\" });\n};\n\nexport const markAsReadByMsgId = (chatId, msgId) => {\n  return axios({\n    url: `${endpoints.chat.markAsReadByMsgId}/${chatId}/${msgId}`,\n    method: \"put\",\n  });\n};\n\nexport const markAsRead = (chatId) => {\n  return axios({\n    url: `${endpoints.chat.markAsRead}/${chatId}`,\n    method: \"put\",\n  });\n};\n\nexport const getAllReactions = () => {\n  return axios({\n    url: `${endpoints.chat.reactions}`,\n    method: \"get\",\n  });\n};\n\nexport const createReaction = (data) => {\n  return axios({\n    url: `${endpoints.chat.createReaction}`,\n    method: \"post\",\n    data,\n  });\n};\n\nexport const updateReaction = (data) => {\n  return axios({\n    url: `${endpoints.chat.updateReaction}`,\n    method: \"put\",\n    data,\n  });\n};\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const createMessage = (chatId, data) => {\n  return axios({\n    url: `${endpoints.message.createMessage}/${chatId}`,\n    method: \"post\",\n    data,\n  });\n};\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\nimport { Toast } from \"components\";\n\nexport const metaData = (data) => {\n  return axios({ url: endpoints.others?.metaData, method: \"post\", data });\n};\n\nexport const fileUpload = async (data) => {\n  return axios({\n    url: endpoints.others?.fileUpload,\n    method: \"post\",\n    data,\n  });\n};\n","import Axios from \"axios\";\nimport { cookies } from \"utils\";\nimport { baseURL } from \"config\";\n\nexport const axios = Axios.create({ baseURL });\n\naxios.interceptors.request.use(\n  (config) => {\n    const cookie = cookies();\n\n    const token = cookie.get(\"authToken\");\n    if (token) {\n      config.headers.Authorization = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      document.dispatchEvent(new CustomEvent(\"logout\"));\n    }\n    return Promise.reject(error?.response?.data);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"chat_wrapper\":\"Chat_chat_wrapper__gid5u\",\"chat_section\":\"Chat_chat_section__3JB1Y\",\"chat_skeleton\":\"Chat_chat_skeleton__6w6um\",\"reply_enter\":\"Chat_reply_enter__QdcSq\",\"from-bottom\":\"Chat_from-bottom__yjlc1\",\"reply_exit\":\"Chat_reply_exit__CEbB5\",\"reply_container\":\"Chat_reply_container__Hj6fN\",\"reply_card\":\"Chat_reply_card__6LYq6\",\"close\":\"Chat_close__2-iqb\",\"profile_sidebar\":\"Chat_profile_sidebar__DYbvp\",\"typing\":\"Chat_typing__kJgMt\",\"zoom-in\":\"Chat_zoom-in__p3vEB\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Conversation_container__I7CJi\",\"chat_wrapper\":\"Conversation_chat_wrapper__S3O8R\",\"end\":\"Conversation_end__ZMbi5\",\"chat_card\":\"Conversation_chat_card__jz70L\",\"reply_card\":\"Conversation_reply_card__AEy90\",\"msg_time\":\"Conversation_msg_time__wN53F\",\"tick\":\"Conversation_tick__RkyEe\",\"user_name\":\"Conversation_user_name__RDhDd\",\"clock\":\"Conversation_clock__y4n8i\",\"options\":\"Conversation_options__WLSBI\",\"date\":\"Conversation_date__ZfQTB\",\"unread_msg\":\"Conversation_unread_msg__yFItk\",\"section\":\"Conversation_section__wG88I\",\"load\":\"Conversation_load__rqCbg\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reaction_container__yXj24\",\"wrapper\":\"Reaction_wrapper__m5dkH\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_header\":\"Header_chat_header__QpmQQ\",\"user_info\":\"Header_user_info__iEHZa\",\"go_back\":\"Header_go_back__lCP4K\",\"user_name\":\"Header_user_name__Trw38\",\"chat_icons\":\"Header_chat_icons__JOz6D\",\"show\":\"Header_show__F368n\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__gQpe+\",\"rotation\":\"Loader_rotation__Q-TX-\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageLoader_container__WEvcy\",\"card\":\"PageLoader_card__Fmr-Q\",\"end\":\"PageLoader_end__ahXWd\",\"line\":\"PageLoader_line__y70Cl\"};","// extracted by mini-css-extract-plugin\nexport default {\"emoji_enter\":\"Emoji_emoji_enter__hm4pK\",\"emoji_container\":\"Emoji_emoji_container__FeFYJ\",\"emoji_wrapper\":\"Emoji_emoji_wrapper__Mni-7\",\"emoji-anime\":\"Emoji_emoji-anime__vboWK\",\"emoji_exit\":\"Emoji_emoji_exit__yUFuv\",\"emoji_header\":\"Emoji_emoji_header__HJTsc\",\"emoji_type\":\"Emoji_emoji_type__Hmz-D\",\"close\":\"Emoji_close__Tlf+A\",\"search_emoji\":\"Emoji_search_emoji__QHZYs\",\"search_icon\":\"Emoji_search_icon__EVS9p\",\"emoji_card\":\"Emoji_emoji_card__cVAbK\",\"emoji_title\":\"Emoji_emoji_title__uaqYB\",\"emoji_list\":\"Emoji_emoji_list__zUunG\",\"emoji_icon\":\"Emoji_emoji_icon__QGww2\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_input\":\"TextArea_chat_input__+dl6x\",\"input_field\":\"TextArea_input_field__++nq-\"};","// extracted by mini-css-extract-plugin\nexport default {\"video_container\":\"VideoPopup_video_container__EcnPE\",\"remote\":\"VideoPopup_remote__x1HvW\",\"local\":\"VideoPopup_local__xIYkj\"};"],"names":["Options","onReply","onDelete","onCopy","selector","date","msgId","msg","DropDown","placement","DropDownItem","className","onClick","Reaction","reactions","styles","zIndex","map","emoji","index","id","src","baseURL","Conversation","chats","userId","focusMsgById","otherUserId","unReadMsg","isGroupChat","reactionList","handleReaction","Fragment","key","day","messages","moment","format","sender","name","avatar","_id","seen","reply","total","classNames","msgid","first","length","last","style","color","split","Date","Array","isArray","toString","includes","Header","clearChatId","chatDetails","toggleInfo","handleCall","show","matches","matchMedia","Avatar","size","status","userid","users","Loader","PageLoader","cardWidth","skeleton","from","Math","floor","random","width","Emoji","toggle","isOpen","onChange","emojiRef","useRef","handleEmoji","label","icon","title","offsetTop","document","querySelector","current","scrollTo","Tooltip","offset","type","placeholder","ref","Object","entries","emojis","list","description","TextArea","onSend","onFocus","chatId","otherUser","useState","showEmoji","setShowEmoji","text","setText","rec","setRec","typing","setTyping","inputRef","useEffect","recognition","window","SpeechRecognition","webkitSpeechRecognition","interimResults","continuous","onstart","e","console","log","onend","onresult","results","transcript","result","join","concat","onerror","getUsers","onSubmit","value","handleFile","files","target","formData","FormData","file","append","fileUpload","res","Toast","message","onKeyDown","socket","debounce","htmlFor","multiple","hidden","onPointerDown","start","onPointerUp","stop","VideoPopup","Modal","closeClickOnOutside","poster","autoPlay","muted","audio","Audio","messageRingTone","Chat","chatContainerRef","replyContainerRef","useAuth","user","peerConnection","setChats","showInfo","setShowInfo","showVideo","setShowVideo","replyId","setReplyId","setChatDetails","topLoader","setTopLoader","bottomLoader","setBottomLoader","setUnReadMsg","pageLoader","setPageLoader","hasMoreTop","setHasMoreTop","hasMoreBottom","setHasMoreBottom","iceCandidate","addEventListener","handleSocket","removeEventListener","getChatDetails","handleMessage","handleSeen","handleOffer","handleAnswer","handleStartTyping","handleEndTyping","userName","sessionStorage","getItem","element","setAttribute","removeAttribute","getChatById","limit","data","unReadMsgList","msgList","totalUnReadMsg","pushMessagesInChat","markAsRead","at","getMessages","latest","getChatMessagesByMsgId","hasMore","chat","unShiftMessagesInChat","reverse","forEach","i","findIndex","unshift","getDate","push","updateSeenStatus","markAsReadByMsgId","body","toISOString","createMessage","clearReplyMsg","behavior","scrollIntoView","block","replyMsg","useMemo","prev","showNotification","playMessageRingTone","addMessageInChat","markAsSeen","reaction","find","ind","handleUpdateReaction","reactionId","handleCreateReaction","createReaction","updateReaction","play","Notification","permission","favicon","RTCPeerConnection","onicecandidate","handleIceCandidate","ontrack","handleTrack","navigator","mediaDevices","getUserMedia","echoCancellation","noiseSuppression","autoGainControl","video","localStream","srcObject","getTracks","track","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","initiateCall","remoteStream","streams","localDescription","candidate","answer","pc","setRemoteDescription","addIceCandidate","createAnswer","onScroll","scrollTop","scrollHeight","clientHeight","getAttribute","hasOwnProperty","filter","clipboard","writeText","group","typingstatus","in","Boolean","timeout","enterActive","exitActive","unmountOnExit","OffCanvas","position","getCallHistory","axios","url","endpoints","method","getChatByType","params","addToFavourite","removeFromFavourite","getAllReactions","metaData","Axios","interceptors","request","use","config","token","cookies","get","headers","Authorization","error","Promise","reject","response","dispatchEvent","CustomEvent"],"sourceRoot":""}