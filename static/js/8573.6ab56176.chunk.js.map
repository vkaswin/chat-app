{"version":3,"file":"static/js/8573.6ab56176.chunk.js","mappings":"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","sources":["pages/Chats/index.js","services/Chat.js","webpack://react-chat-app/./src/pages/Chats/Chats.module.scss?1b4d"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Avatar, Toast } from \"components\";\nimport { classNames } from \"utils\";\nimport { useRouter } from \"hooks\";\nimport { getAllChats } from \"services/Chat\";\nimport chatList from \"data/user.json\";\n\nimport styles from \"./Chats.module.scss\";\n\nconst Chats = () => {\n  const router = useRouter();\n\n  const { favourites, users, channels } = chatList;\n\n  useEffect(() => {\n    // getChats();\n  }, []);\n\n  const getChats = async () => {\n    try {\n      let res = await getAllChats();\n      console.log(res);\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    }\n  };\n\n  const handleChat = (userId = \"4321\") => {\n    router.push({ search: `?chatId=${userId}` });\n  };\n\n  return (\n    <div className={styles.chat_list_container}>\n      <div className={styles.title}>\n        <b>Favourites</b>\n      </div>\n      {favourites.map(({ messagecount, name, profile, status }, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.user_card, {\n              [styles.active]: index === 0,\n            })}\n            onClick={() => handleChat()}\n          >\n            <div className={styles.user}>\n              <Avatar src={profile} userName={name} status={status} size={35} />\n              <div className={styles.msg}>\n                <span className=\"truncate-1\">{name}</span>\n                <span>Loreum Ipsum</span>\n              </div>\n            </div>\n            <div\n              className={classNames(styles.time, {\n                [styles.top]: !messagecount,\n              })}\n            >\n              <span>12:30 pm</span>\n              {messagecount && <label>{10}</label>}\n            </div>\n          </div>\n        );\n      })}\n      <div className={styles.title}>\n        <b>Recent Chats</b>\n      </div>\n      {users.map(({ messagecount, name, profile, status }, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.user_card, {\n              [styles.active]: false,\n            })}\n            onClick={() => handleChat()}\n          >\n            <div className={styles.user}>\n              <Avatar src={profile} userName={name} status={status} size={35} />\n              <div className={styles.msg}>\n                <span className=\"truncate-1\">{name}</span>\n                <span>Loreum Ipsum</span>\n              </div>\n            </div>\n            <div\n              className={classNames(styles.time, {\n                [styles.top]: !messagecount,\n              })}\n            >\n              <span>12:30 pm</span>\n              {messagecount && <label>{messagecount}</label>}\n            </div>\n          </div>\n        );\n      })}\n      <div className={styles.title}>\n        <b>Channels</b>\n        <button>\n          <i className=\"bx-plus\"></i>\n        </button>\n      </div>\n      {channels.map(({ messagecount, name }, index) => {\n        return (\n          <div\n            key={index}\n            className={classNames(styles.user_card, {\n              [styles.active]: false,\n            })}\n            onClick={() => handleChat()}\n          >\n            <div className={styles.user}>\n              <Avatar userName={name} size={35} />\n              <div className={styles.msg}>\n                <span className=\"truncate-1\">{name}</span>\n                <span>Loreum Ipsum</span>\n              </div>\n            </div>\n            <div\n              className={classNames(styles.time, {\n                [styles.top]: !messagecount,\n              })}\n            >\n              <span>12:30 pm</span>\n              {messagecount && <label>{messagecount}</label>}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Chats;\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getAllChats = () => {\n  return axios({ url: endpoints.chat.getChats, method: \"get\" });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"chat_list_container\":\"Chats_chat_list_container__Lo8ht\",\"title\":\"Chats_title__ncpOR\",\"user_card\":\"Chats_user_card__m+jOS\",\"active\":\"Chats_active__07HzW\",\"user\":\"Chats_user__LeGpu\",\"msg\":\"Chats_msg__y5EF6\",\"time\":\"Chats_time__hAPQQ\",\"top\":\"Chats_top__dpX3P\"};"],"names":["router","useRouter","favourites","chatList","users","channels","useEffect","handleChat","userId","push","search","className","styles","map","index","messagecount","name","profile","status","classNames","onClick","Avatar","src","userName","size","getAllChats","axios","url","endpoints","method"],"sourceRoot":""}