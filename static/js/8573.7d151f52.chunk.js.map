{"version":3,"file":"static/js/8573.7d151f52.chunk.js","mappings":"6SAUMA,EACI,SADJA,EAEO,YAFPA,EAGG,QA0RT,UAvRc,WACZ,OAA+BC,EAAAA,EAAAA,WAAvBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAEhB,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,OAAQ,GACRC,UAAW,GACXC,MAAO,KAHT,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KAEQL,EAA6BE,EAA7BF,UAAWD,EAAkBG,EAAlBH,OAAQE,EAAUC,EAAVD,OAE3BK,EAAAA,EAAAA,YAAU,WAGR,OAFAC,SAASC,iBAAiB,SAAUC,GACpCC,IACO,WACLH,SAASI,oBAAoB,SAAUF,EACxC,CACF,GAAE,IAEH,IAAMA,EAAe,WACnBG,EAAAA,OAAAA,GAAU,UAAWC,GAErBD,EAAAA,OAAAA,GAAU,eAAgBE,GAE1BF,EAAAA,OAAAA,GAAU,aAAcG,EACzB,EAEKL,EAAQ,yCAAG,0HAE0BM,QAAQC,IAAI,EACjDC,EAAAA,EAAAA,eAAcxB,IACdwB,EAAAA,EAAAA,eAAcxB,IACdwB,EAAAA,EAAAA,eAAcxB,KALH,+BAERK,EAFQ,KAEAC,EAFA,KAEWC,EAFX,KAObE,GAAY,kBACPD,GADM,IAETH,OAAQA,EAAOoB,KAAKA,KACpBnB,UAAWA,EAAUmB,KAAKA,KAC1BlB,MAAOA,EAAMkB,KAAKA,QAXP,mDAcbC,EAAAA,EAAAA,OAAM,CAAEC,KAAM,QAASC,QAAO,OAAC,EAAD,yBAAE,KAAOA,UAd1B,yBAgBbjB,GAAa,GAhBA,6EAAH,qDAoBRkB,EAAoB,SAACC,EAAIH,EAAMI,GACnCC,EAAWL,EAAMI,GACjB5B,EAAW2B,EACZ,EAEKE,EAAa,SAACL,EAAMI,GACxBtB,GAAY,SAACwB,GACX,IAAMC,GAAK,UAAQD,GAGnB,OAFAC,EAAMP,GAAMI,GAAOI,MAAQ,EAEpBD,CACR,GACF,EAEKf,EAAgB,SAAC,GAIhB,IAAD,IAHJS,QAAWQ,EAGP,EAHOA,IAAKC,EAGZ,EAHYA,KAAMC,EAGlB,EAHkBA,OAGlB,IAFJC,KAAarC,EAET,EAFIsC,IAAajC,EAEjB,EAFiBA,MAAOkC,EAExB,EAFwBA,WAAYC,EAEpC,EAFoCA,MACxCC,EACI,EADJA,OAEIC,IAAgBrC,EAEhBqB,GAAO,QACTQ,IAAAA,EACAC,KAAAA,EACAG,IAAKtC,GACD0C,EACA,CAAErC,MAAO,CAAEsC,KAAMtC,EAAMsC,KAAMC,OAAQvC,EAAMuC,SAC3C,CACEC,KAAML,EAAMM,MAAK,qBAAGR,MAAkBG,CAArB,MAIzBlC,GAAY,SAACwB,GACX,IAAIgB,EAAML,EACN,QACAH,EAAWS,SAASP,GACpB,YACA,SAEAZ,EAAQE,EAAKgB,GAAKE,WAAU,YAC9B,OAD2C,EAAVX,MAClBtC,CAChB,IAED,IAAe,IAAX6B,EAEF,OADAH,EAAQO,MAAQ,GACT,kBAAKF,GAAZ,cAAmBgB,EAAM,CAACrB,KAG5B,IAAIM,GAAK,OAAOD,EAAKgB,IACrB,EAAgBf,EAAMkB,OAAOrB,EAAO,GAA/BsB,GAAL,eAOA,OALInD,IAAWoD,eAAeC,QAAQ,WAAaZ,IAAWL,EAAOR,GACnEF,EAAQO,MAAQ,EAEhBP,EAAQO,OAASkB,EAAQlB,OAAS,GAAK,GAElC,kBACFF,GADL,cAEGgB,EAFH,CAEUrB,GAFV,eAEsBM,KAEvB,GACF,EAEKsB,EAAU,SAACnB,GAIf,OAFEA,EAAKoB,MAAM,KAAK,MAAO,IAAIC,MAAOC,cAAcF,MAAM,KAAK,GAGzDG,IAAOvB,GAAMwB,OAAO,UACpBD,IAAOvB,GAAMwB,OAAO,WACzB,EAEKzC,EAAoB,SAAClB,EAAQ4D,GACjC,IAAMC,EAAUlD,SAASmD,cAAT,mBAAmC9D,EAAnC,OAEX6D,GAELA,EACGC,cAAc,kBACdC,aAAa,SAFhB,UAE6BH,EAASL,MAAM,KAAK,GAFjD,iBAGD,EAEKpC,EAAkB,SAACnB,GACvB,IAAM6D,EAAUlD,SAASmD,cAAT,mBAAmC9D,EAAnC,OAEX6D,GAELA,EAAQC,cAAc,kBAAkBE,gBAAgB,SACzD,EAED,OAAIxD,GAAkB,yCAGpB,iBAAKyD,UAAWC,EAAAA,QAAAA,oBAAhB,UACG9D,EAAU+D,OAAS,IAClB,UAAC,EAAAC,SAAD,YACE,gBAAKH,UAAWC,EAAAA,QAAAA,MAAhB,UACE,wCAED9D,EAAUiE,KACT,WAEExC,GACI,IAFFS,EAEC,EAFDA,IAAKL,EAEJ,EAFIA,MAAOC,EAEX,EAFWA,IAAKC,EAEhB,EAFgBA,KAEhB,IAFsBU,KAAQF,EAE9B,EAF8BA,KAAMC,EAEpC,EAFoCA,OAAQ0B,EAE5C,EAF4CA,OAAQ1C,EAEpD,EAFoDA,GAGvD,OACE,iBAEEqC,WAAWM,EAAAA,EAAAA,YAAWL,EAAAA,QAAAA,WAAD,UAClBA,EAAAA,QAAAA,OAAgB5B,IAAQtC,IAE3BwE,QAAS,kBAAM7C,EAAkBW,EAAKxC,EAAiB+B,EAA9C,EACT4C,OAAQnC,EANV,WAQE,iBAAK2B,UAAWC,EAAAA,QAAAA,KAAhB,WACE,SAAC,EAAAQ,OAAD,CACEC,IAAK/B,EACLD,KAAMA,EACN2B,OAAQA,EACRM,KAAM,GACNnC,OAAQb,KAEV,iBAAKqC,UAAWC,EAAAA,QAAAA,IAAYW,aAAa,GAAzC,WACE,iBAAMZ,UAAU,aAAhB,SAA8BtB,KAC9B,iBAAMsB,UAAU,aAAhB,SAA8B/B,WAGlC,iBACE+B,WAAWM,EAAAA,EAAAA,YAAWL,EAAAA,QAAAA,MAAD,UAClBA,EAAAA,QAAAA,KAAcjC,IAFnB,WAKE,0BAAOqB,EAAQnB,KACdF,EAAQ,IAAK,2BAAQA,SA1BnBJ,EA8BV,OAIN1B,EAAOgE,OAAS,IACf,UAAC,EAAAC,SAAD,YACE,gBAAKH,UAAWC,EAAAA,QAAAA,MAAhB,UACE,0CAED/D,EAAOkE,KACN,WAEExC,GACI,IAFFS,EAEC,EAFDA,IAAKL,EAEJ,EAFIA,MAAOC,EAEX,EAFWA,IAAKC,EAEhB,EAFgBA,KAEhB,IAFsBU,KAAQF,EAE9B,EAF8BA,KAAMC,EAEpC,EAFoCA,OAAQ0B,EAE5C,EAF4CA,OAAQ1C,EAEpD,EAFoDA,GAGvD,OACE,iBAEEqC,WAAWM,EAAAA,EAAAA,YAAWL,EAAAA,QAAAA,WAAD,UAClBA,EAAAA,QAAAA,OAAgB5B,IAAQtC,IAE3BwE,QAAS,kBAAM7C,EAAkBW,EAAKxC,EAAc+B,EAA3C,EACT4C,OAAQnC,EANV,WAQE,iBAAK2B,UAAWC,EAAAA,QAAAA,KAAhB,WACE,SAAC,EAAAQ,OAAD,CACEC,IAAK/B,EACLD,KAAMA,EACN2B,OAAQA,EACRM,KAAM,GACNnC,OAAQb,KAEV,iBAAKqC,UAAWC,EAAAA,QAAAA,IAAYW,aAAa,GAAzC,WACE,iBAAMZ,UAAU,aAAhB,SAA8BtB,KAC9B,iBAAMsB,UAAU,aAAhB,SAA8B/B,WAGlC,iBACE+B,WAAWM,EAAAA,EAAAA,YAAWL,EAAAA,QAAAA,MAAD,UAClBA,EAAAA,QAAAA,KAAcjC,IAFnB,WAKE,0BAAOqB,EAAQnB,KACdF,EAAQ,IAAK,2BAAQA,SA1BnBJ,EA8BV,OAINxB,EAAM8D,OAAS,IACd,UAAC,EAAAC,SAAD,YACE,iBAAKH,UAAWC,EAAAA,QAAAA,MAAhB,WACE,mCACA,6BACE,cAAGD,UAAU,iBAGhB5D,EAAMgE,KACL,WAAqDxC,GAAW,IAA7DS,EAA4D,EAA5DA,IAAKL,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,IAAKC,EAA2C,EAA3CA,KAA2C,IAArC9B,MAASsC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OACvC,OACE,iBAEEqB,WAAWM,EAAAA,EAAAA,YAAWL,EAAAA,QAAAA,WAAD,UAClBA,EAAAA,QAAAA,OAAgB5B,IAAQtC,IAE3BwE,QAAS,kBAAM7C,EAAkBW,EAAKxC,EAAa+B,EAA1C,EACT4C,OAAQnC,EANV,WAQE,iBAAK2B,UAAWC,EAAAA,QAAAA,KAAhB,WACE,SAAC,EAAAQ,OAAD,CAAQC,IAAK/B,EAAQD,KAAMA,EAAMiC,KAAM,MACvC,iBAAKX,UAAWC,EAAAA,QAAAA,IAAYW,aAAa,GAAzC,WACE,iBAAMZ,UAAU,aAAhB,SAA8BtB,KAC9B,iBAAMsB,UAAU,aAAhB,SAA8B/B,WAGlC,iBACE+B,WAAWM,EAAAA,EAAAA,YAAWL,EAAAA,QAAAA,MAAD,UAClBA,EAAAA,QAAAA,KAAcjC,IAFnB,WAKE,0BAAOqB,EAAQnB,KACdF,EAAQ,IAAK,2BAAQA,SApBnBJ,EAwBV,SAMZ,C,iUClSYP,EAAgB,SAACG,GAC5B,OAAOqD,EAAAA,EAAAA,OAAM,CAAEC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,KAAL,YAA4BvD,GAAQwD,OAAQ,OAC/D,EAEYC,EAAc,SAAClF,EAAQmF,GAClC,OAAOL,EAAAA,EAAAA,OAAM,CACXC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,YAAL,YAAmChF,GACtCiF,OAAQ,MACRE,OAAAA,GAEH,EAEYC,EAAyB,SAACpF,EAAQqF,EAAOF,GACpD,OAAOL,EAAAA,EAAAA,OAAM,CACXC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,aAAL,YAAoChF,EAApC,YAA8CqF,GACjDJ,OAAQ,MACRE,OAAAA,GAEH,EAEYG,EAAiB,SAACtF,GAC7B,OAAO8E,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,aAA6BC,OAAQ,OAC1D,EAEYM,EAAsB,SAACvF,GAClC,OAAO8E,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,gBAAgCC,OAAQ,UAC7D,EAEYO,EAAoB,SAACxF,EAAQqF,GACxC,OAAOP,EAAAA,EAAAA,OAAM,CACXC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,kBAAL,YAAyChF,EAAzC,YAAmDqF,GACtDJ,OAAQ,OAEX,EAEYQ,EAAa,SAACzF,GACzB,OAAO8E,EAAAA,EAAAA,OAAM,CACXC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,WAAL,YAAkChF,GACrCiF,OAAQ,OAEX,C,2GCvCYH,EAAQY,IAAAA,OAAa,CAAEC,QAAAA,EAAAA,UAEpCb,EAAMc,aAAaC,QAAQC,KACzB,SAACC,GACC,IAEMC,GAFSC,EAAAA,EAAAA,WAEMC,IAAI,aAIzB,OAHIF,IACFD,EAAOI,QAAQC,cAAgBJ,GAE1BD,CACR,IACD,SAACM,GACC,OAAOjF,QAAQkF,OAAOD,EACvB,IAGHvB,EAAMc,aAAaW,SAAST,KAC1B,SAACS,GACC,OAAOA,CACR,IACD,SAACF,GAAW,IAAD,EAIT,OAH8B,MAA1BA,EAAME,SAASjC,QACjB3D,SAAS6F,cAAc,IAAIC,YAAY,WAElCrF,QAAQkF,OAAR,OAAeD,QAAf,IAAeA,GAAf,UAAeA,EAAOE,gBAAtB,aAAe,EAAiBhF,KACxC,G,8BC7BH,WAAgB,oBAAsB,mCAAmC,MAAQ,qBAAqB,UAAY,yBAAyB,OAAS,sBAAsB,KAAO,oBAAoB,IAAM,mBAAmB,KAAO,oBAAoB,IAAM,mB","sources":["pages/Chats/index.js","services/Chat.js","services/index.js","webpack://react-chat-app/./src/pages/Chats/Chats.module.scss?1b4d"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Avatar, Toast } from \"components\";\nimport { classNames } from \"utils\";\nimport { useAuth } from \"hooks\";\nimport { getChatByType } from \"services/Chat\";\nimport moment from \"moment\";\nimport { socket } from \"socket\";\n\nimport styles from \"./Chats.module.scss\";\n\nconst types = {\n  recent: \"recent\",\n  favourite: \"favourite\",\n  group: \"group\",\n};\n\nconst Chats = () => {\n  const { chatId, handleChat } = useAuth();\n\n  const [chatList, setChatList] = useState({\n    recent: [],\n    favourite: [],\n    group: [],\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { favourite, recent, group } = chatList;\n\n  useEffect(() => {\n    document.addEventListener(\"socket\", handleSocket);\n    getChats();\n    return () => {\n      document.removeEventListener(\"socket\", handleSocket);\n    };\n  }, []);\n\n  const handleSocket = () => {\n    socket.on(\"message\", handleMessage);\n\n    socket.on(\"start-typing\", handleStartTyping);\n\n    socket.on(\"end-typing\", handleEndTyping);\n  };\n\n  const getChats = async () => {\n    try {\n      let [recent, favourite, group] = await Promise.all([\n        getChatByType(types.recent),\n        getChatByType(types.favourite),\n        getChatByType(types.group),\n      ]);\n      setChatList({\n        ...chatList,\n        recent: recent.data.data,\n        favourite: favourite.data.data,\n        group: group.data.data,\n      });\n    } catch (error) {\n      Toast({ type: \"error\", message: error?.message });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleClickOnChat = (id, type, index) => {\n    clearCount(type, index);\n    handleChat(id);\n  };\n\n  const clearCount = (type, index) => {\n    setChatList((prev) => {\n      const chats = { ...prev };\n      chats[type][index].count = 0;\n\n      return chats;\n    });\n  };\n\n  const handleMessage = ({\n    message: { msg, date, sender },\n    chat: { _id: chatId, group, favourites, users },\n    userId,\n  }) => {\n    let isGroupChat = !!group;\n\n    let message = {\n      msg,\n      date,\n      _id: chatId,\n      ...(isGroupChat\n        ? { group: { name: group.name, avatar: group.avatar } }\n        : {\n            user: users.find(({ _id }) => _id !== userId),\n          }),\n    };\n\n    setChatList((prev) => {\n      let key = isGroupChat\n        ? \"group\"\n        : favourites.includes(userId)\n        ? \"favourite\"\n        : \"recent\";\n\n      let index = prev[key].findIndex(({ _id }) => {\n        return _id === chatId;\n      });\n\n      if (index === -1) {\n        message.count = 1;\n        return { ...prev, [key]: [message] };\n      }\n\n      let chats = [...prev[key]];\n      let [oldChat] = chats.splice(index, 1);\n\n      if (chatId === sessionStorage.getItem(\"chatId\") || userId === sender.id) {\n        message.count = 0;\n      } else {\n        message.count = (oldChat.count || 0) + 1;\n      }\n      return {\n        ...prev,\n        [key]: [message, ...chats],\n      };\n    });\n  };\n\n  const getDate = (date) => {\n    const isCurrentDate =\n      date.split(\"T\")[0] === new Date().toISOString().split(\"T\")[0];\n\n    return isCurrentDate\n      ? moment(date).format(\"h:mm a\")\n      : moment(date).format(\"DD/MM/YY\");\n  };\n\n  const handleStartTyping = (chatId, userName) => {\n    const element = document.querySelector(`[chatid='${chatId}']`);\n\n    if (!element) return;\n\n    element\n      .querySelector(\"[typingstatus]\")\n      .setAttribute(\"typing\", `${userName.split(\" \")[0]} is typing...`);\n  };\n\n  const handleEndTyping = (chatId) => {\n    const element = document.querySelector(`[chatid='${chatId}']`);\n\n    if (!element) return;\n\n    element.querySelector(\"[typingstatus]\").removeAttribute(\"typing\");\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div className={styles.chat_list_container}>\n      {favourite.length > 0 && (\n        <Fragment>\n          <div className={styles.title}>\n            <b>Favourites</b>\n          </div>\n          {favourite.map(\n            (\n              { _id, count, msg, date, user: { name, avatar, status, id } },\n              index\n            ) => {\n              return (\n                <div\n                  key={index}\n                  className={classNames(styles.user_card, {\n                    [styles.active]: _id === chatId,\n                  })}\n                  onClick={() => handleClickOnChat(_id, types.favourite, index)}\n                  chatid={_id}\n                >\n                  <div className={styles.user}>\n                    <Avatar\n                      src={avatar}\n                      name={name}\n                      status={status}\n                      size={35}\n                      userId={id}\n                    />\n                    <div className={styles.msg} typingstatus=\"\">\n                      <span className=\"truncate-1\">{name}</span>\n                      <span className=\"truncate-1\">{msg}</span>\n                    </div>\n                  </div>\n                  <div\n                    className={classNames(styles.time, {\n                      [styles.top]: !count,\n                    })}\n                  >\n                    <span>{getDate(date)}</span>\n                    {count > 0 && <label>{count}</label>}\n                  </div>\n                </div>\n              );\n            }\n          )}\n        </Fragment>\n      )}\n      {recent.length > 0 && (\n        <Fragment>\n          <div className={styles.title}>\n            <b>Recent Chats</b>\n          </div>\n          {recent.map(\n            (\n              { _id, count, msg, date, user: { name, avatar, status, id } },\n              index\n            ) => {\n              return (\n                <div\n                  key={index}\n                  className={classNames(styles.user_card, {\n                    [styles.active]: _id === chatId,\n                  })}\n                  onClick={() => handleClickOnChat(_id, types.recent, index)}\n                  chatid={_id}\n                >\n                  <div className={styles.user}>\n                    <Avatar\n                      src={avatar}\n                      name={name}\n                      status={status}\n                      size={35}\n                      userId={id}\n                    />\n                    <div className={styles.msg} typingstatus=\"\">\n                      <span className=\"truncate-1\">{name}</span>\n                      <span className=\"truncate-1\">{msg}</span>\n                    </div>\n                  </div>\n                  <div\n                    className={classNames(styles.time, {\n                      [styles.top]: !count,\n                    })}\n                  >\n                    <span>{getDate(date)}</span>\n                    {count > 0 && <label>{count}</label>}\n                  </div>\n                </div>\n              );\n            }\n          )}\n        </Fragment>\n      )}\n      {group.length > 0 && (\n        <Fragment>\n          <div className={styles.title}>\n            <b>Groups</b>\n            <button>\n              <i className=\"bx-plus\"></i>\n            </button>\n          </div>\n          {group.map(\n            ({ _id, count, msg, date, group: { name, avatar } }, index) => {\n              return (\n                <div\n                  key={index}\n                  className={classNames(styles.user_card, {\n                    [styles.active]: _id === chatId,\n                  })}\n                  onClick={() => handleClickOnChat(_id, types.group, index)}\n                  chatid={_id}\n                >\n                  <div className={styles.user}>\n                    <Avatar src={avatar} name={name} size={35} />\n                    <div className={styles.msg} typingstatus=\"\">\n                      <span className=\"truncate-1\">{name}</span>\n                      <span className=\"truncate-1\">{msg}</span>\n                    </div>\n                  </div>\n                  <div\n                    className={classNames(styles.time, {\n                      [styles.top]: !count,\n                    })}\n                  >\n                    <span>{getDate(date)}</span>\n                    {count > 0 && <label>{count}</label>}\n                  </div>\n                </div>\n              );\n            }\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Chats;\n","import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getChatByType = (type) => {\n  return axios({ url: `${endpoints.chat.list}/${type}`, method: \"get\" });\n};\n\nexport const getChatById = (chatId, params) => {\n  return axios({\n    url: `${endpoints.chat.chatDetails}/${chatId}`,\n    method: \"get\",\n    params,\n  });\n};\n\nexport const getChatMessagesByMsgId = (chatId, msgId, params) => {\n  return axios({\n    url: `${endpoints.chat.chatMessages}/${chatId}/${msgId}`,\n    method: \"get\",\n    params,\n  });\n};\n\nexport const addToFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.addFavourite, method: \"put\" });\n};\n\nexport const removeFromFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.removeFavourite, method: \"delete\" });\n};\n\nexport const markAsReadByMsgId = (chatId, msgId) => {\n  return axios({\n    url: `${endpoints.chat.markAsReadByMsgId}/${chatId}/${msgId}`,\n    method: \"put\",\n  });\n};\n\nexport const markAsRead = (chatId) => {\n  return axios({\n    url: `${endpoints.chat.markAsRead}/${chatId}`,\n    method: \"put\",\n  });\n};\n","import Axios from \"axios\";\nimport { cookies } from \"utils\";\nimport { baseURL } from \"config\";\n\nexport const axios = Axios.create({ baseURL });\n\naxios.interceptors.request.use(\n  (config) => {\n    const cookie = cookies();\n\n    const token = cookie.get(\"authToken\");\n    if (token) {\n      config.headers.Authorization = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      document.dispatchEvent(new CustomEvent(\"logout\"));\n    }\n    return Promise.reject(error?.response?.data);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"chat_list_container\":\"Chats_chat_list_container__Lo8ht\",\"title\":\"Chats_title__ncpOR\",\"user_card\":\"Chats_user_card__m+jOS\",\"active\":\"Chats_active__07HzW\",\"user\":\"Chats_user__LeGpu\",\"msg\":\"Chats_msg__y5EF6\",\"time\":\"Chats_time__hAPQQ\",\"top\":\"Chats_top__dpX3P\"};"],"names":["types","useAuth","chatId","handleChat","useState","recent","favourite","group","chatList","setChatList","isLoading","setIsLoading","useEffect","document","addEventListener","handleSocket","getChats","removeEventListener","socket","handleMessage","handleStartTyping","handleEndTyping","Promise","all","getChatByType","data","Toast","type","message","handleClickOnChat","id","index","clearCount","prev","chats","count","msg","date","sender","chat","_id","favourites","users","userId","isGroupChat","name","avatar","user","find","key","includes","findIndex","splice","oldChat","sessionStorage","getItem","getDate","split","Date","toISOString","moment","format","userName","element","querySelector","setAttribute","removeAttribute","className","styles","length","Fragment","map","status","classNames","onClick","chatid","Avatar","src","size","typingstatus","axios","url","endpoints","method","getChatById","params","getChatMessagesByMsgId","msgId","addToFavourite","removeFromFavourite","markAsReadByMsgId","markAsRead","Axios","baseURL","interceptors","request","use","config","token","cookies","get","headers","Authorization","error","reject","response","dispatchEvent","CustomEvent"],"sourceRoot":""}