{"version":3,"file":"static/js/9855.8dd5144b.chunk.js","mappings":"6ZAGaA,EAAiB,WAC5B,OAAOC,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,YAA4BC,OAAQ,OACzD,EAEYC,EAAoB,WAC/B,OAAOJ,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,eAA+BC,OAAQ,OAC5D,EAEYE,EAAgB,WAC3B,OAAOL,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,WAA2BC,OAAQ,OACxD,EAEYG,EAAc,SAACC,GAC1B,OAAOP,EAAAA,EAAAA,OAAM,CACXC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,YAAL,YAAmCK,GACtCJ,OAAQ,OAEX,EAEYK,EAAiB,SAACD,GAC7B,OAAOP,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,aAA6BC,OAAQ,OAC1D,EAEYM,EAAsB,SAACF,GAClC,OAAOP,EAAAA,EAAAA,OAAM,CAAEC,IAAKC,EAAAA,UAAAA,KAAAA,gBAAgCC,OAAQ,UAC7D,EAEYO,EAAa,SAACH,EAAQI,GACjC,OAAOX,EAAAA,EAAAA,OAAM,CACXC,IAAI,GAAD,OAAKC,EAAAA,UAAAA,KAAAA,WAAL,YAAkCK,GACrCJ,OAAQ,MACRQ,KAAAA,GAEH,C,2GChCYX,EAAQY,IAAAA,OAAa,CAAEC,QAAAA,EAAAA,UAEpCb,EAAMc,aAAaC,QAAQC,KACzB,SAACC,GACC,IAEMC,GAFSC,EAAAA,EAAAA,WAEMC,IAAI,aAIzB,OAHIF,IACFD,EAAOI,QAAQC,cAAgBJ,GAE1BD,CACR,IACD,SAACM,GACC,OAAOC,QAAQC,OAAOF,EACvB,IAGHvB,EAAMc,aAAaY,SAASV,KAC1B,SAACU,GACC,OAAOA,CACR,IACD,SAACH,GAAW,IAAD,EAIT,OAH8B,MAA1BA,EAAMG,SAASC,QACjBC,SAASC,cAAc,IAAIC,YAAY,WAElCN,QAAQC,OAAR,OAAeF,QAAf,IAAeA,GAAf,UAAeA,EAAOG,gBAAtB,aAAe,EAAiBf,KACxC,G","sources":["services/Chat.js","services/index.js"],"sourcesContent":["import { axios } from \"services\";\nimport { endpoints } from \"config\";\n\nexport const getRecentChats = () => {\n  return axios({ url: endpoints.chat.recentChats, method: \"get\" });\n};\n\nexport const getFavouriteChats = () => {\n  return axios({ url: endpoints.chat.favouriteChats, method: \"get\" });\n};\n\nexport const getGroupChats = () => {\n  return axios({ url: endpoints.chat.groupChats, method: \"get\" });\n};\n\nexport const getChatById = (chatId) => {\n  return axios({\n    url: `${endpoints.chat.chatDetails}/${chatId}`,\n    method: \"get\",\n  });\n};\n\nexport const addToFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.addFavourite, method: \"put\" });\n};\n\nexport const removeFromFavourite = (chatId) => {\n  return axios({ url: endpoints.chat.removeFavourite, method: \"delete\" });\n};\n\nexport const markAsRead = (chatId, data) => {\n  return axios({\n    url: `${endpoints.chat.markAsRead}/${chatId}`,\n    method: \"put\",\n    data,\n  });\n};\n","import Axios from \"axios\";\nimport { cookies } from \"utils\";\nimport { baseURL } from \"config\";\n\nexport const axios = Axios.create({ baseURL });\n\naxios.interceptors.request.use(\n  (config) => {\n    const cookie = cookies();\n\n    const token = cookie.get(\"authToken\");\n    if (token) {\n      config.headers.Authorization = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      document.dispatchEvent(new CustomEvent(\"logout\"));\n    }\n    return Promise.reject(error?.response?.data);\n  }\n);\n"],"names":["getRecentChats","axios","url","endpoints","method","getFavouriteChats","getGroupChats","getChatById","chatId","addToFavourite","removeFromFavourite","markAsRead","data","Axios","baseURL","interceptors","request","use","config","token","cookies","get","headers","Authorization","error","Promise","reject","response","status","document","dispatchEvent","CustomEvent"],"sourceRoot":""}